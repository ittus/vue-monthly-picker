{"version":3,"sources":["webpack:///docs/js/vendor.e3858ebe321f0f5cebfb.js","webpack:///./~/vue-loader/lib/component-normalizer.js","webpack:///./~/vue-style-loader/lib/listToStyles.js","webpack:///(webpack)/buildin/module.js","webpack:///./~/css-loader/lib/css-base.js","webpack:///./~/vue-style-loader/lib/addStylesClient.js","webpack:///./~/moment/moment.js"],"names":["webpackJsonp","0","module","exports","rawScriptExports","compiledTemplate","injectStyles","scopeId","moduleIdentifier","esModule","scriptExports","type","default","options","render","staticRenderFns","_scopeId","hook","context","this","$vnode","ssrContext","parent","__VUE_SSR_CONTEXT__","call","_registeredComponents","add","_ssrRegister","functional","existing","beforeCreate","h","concat","27","parentId","list","styles","newStyles","i","length","item","id","css","media","sourceMap","part","parts","push","28","webpackPolyfill","deprecate","paths","children","Object","defineProperty","enumerable","get","l","29","cssWithMappingToString","useSourceMap","content","cssMapping","btoa","sourceMapping","toComment","sources","map","source","sourceRoot","join","unescape","encodeURIComponent","JSON","stringify","toString","modules","mediaQuery","alreadyImportedModules","30","__webpack_require__","addStylesToDom","domStyle","stylesInDom","refs","j","addStyle","createStyleElement","styleElement","document","createElement","head","appendChild","obj","update","remove","querySelector","ssrIdKey","isProduction","noop","parentNode","removeChild","isOldIE","styleIndex","singletonCounter","singletonElement","applyToSingletonTag","bind","applyToTag","newObj","index","styleSheet","cssText","replaceText","cssNode","createTextNode","childNodes","insertBefore","setAttribute","ssrId","firstChild","hasDocument","DEBUG","Error","listToStyles","getElementsByTagName","navigator","test","userAgent","toLowerCase","_isProduction","_options","newList","mayRemove","textStore","replacement","filter","Boolean","5","global","factory","hooks","hookCallback","apply","arguments","isArray","input","Array","prototype","isObject","hasOwnProp","a","b","hasOwnProperty","isObjectEmpty","getOwnPropertyNames","k","isUndefined","isNumber","isDate","Date","arr","fn","res","extend","valueOf","createUTC","format","locale","strict","createLocalOrUTC","utc","defaultParsingFlags","empty","unusedTokens","unusedInput","overflow","charsLeftOver","nullInput","invalidEra","invalidMonth","invalidFormat","userInvalidated","iso","parsedDateParts","era","meridiem","rfc2822","weekdayMismatch","getParsingFlags","m","_pf","isValid","_isValid","flags","parsedParts","some","isNowValid","isNaN","_d","getTime","invalidWeekday","_strict","undefined","bigHour","isFrozen","createInvalid","NaN","copyConfig","to","from","prop","val","_isAMomentObject","_i","_f","_l","_tzm","_isUTC","_offset","_locale","momentProperties","Moment","config","updateInProgress","updateOffset","isMoment","warn","msg","suppressDeprecationWarnings","console","firstTime","deprecationHandler","arg","key","args","slice","stack","deprecateSimple","name","deprecations","isFunction","Function","set","_config","_dayOfMonthOrdinalParseLenient","RegExp","_dayOfMonthOrdinalParse","_ordinalParse","mergeConfigs","parentConfig","childConfig","Locale","calendar","mom","now","output","_calendar","zeroFill","number","targetLength","forceSign","absNumber","Math","abs","zerosToFill","pow","max","substr","addFormatToken","token","padded","ordinal","callback","func","formatTokenFunctions","localeData","removeFormattingTokens","match","replace","makeFormatFunction","array","formattingTokens","formatMoment","expandFormat","formatFunctions","invalidDate","replaceLongDateFormatTokens","longDateFormat","localFormattingTokens","lastIndex","_longDateFormat","formatUpper","toUpperCase","tok","_invalidDate","_ordinal","relativeTime","withoutSuffix","string","isFuture","_relativeTime","pastFuture","diff","addUnitAlias","unit","shorthand","lowerCase","aliases","normalizeUnits","units","normalizeObjectUnits","inputObject","normalizedProp","normalizedInput","addUnitPriority","priority","priorities","getPrioritizedUnits","unitsObj","u","sort","isLeapYear","year","absFloor","ceil","floor","toInt","argumentForCoercion","coercedNumber","value","isFinite","makeGetSet","keepTime","set$1","month","date","daysInMonth","stringGet","stringSet","prioritized","addRegexToken","regex","strictRegex","regexes","isStrict","getParseRegexForToken","unescapeFormat","s","regexEscape","matched","p1","p2","p3","p4","addParseToken","tokens","addWeekParseToken","_w","addTimeToArrayFromToken","_a","mod","n","x","modMonth","localeMonths","_months","isFormat","MONTHS_IN_FORMAT","localeMonthsShort","_monthsShort","handleStrictParse","monthName","ii","llc","toLocaleLowerCase","_monthsParse","_longMonthsParse","_shortMonthsParse","monthsShort","months","indexOf","localeMonthsParse","_monthsParseExact","setMonth","dayOfMonth","monthsParse","min","getSetMonth","getDaysInMonth","monthsShortRegex","computeMonthsParse","_monthsShortStrictRegex","_monthsShortRegex","defaultMonthsShortRegex","monthsRegex","_monthsStrictRegex","_monthsRegex","defaultMonthsRegex","cmpLenRev","shortPieces","longPieces","mixedPieces","daysInYear","getIsLeapYear","createDate","y","d","M","ms","getFullYear","setFullYear","createUTCDate","UTC","getUTCFullYear","setUTCFullYear","firstWeekOffset","dow","doy","fwd","getUTCDay","dayOfYearFromWeeks","week","weekday","resYear","resDayOfYear","localWeekday","weekOffset","dayOfYear","weekOfYear","resWeek","weeksInYear","weekOffsetNext","localeWeek","_week","localeFirstDayOfWeek","localeFirstDayOfYear","getSetWeek","getSetISOWeek","parseWeekday","weekdaysParse","parseInt","parseIsoWeekday","shiftWeekdays","ws","localeWeekdays","weekdays","_weekdays","day","localeWeekdaysShort","_weekdaysShort","localeWeekdaysMin","_weekdaysMin","handleStrictParse$1","weekdayName","_weekdaysParse","_shortWeekdaysParse","_minWeekdaysParse","weekdaysMin","weekdaysShort","localeWeekdaysParse","_weekdaysParseExact","_fullWeekdaysParse","getSetDayOfWeek","getDay","getSetLocaleDayOfWeek","getSetISODayOfWeek","weekdaysRegex","computeWeekdaysParse","_weekdaysStrictRegex","_weekdaysRegex","defaultWeekdaysRegex","weekdaysShortRegex","_weekdaysShortStrictRegex","_weekdaysShortRegex","defaultWeekdaysShortRegex","weekdaysMinRegex","_weekdaysMinStrictRegex","_weekdaysMinRegex","defaultWeekdaysMinRegex","minp","shortp","longp","minPieces","hFormat","hours","kFormat","lowercase","minutes","matchMeridiem","_meridiemParse","localeIsPM","charAt","localeMeridiem","isLower","commonPrefix","arr1","arr2","minl","normalizeLocale","chooseLocale","names","next","split","loadLocale","globalLocale","oldLocale","locales","_abbr","require","getSetGlobalLocale","e","values","data","getLocale","defineLocale","baseConfig","abbr","parentLocale","localeFamilies","forEach","updateLocale","tmpLocale","listLocales","keys","checkOverflow","MONTH","DATE","YEAR","HOUR","MINUTE","SECOND","MILLISECOND","_overflowDayOfYear","_overflowWeeks","WEEK","_overflowWeekday","WEEKDAY","configFromISO","allowTime","dateFormat","timeFormat","tzFormat","extendedIsoRegex","exec","basicIsoRegex","isoDates","isoTimes","tzRegex","configFromStringAndFormat","extractFromRFC2822Strings","yearStr","monthStr","dayStr","hourStr","minuteStr","secondStr","result","untruncateYear","defaultLocaleMonthsShort","preprocessRFC2822","checkWeekday","weekdayStr","parsedInput","defaultLocaleWeekdaysShort","calculateOffset","obsOffset","militaryOffset","numOffset","obsOffsets","hm","configFromRFC2822","parsedArray","setUTCMinutes","getUTCMinutes","configFromString","aspNetJsonRegex","createFromInputFallback","defaults","c","currentDateArray","nowValue","_useUTC","getUTCMonth","getUTCDate","getMonth","getDate","configFromArray","currentDate","expectedWeekday","yearToUse","dayOfYearFromWeekInfo","_dayOfYear","_nextDay","w","weekYear","temp","weekdayOverflow","curWeek","GG","W","E","createLocal","gg","ISO_8601","RFC_2822","skipped","stringLength","totalParsedInputLength","_meridiem","meridiemFixWrap","erasConvertYear","hour","isPm","meridiemHour","isPM","configFromStringAndArray","tempConfig","bestMoment","scoreToBeat","currentScore","validFormatFound","bestFormatIsValid","score","configFromObject","dayOrDate","minute","second","millisecond","createFromConfig","prepareConfig","preparse","configFromInput","isUTC","pickBy","moments","isDurationValid","unitHasDecimal","ordering","parseFloat","isValid$1","createInvalid$1","createDuration","Duration","duration","years","quarters","quarter","weeks","isoWeek","days","seconds","milliseconds","_milliseconds","_days","_data","_bubble","isDuration","absRound","round","compareArrays","array1","array2","dontConvert","len","lengthDiff","diffs","offset","separator","utcOffset","sign","offsetFromString","matcher","chunk","matches","chunkOffset","cloneWithOffset","model","clone","setTime","local","getDateOffset","getTimezoneOffset","getSetOffset","keepLocalTime","keepMinutes","localAdjust","matchShortOffset","_changeInProgress","addSubtract","getSetZone","setOffsetToUTC","setOffsetToLocal","subtract","setOffsetToParsedOffset","tZone","matchOffset","hasAlignedHourOffset","isDaylightSavingTime","isDaylightSavingTimeShifted","_isDSTShifted","other","toArray","isLocal","isUtcOffset","isUtc","ret","diffRes","aspNetRegex","isoRegex","parseIso","momentsDifference","inp","positiveMomentsDifference","base","isAfter","isBefore","createAdder","direction","period","dur","tmp","isAdding","isString","String","isMomentInput","isNumberOrStringArray","isMomentInputObject","property","objectTest","propertyTest","properties","arrayTest","dataTypeTest","isCalendarSpec","getCalendarFormat","myMoment","calendar$1","time","formats","sod","startOf","calendarFormat","localInput","endOf","isBetween","inclusivity","localFrom","localTo","isSame","inputMs","isSameOrAfter","isSameOrBefore","asFloat","that","zoneDelta","monthDiff","anchor2","adjust","wholeMonthDiff","anchor","toISOString","keepOffset","toDate","inspect","prefix","datetime","suffix","zone","inputString","defaultFormatUtc","defaultFormat","postformat","humanize","fromNow","toNow","newLocaleData","mod$1","dividend","divisor","localStartOfDate","MS_PER_400_YEARS","utcStartOfDate","startOfDate","isoWeekday","MS_PER_MINUTE","MS_PER_HOUR","MS_PER_SECOND","unix","toObject","toJSON","isValid$2","parsingFlags","invalidAt","creationData","localeEras","eras","_eras","since","until","Infinity","localeErasParse","eraName","narrow","localeErasConvertYear","dir","getEraName","getEraNarrow","getEraAbbr","getEraYear","erasNameRegex","computeErasParse","_erasNameRegex","_erasRegex","erasAbbrRegex","_erasAbbrRegex","erasNarrowRegex","_erasNarrowRegex","matchEraAbbr","matchEraName","matchEraNarrow","matchEraYearOrdinal","_eraYearOrdinalRegex","matchUnsigned","abbrPieces","namePieces","narrowPieces","addWeekYearFormatToken","getter","getSetWeekYear","getSetWeekYearHelper","getSetISOWeekYear","getISOWeeksInYear","getISOWeeksInISOWeekYear","isoWeekYear","getWeeksInYear","weekInfo","getWeeksInWeekYear","weeksTarget","setWeekAll","dayOfYearData","getSetQuarter","getSetDayOfYear","parseMs","getZoneAbbr","getZoneName","createUnix","createInZone","parseZone","preParsePostFormat","get$1","field","setter","listMonthsImpl","out","listWeekdaysImpl","localeSorted","shift","listMonths","listMonthsShort","listWeekdays","listWeekdaysShort","listWeekdaysMin","mathAbs","addSubtract$1","add$1","subtract$1","absCeil","bubble","monthsFromDays","monthsToDays","daysToMonths","as","valueOf$1","makeAs","alias","clone$1","get$2","makeGetter","substituteTimeAgo","relativeTime$1","posNegDuration","thresholds","ss","getSetRelativeTimeRounding","roundingFunction","getSetRelativeTimeThreshold","threshold","limit","argWithSuffix","argThresholds","withSuffix","th","assign","toISOString$1","totalSign","ymSign","daysSign","hmsSign","abs$1","total","asSeconds","toFixed","fun","t","defaultCalendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","defaultLongDateFormat","LTS","LT","L","LL","LLL","LLLL","defaultDayOfMonthOrdinalParse","defaultRelativeTime","future","past","mm","hh","dd","ww","MM","yy","match1","match2","match3","match4","match6","match1to2","match3to4","match5to6","match1to3","match1to4","match1to6","matchSigned","matchTimestamp","matchWord","o","defaultLocaleMonths","parseTwoDigitYear","getSetYear","defaultLocaleWeek","defaultLocaleWeekdays","defaultLocaleWeekdaysMin","kInput","_isPm","pos","pos1","pos2","defaultLocaleMeridiemParse","getSetHour","dayOfMonthOrdinalParse","meridiemParse","UT","GMT","EDT","EST","CDT","CST","MDT","MST","PDT","PST","prototypeMin","prototypeMax","invalid","lang","erasParse","eraYearOrdinalParse","getSetDayOfMonth","getSetMinute","getSetSecond","getSetMillisecond","proto","Symbol","for","eraNarrow","eraAbbr","eraYear","isoWeeks","weeksInWeekYear","isoWeeksInYear","isoWeeksInISOWeekYear","isDST","zoneAbbr","zoneName","dates","isDSTShifted","proto$1","firstDayOfYear","firstDayOfWeek","langData","asMilliseconds","asMinutes","asHours","asDays","asWeeks","asMonths","asQuarters","asYears","proto$2","toIsoString","version","relativeTimeRounding","relativeTimeThreshold","HTML5_FMT","DATETIME_LOCAL","DATETIME_LOCAL_SECONDS","DATETIME_LOCAL_MS","TIME","TIME_SECONDS","TIME_MS"],"mappings":"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","file":"docs/js/vendor.e3858ebe321f0f5cebfb.js","sourcesContent":["webpackJsonp([1],{\n\n/***/ 0:\n/***/ (function(module, exports) {\n\n/* globals __VUE_SSR_CONTEXT__ */\n\n// this module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle\n\nmodule.exports = function normalizeComponent (\n  rawScriptExports,\n  compiledTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier /* server only */\n) {\n  var esModule\n  var scriptExports = rawScriptExports = rawScriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof rawScriptExports.default\n  if (type === 'object' || type === 'function') {\n    esModule = rawScriptExports\n    scriptExports = rawScriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (compiledTemplate) {\n    options.render = compiledTemplate.render\n    options.staticRenderFns = compiledTemplate.staticRenderFns\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = injectStyles\n  }\n\n  if (hook) {\n    var functional = options.functional\n    var existing = functional\n      ? options.render\n      : options.beforeCreate\n    if (!functional) {\n      // inject component registration as beforeCreate hook\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    } else {\n      // register for functioal component in vue file\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return existing(h, context)\n      }\n    }\n  }\n\n  return {\n    esModule: esModule,\n    exports: scriptExports,\n    options: options\n  }\n}\n\n\n/***/ }),\n\n/***/ 27:\n/***/ (function(module, exports) {\n\n/**\n * Translates the list format produced by css-loader into something\n * easier to manipulate.\n */\nmodule.exports = function listToStyles (parentId, list) {\n  var styles = []\n  var newStyles = {}\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i]\n    var id = item[0]\n    var css = item[1]\n    var media = item[2]\n    var sourceMap = item[3]\n    var part = {\n      id: parentId + ':' + i,\n      css: css,\n      media: media,\n      sourceMap: sourceMap\n    }\n    if (!newStyles[id]) {\n      styles.push(newStyles[id] = { id: id, parts: [part] })\n    } else {\n      newStyles[id].parts.push(part)\n    }\n  }\n  return styles\n}\n\n\n/***/ }),\n\n/***/ 28:\n/***/ (function(module, exports) {\n\nmodule.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tif(!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.l;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.i;\r\n\t\t\t}\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n};\r\n\n\n/***/ }),\n\n/***/ 29:\n/***/ (function(module, exports) {\n\n/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n\n\n/***/ }),\n\n/***/ 30:\n/***/ (function(module, exports, __webpack_require__) {\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n  Modified by Evan You @yyx990803\n*/\n\nvar hasDocument = typeof document !== 'undefined'\n\nif (typeof DEBUG !== 'undefined' && DEBUG) {\n  if (!hasDocument) {\n    throw new Error(\n    'vue-style-loader cannot be used in a non-browser environment. ' +\n    \"Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.\"\n  ) }\n}\n\nvar listToStyles = __webpack_require__(27)\n\n/*\ntype StyleObject = {\n  id: number;\n  parts: Array<StyleObjectPart>\n}\n\ntype StyleObjectPart = {\n  css: string;\n  media: string;\n  sourceMap: ?string\n}\n*/\n\nvar stylesInDom = {/*\n  [id: number]: {\n    id: number,\n    refs: number,\n    parts: Array<(obj?: StyleObjectPart) => void>\n  }\n*/}\n\nvar head = hasDocument && (document.head || document.getElementsByTagName('head')[0])\nvar singletonElement = null\nvar singletonCounter = 0\nvar isProduction = false\nvar noop = function () {}\nvar options = null\nvar ssrIdKey = 'data-vue-ssr-id'\n\n// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n// tags it will allow on a page\nvar isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\\b/.test(navigator.userAgent.toLowerCase())\n\nmodule.exports = function (parentId, list, _isProduction, _options) {\n  isProduction = _isProduction\n\n  options = _options || {}\n\n  var styles = listToStyles(parentId, list)\n  addStylesToDom(styles)\n\n  return function update (newList) {\n    var mayRemove = []\n    for (var i = 0; i < styles.length; i++) {\n      var item = styles[i]\n      var domStyle = stylesInDom[item.id]\n      domStyle.refs--\n      mayRemove.push(domStyle)\n    }\n    if (newList) {\n      styles = listToStyles(parentId, newList)\n      addStylesToDom(styles)\n    } else {\n      styles = []\n    }\n    for (var i = 0; i < mayRemove.length; i++) {\n      var domStyle = mayRemove[i]\n      if (domStyle.refs === 0) {\n        for (var j = 0; j < domStyle.parts.length; j++) {\n          domStyle.parts[j]()\n        }\n        delete stylesInDom[domStyle.id]\n      }\n    }\n  }\n}\n\nfunction addStylesToDom (styles /* Array<StyleObject> */) {\n  for (var i = 0; i < styles.length; i++) {\n    var item = styles[i]\n    var domStyle = stylesInDom[item.id]\n    if (domStyle) {\n      domStyle.refs++\n      for (var j = 0; j < domStyle.parts.length; j++) {\n        domStyle.parts[j](item.parts[j])\n      }\n      for (; j < item.parts.length; j++) {\n        domStyle.parts.push(addStyle(item.parts[j]))\n      }\n      if (domStyle.parts.length > item.parts.length) {\n        domStyle.parts.length = item.parts.length\n      }\n    } else {\n      var parts = []\n      for (var j = 0; j < item.parts.length; j++) {\n        parts.push(addStyle(item.parts[j]))\n      }\n      stylesInDom[item.id] = { id: item.id, refs: 1, parts: parts }\n    }\n  }\n}\n\nfunction createStyleElement () {\n  var styleElement = document.createElement('style')\n  styleElement.type = 'text/css'\n  head.appendChild(styleElement)\n  return styleElement\n}\n\nfunction addStyle (obj /* StyleObjectPart */) {\n  var update, remove\n  var styleElement = document.querySelector('style[' + ssrIdKey + '~=\"' + obj.id + '\"]')\n\n  if (styleElement) {\n    if (isProduction) {\n      // has SSR styles and in production mode.\n      // simply do nothing.\n      return noop\n    } else {\n      // has SSR styles but in dev mode.\n      // for some reason Chrome can't handle source map in server-rendered\n      // style tags - source maps in <style> only works if the style tag is\n      // created and inserted dynamically. So we remove the server rendered\n      // styles and inject new ones.\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  if (isOldIE) {\n    // use singleton mode for IE9.\n    var styleIndex = singletonCounter++\n    styleElement = singletonElement || (singletonElement = createStyleElement())\n    update = applyToSingletonTag.bind(null, styleElement, styleIndex, false)\n    remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true)\n  } else {\n    // use multi-style-tag mode in all other cases\n    styleElement = createStyleElement()\n    update = applyToTag.bind(null, styleElement)\n    remove = function () {\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  update(obj)\n\n  return function updateStyle (newObj /* StyleObjectPart */) {\n    if (newObj) {\n      if (newObj.css === obj.css &&\n          newObj.media === obj.media &&\n          newObj.sourceMap === obj.sourceMap) {\n        return\n      }\n      update(obj = newObj)\n    } else {\n      remove()\n    }\n  }\n}\n\nvar replaceText = (function () {\n  var textStore = []\n\n  return function (index, replacement) {\n    textStore[index] = replacement\n    return textStore.filter(Boolean).join('\\n')\n  }\n})()\n\nfunction applyToSingletonTag (styleElement, index, remove, obj) {\n  var css = remove ? '' : obj.css\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = replaceText(index, css)\n  } else {\n    var cssNode = document.createTextNode(css)\n    var childNodes = styleElement.childNodes\n    if (childNodes[index]) styleElement.removeChild(childNodes[index])\n    if (childNodes.length) {\n      styleElement.insertBefore(cssNode, childNodes[index])\n    } else {\n      styleElement.appendChild(cssNode)\n    }\n  }\n}\n\nfunction applyToTag (styleElement, obj) {\n  var css = obj.css\n  var media = obj.media\n  var sourceMap = obj.sourceMap\n\n  if (media) {\n    styleElement.setAttribute('media', media)\n  }\n  if (options.ssrId) {\n    styleElement.setAttribute(ssrIdKey, obj.id)\n  }\n\n  if (sourceMap) {\n    // https://developer.chrome.com/devtools/docs/javascript-debugging\n    // this makes source maps inside style tags work properly in Chrome\n    css += '\\n/*# sourceURL=' + sourceMap.sources[0] + ' */'\n    // http://stackoverflow.com/a/26603875\n    css += '\\n/*# sourceMappingURL=data:application/json;base64,' + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + ' */'\n  }\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild)\n    }\n    styleElement.appendChild(document.createTextNode(css))\n  }\n}\n\n\n/***/ }),\n\n/***/ 5:\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(module) {var require;//! moment.js\n//! version : 2.27.0\n//! authors : Tim Wood, Iskren Chernev, Moment.js contributors\n//! license : MIT\n//! momentjs.com\n\n;(function (global, factory) {\n     true ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    global.moment = factory()\n}(this, (function () { 'use strict';\n\n    var hookCallback;\n\n    function hooks() {\n        return hookCallback.apply(null, arguments);\n    }\n\n    // This is done to register the method called with moment()\n    // without creating circular dependencies.\n    function setHookCallback(callback) {\n        hookCallback = callback;\n    }\n\n    function isArray(input) {\n        return (\n            input instanceof Array ||\n            Object.prototype.toString.call(input) === '[object Array]'\n        );\n    }\n\n    function isObject(input) {\n        // IE8 will treat undefined and null as object if it wasn't for\n        // input != null\n        return (\n            input != null &&\n            Object.prototype.toString.call(input) === '[object Object]'\n        );\n    }\n\n    function hasOwnProp(a, b) {\n        return Object.prototype.hasOwnProperty.call(a, b);\n    }\n\n    function isObjectEmpty(obj) {\n        if (Object.getOwnPropertyNames) {\n            return Object.getOwnPropertyNames(obj).length === 0;\n        } else {\n            var k;\n            for (k in obj) {\n                if (hasOwnProp(obj, k)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n    }\n\n    function isUndefined(input) {\n        return input === void 0;\n    }\n\n    function isNumber(input) {\n        return (\n            typeof input === 'number' ||\n            Object.prototype.toString.call(input) === '[object Number]'\n        );\n    }\n\n    function isDate(input) {\n        return (\n            input instanceof Date ||\n            Object.prototype.toString.call(input) === '[object Date]'\n        );\n    }\n\n    function map(arr, fn) {\n        var res = [],\n            i;\n        for (i = 0; i < arr.length; ++i) {\n            res.push(fn(arr[i], i));\n        }\n        return res;\n    }\n\n    function extend(a, b) {\n        for (var i in b) {\n            if (hasOwnProp(b, i)) {\n                a[i] = b[i];\n            }\n        }\n\n        if (hasOwnProp(b, 'toString')) {\n            a.toString = b.toString;\n        }\n\n        if (hasOwnProp(b, 'valueOf')) {\n            a.valueOf = b.valueOf;\n        }\n\n        return a;\n    }\n\n    function createUTC(input, format, locale, strict) {\n        return createLocalOrUTC(input, format, locale, strict, true).utc();\n    }\n\n    function defaultParsingFlags() {\n        // We need to deep clone this object.\n        return {\n            empty: false,\n            unusedTokens: [],\n            unusedInput: [],\n            overflow: -2,\n            charsLeftOver: 0,\n            nullInput: false,\n            invalidEra: null,\n            invalidMonth: null,\n            invalidFormat: false,\n            userInvalidated: false,\n            iso: false,\n            parsedDateParts: [],\n            era: null,\n            meridiem: null,\n            rfc2822: false,\n            weekdayMismatch: false,\n        };\n    }\n\n    function getParsingFlags(m) {\n        if (m._pf == null) {\n            m._pf = defaultParsingFlags();\n        }\n        return m._pf;\n    }\n\n    var some;\n    if (Array.prototype.some) {\n        some = Array.prototype.some;\n    } else {\n        some = function (fun) {\n            var t = Object(this),\n                len = t.length >>> 0,\n                i;\n\n            for (i = 0; i < len; i++) {\n                if (i in t && fun.call(this, t[i], i, t)) {\n                    return true;\n                }\n            }\n\n            return false;\n        };\n    }\n\n    function isValid(m) {\n        if (m._isValid == null) {\n            var flags = getParsingFlags(m),\n                parsedParts = some.call(flags.parsedDateParts, function (i) {\n                    return i != null;\n                }),\n                isNowValid =\n                    !isNaN(m._d.getTime()) &&\n                    flags.overflow < 0 &&\n                    !flags.empty &&\n                    !flags.invalidEra &&\n                    !flags.invalidMonth &&\n                    !flags.invalidWeekday &&\n                    !flags.weekdayMismatch &&\n                    !flags.nullInput &&\n                    !flags.invalidFormat &&\n                    !flags.userInvalidated &&\n                    (!flags.meridiem || (flags.meridiem && parsedParts));\n\n            if (m._strict) {\n                isNowValid =\n                    isNowValid &&\n                    flags.charsLeftOver === 0 &&\n                    flags.unusedTokens.length === 0 &&\n                    flags.bigHour === undefined;\n            }\n\n            if (Object.isFrozen == null || !Object.isFrozen(m)) {\n                m._isValid = isNowValid;\n            } else {\n                return isNowValid;\n            }\n        }\n        return m._isValid;\n    }\n\n    function createInvalid(flags) {\n        var m = createUTC(NaN);\n        if (flags != null) {\n            extend(getParsingFlags(m), flags);\n        } else {\n            getParsingFlags(m).userInvalidated = true;\n        }\n\n        return m;\n    }\n\n    // Plugins that add properties should also add the key here (null value),\n    // so we can properly clone ourselves.\n    var momentProperties = (hooks.momentProperties = []),\n        updateInProgress = false;\n\n    function copyConfig(to, from) {\n        var i, prop, val;\n\n        if (!isUndefined(from._isAMomentObject)) {\n            to._isAMomentObject = from._isAMomentObject;\n        }\n        if (!isUndefined(from._i)) {\n            to._i = from._i;\n        }\n        if (!isUndefined(from._f)) {\n            to._f = from._f;\n        }\n        if (!isUndefined(from._l)) {\n            to._l = from._l;\n        }\n        if (!isUndefined(from._strict)) {\n            to._strict = from._strict;\n        }\n        if (!isUndefined(from._tzm)) {\n            to._tzm = from._tzm;\n        }\n        if (!isUndefined(from._isUTC)) {\n            to._isUTC = from._isUTC;\n        }\n        if (!isUndefined(from._offset)) {\n            to._offset = from._offset;\n        }\n        if (!isUndefined(from._pf)) {\n            to._pf = getParsingFlags(from);\n        }\n        if (!isUndefined(from._locale)) {\n            to._locale = from._locale;\n        }\n\n        if (momentProperties.length > 0) {\n            for (i = 0; i < momentProperties.length; i++) {\n                prop = momentProperties[i];\n                val = from[prop];\n                if (!isUndefined(val)) {\n                    to[prop] = val;\n                }\n            }\n        }\n\n        return to;\n    }\n\n    // Moment prototype object\n    function Moment(config) {\n        copyConfig(this, config);\n        this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n        if (!this.isValid()) {\n            this._d = new Date(NaN);\n        }\n        // Prevent infinite loop in case updateOffset creates new moment\n        // objects.\n        if (updateInProgress === false) {\n            updateInProgress = true;\n            hooks.updateOffset(this);\n            updateInProgress = false;\n        }\n    }\n\n    function isMoment(obj) {\n        return (\n            obj instanceof Moment || (obj != null && obj._isAMomentObject != null)\n        );\n    }\n\n    function warn(msg) {\n        if (\n            hooks.suppressDeprecationWarnings === false &&\n            typeof console !== 'undefined' &&\n            console.warn\n        ) {\n            console.warn('Deprecation warning: ' + msg);\n        }\n    }\n\n    function deprecate(msg, fn) {\n        var firstTime = true;\n\n        return extend(function () {\n            if (hooks.deprecationHandler != null) {\n                hooks.deprecationHandler(null, msg);\n            }\n            if (firstTime) {\n                var args = [],\n                    arg,\n                    i,\n                    key;\n                for (i = 0; i < arguments.length; i++) {\n                    arg = '';\n                    if (typeof arguments[i] === 'object') {\n                        arg += '\\n[' + i + '] ';\n                        for (key in arguments[0]) {\n                            if (hasOwnProp(arguments[0], key)) {\n                                arg += key + ': ' + arguments[0][key] + ', ';\n                            }\n                        }\n                        arg = arg.slice(0, -2); // Remove trailing comma and space\n                    } else {\n                        arg = arguments[i];\n                    }\n                    args.push(arg);\n                }\n                warn(\n                    msg +\n                        '\\nArguments: ' +\n                        Array.prototype.slice.call(args).join('') +\n                        '\\n' +\n                        new Error().stack\n                );\n                firstTime = false;\n            }\n            return fn.apply(this, arguments);\n        }, fn);\n    }\n\n    var deprecations = {};\n\n    function deprecateSimple(name, msg) {\n        if (hooks.deprecationHandler != null) {\n            hooks.deprecationHandler(name, msg);\n        }\n        if (!deprecations[name]) {\n            warn(msg);\n            deprecations[name] = true;\n        }\n    }\n\n    hooks.suppressDeprecationWarnings = false;\n    hooks.deprecationHandler = null;\n\n    function isFunction(input) {\n        return (\n            (typeof Function !== 'undefined' && input instanceof Function) ||\n            Object.prototype.toString.call(input) === '[object Function]'\n        );\n    }\n\n    function set(config) {\n        var prop, i;\n        for (i in config) {\n            if (hasOwnProp(config, i)) {\n                prop = config[i];\n                if (isFunction(prop)) {\n                    this[i] = prop;\n                } else {\n                    this['_' + i] = prop;\n                }\n            }\n        }\n        this._config = config;\n        // Lenient ordinal parsing accepts just a number in addition to\n        // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.\n        // TODO: Remove \"ordinalParse\" fallback in next major release.\n        this._dayOfMonthOrdinalParseLenient = new RegExp(\n            (this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) +\n                '|' +\n                /\\d{1,2}/.source\n        );\n    }\n\n    function mergeConfigs(parentConfig, childConfig) {\n        var res = extend({}, parentConfig),\n            prop;\n        for (prop in childConfig) {\n            if (hasOwnProp(childConfig, prop)) {\n                if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n                    res[prop] = {};\n                    extend(res[prop], parentConfig[prop]);\n                    extend(res[prop], childConfig[prop]);\n                } else if (childConfig[prop] != null) {\n                    res[prop] = childConfig[prop];\n                } else {\n                    delete res[prop];\n                }\n            }\n        }\n        for (prop in parentConfig) {\n            if (\n                hasOwnProp(parentConfig, prop) &&\n                !hasOwnProp(childConfig, prop) &&\n                isObject(parentConfig[prop])\n            ) {\n                // make sure changes to properties don't modify parent config\n                res[prop] = extend({}, res[prop]);\n            }\n        }\n        return res;\n    }\n\n    function Locale(config) {\n        if (config != null) {\n            this.set(config);\n        }\n    }\n\n    var keys;\n\n    if (Object.keys) {\n        keys = Object.keys;\n    } else {\n        keys = function (obj) {\n            var i,\n                res = [];\n            for (i in obj) {\n                if (hasOwnProp(obj, i)) {\n                    res.push(i);\n                }\n            }\n            return res;\n        };\n    }\n\n    var defaultCalendar = {\n        sameDay: '[Today at] LT',\n        nextDay: '[Tomorrow at] LT',\n        nextWeek: 'dddd [at] LT',\n        lastDay: '[Yesterday at] LT',\n        lastWeek: '[Last] dddd [at] LT',\n        sameElse: 'L',\n    };\n\n    function calendar(key, mom, now) {\n        var output = this._calendar[key] || this._calendar['sameElse'];\n        return isFunction(output) ? output.call(mom, now) : output;\n    }\n\n    function zeroFill(number, targetLength, forceSign) {\n        var absNumber = '' + Math.abs(number),\n            zerosToFill = targetLength - absNumber.length,\n            sign = number >= 0;\n        return (\n            (sign ? (forceSign ? '+' : '') : '-') +\n            Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) +\n            absNumber\n        );\n    }\n\n    var formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|N{1,5}|YYYYYY|YYYYY|YYYY|YY|y{2,4}|yo?|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g,\n        localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g,\n        formatFunctions = {},\n        formatTokenFunctions = {};\n\n    // token:    'M'\n    // padded:   ['MM', 2]\n    // ordinal:  'Mo'\n    // callback: function () { this.month() + 1 }\n    function addFormatToken(token, padded, ordinal, callback) {\n        var func = callback;\n        if (typeof callback === 'string') {\n            func = function () {\n                return this[callback]();\n            };\n        }\n        if (token) {\n            formatTokenFunctions[token] = func;\n        }\n        if (padded) {\n            formatTokenFunctions[padded[0]] = function () {\n                return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n            };\n        }\n        if (ordinal) {\n            formatTokenFunctions[ordinal] = function () {\n                return this.localeData().ordinal(\n                    func.apply(this, arguments),\n                    token\n                );\n            };\n        }\n    }\n\n    function removeFormattingTokens(input) {\n        if (input.match(/\\[[\\s\\S]/)) {\n            return input.replace(/^\\[|\\]$/g, '');\n        }\n        return input.replace(/\\\\/g, '');\n    }\n\n    function makeFormatFunction(format) {\n        var array = format.match(formattingTokens),\n            i,\n            length;\n\n        for (i = 0, length = array.length; i < length; i++) {\n            if (formatTokenFunctions[array[i]]) {\n                array[i] = formatTokenFunctions[array[i]];\n            } else {\n                array[i] = removeFormattingTokens(array[i]);\n            }\n        }\n\n        return function (mom) {\n            var output = '',\n                i;\n            for (i = 0; i < length; i++) {\n                output += isFunction(array[i])\n                    ? array[i].call(mom, format)\n                    : array[i];\n            }\n            return output;\n        };\n    }\n\n    // format date using native date object\n    function formatMoment(m, format) {\n        if (!m.isValid()) {\n            return m.localeData().invalidDate();\n        }\n\n        format = expandFormat(format, m.localeData());\n        formatFunctions[format] =\n            formatFunctions[format] || makeFormatFunction(format);\n\n        return formatFunctions[format](m);\n    }\n\n    function expandFormat(format, locale) {\n        var i = 5;\n\n        function replaceLongDateFormatTokens(input) {\n            return locale.longDateFormat(input) || input;\n        }\n\n        localFormattingTokens.lastIndex = 0;\n        while (i >= 0 && localFormattingTokens.test(format)) {\n            format = format.replace(\n                localFormattingTokens,\n                replaceLongDateFormatTokens\n            );\n            localFormattingTokens.lastIndex = 0;\n            i -= 1;\n        }\n\n        return format;\n    }\n\n    var defaultLongDateFormat = {\n        LTS: 'h:mm:ss A',\n        LT: 'h:mm A',\n        L: 'MM/DD/YYYY',\n        LL: 'MMMM D, YYYY',\n        LLL: 'MMMM D, YYYY h:mm A',\n        LLLL: 'dddd, MMMM D, YYYY h:mm A',\n    };\n\n    function longDateFormat(key) {\n        var format = this._longDateFormat[key],\n            formatUpper = this._longDateFormat[key.toUpperCase()];\n\n        if (format || !formatUpper) {\n            return format;\n        }\n\n        this._longDateFormat[key] = formatUpper\n            .match(formattingTokens)\n            .map(function (tok) {\n                if (\n                    tok === 'MMMM' ||\n                    tok === 'MM' ||\n                    tok === 'DD' ||\n                    tok === 'dddd'\n                ) {\n                    return tok.slice(1);\n                }\n                return tok;\n            })\n            .join('');\n\n        return this._longDateFormat[key];\n    }\n\n    var defaultInvalidDate = 'Invalid date';\n\n    function invalidDate() {\n        return this._invalidDate;\n    }\n\n    var defaultOrdinal = '%d',\n        defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n\n    function ordinal(number) {\n        return this._ordinal.replace('%d', number);\n    }\n\n    var defaultRelativeTime = {\n        future: 'in %s',\n        past: '%s ago',\n        s: 'a few seconds',\n        ss: '%d seconds',\n        m: 'a minute',\n        mm: '%d minutes',\n        h: 'an hour',\n        hh: '%d hours',\n        d: 'a day',\n        dd: '%d days',\n        w: 'a week',\n        ww: '%d weeks',\n        M: 'a month',\n        MM: '%d months',\n        y: 'a year',\n        yy: '%d years',\n    };\n\n    function relativeTime(number, withoutSuffix, string, isFuture) {\n        var output = this._relativeTime[string];\n        return isFunction(output)\n            ? output(number, withoutSuffix, string, isFuture)\n            : output.replace(/%d/i, number);\n    }\n\n    function pastFuture(diff, output) {\n        var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n        return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n    }\n\n    var aliases = {};\n\n    function addUnitAlias(unit, shorthand) {\n        var lowerCase = unit.toLowerCase();\n        aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n    }\n\n    function normalizeUnits(units) {\n        return typeof units === 'string'\n            ? aliases[units] || aliases[units.toLowerCase()]\n            : undefined;\n    }\n\n    function normalizeObjectUnits(inputObject) {\n        var normalizedInput = {},\n            normalizedProp,\n            prop;\n\n        for (prop in inputObject) {\n            if (hasOwnProp(inputObject, prop)) {\n                normalizedProp = normalizeUnits(prop);\n                if (normalizedProp) {\n                    normalizedInput[normalizedProp] = inputObject[prop];\n                }\n            }\n        }\n\n        return normalizedInput;\n    }\n\n    var priorities = {};\n\n    function addUnitPriority(unit, priority) {\n        priorities[unit] = priority;\n    }\n\n    function getPrioritizedUnits(unitsObj) {\n        var units = [],\n            u;\n        for (u in unitsObj) {\n            if (hasOwnProp(unitsObj, u)) {\n                units.push({ unit: u, priority: priorities[u] });\n            }\n        }\n        units.sort(function (a, b) {\n            return a.priority - b.priority;\n        });\n        return units;\n    }\n\n    function isLeapYear(year) {\n        return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n    }\n\n    function absFloor(number) {\n        if (number < 0) {\n            // -0 -> 0\n            return Math.ceil(number) || 0;\n        } else {\n            return Math.floor(number);\n        }\n    }\n\n    function toInt(argumentForCoercion) {\n        var coercedNumber = +argumentForCoercion,\n            value = 0;\n\n        if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n            value = absFloor(coercedNumber);\n        }\n\n        return value;\n    }\n\n    function makeGetSet(unit, keepTime) {\n        return function (value) {\n            if (value != null) {\n                set$1(this, unit, value);\n                hooks.updateOffset(this, keepTime);\n                return this;\n            } else {\n                return get(this, unit);\n            }\n        };\n    }\n\n    function get(mom, unit) {\n        return mom.isValid()\n            ? mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]()\n            : NaN;\n    }\n\n    function set$1(mom, unit, value) {\n        if (mom.isValid() && !isNaN(value)) {\n            if (\n                unit === 'FullYear' &&\n                isLeapYear(mom.year()) &&\n                mom.month() === 1 &&\n                mom.date() === 29\n            ) {\n                value = toInt(value);\n                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](\n                    value,\n                    mom.month(),\n                    daysInMonth(value, mom.month())\n                );\n            } else {\n                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function stringGet(units) {\n        units = normalizeUnits(units);\n        if (isFunction(this[units])) {\n            return this[units]();\n        }\n        return this;\n    }\n\n    function stringSet(units, value) {\n        if (typeof units === 'object') {\n            units = normalizeObjectUnits(units);\n            var prioritized = getPrioritizedUnits(units),\n                i;\n            for (i = 0; i < prioritized.length; i++) {\n                this[prioritized[i].unit](units[prioritized[i].unit]);\n            }\n        } else {\n            units = normalizeUnits(units);\n            if (isFunction(this[units])) {\n                return this[units](value);\n            }\n        }\n        return this;\n    }\n\n    var match1 = /\\d/, //       0 - 9\n        match2 = /\\d\\d/, //      00 - 99\n        match3 = /\\d{3}/, //     000 - 999\n        match4 = /\\d{4}/, //    0000 - 9999\n        match6 = /[+-]?\\d{6}/, // -999999 - 999999\n        match1to2 = /\\d\\d?/, //       0 - 99\n        match3to4 = /\\d\\d\\d\\d?/, //     999 - 9999\n        match5to6 = /\\d\\d\\d\\d\\d\\d?/, //   99999 - 999999\n        match1to3 = /\\d{1,3}/, //       0 - 999\n        match1to4 = /\\d{1,4}/, //       0 - 9999\n        match1to6 = /[+-]?\\d{1,6}/, // -999999 - 999999\n        matchUnsigned = /\\d+/, //       0 - inf\n        matchSigned = /[+-]?\\d+/, //    -inf - inf\n        matchOffset = /Z|[+-]\\d\\d:?\\d\\d/gi, // +00:00 -00:00 +0000 -0000 or Z\n        matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi, // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n        matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/, // 123456789 123456789.123\n        // any word (or two) characters or numbers including two/three word month in arabic.\n        // includes scottish gaelic two word and hyphenated months\n        matchWord = /[0-9]{0,256}['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFF07\\uFF10-\\uFFEF]{1,256}|[\\u0600-\\u06FF\\/]{1,256}(\\s*?[\\u0600-\\u06FF]{1,256}){1,2}/i,\n        regexes;\n\n    regexes = {};\n\n    function addRegexToken(token, regex, strictRegex) {\n        regexes[token] = isFunction(regex)\n            ? regex\n            : function (isStrict, localeData) {\n                  return isStrict && strictRegex ? strictRegex : regex;\n              };\n    }\n\n    function getParseRegexForToken(token, config) {\n        if (!hasOwnProp(regexes, token)) {\n            return new RegExp(unescapeFormat(token));\n        }\n\n        return regexes[token](config._strict, config._locale);\n    }\n\n    // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n    function unescapeFormat(s) {\n        return regexEscape(\n            s\n                .replace('\\\\', '')\n                .replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (\n                    matched,\n                    p1,\n                    p2,\n                    p3,\n                    p4\n                ) {\n                    return p1 || p2 || p3 || p4;\n                })\n        );\n    }\n\n    function regexEscape(s) {\n        return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    }\n\n    var tokens = {};\n\n    function addParseToken(token, callback) {\n        var i,\n            func = callback;\n        if (typeof token === 'string') {\n            token = [token];\n        }\n        if (isNumber(callback)) {\n            func = function (input, array) {\n                array[callback] = toInt(input);\n            };\n        }\n        for (i = 0; i < token.length; i++) {\n            tokens[token[i]] = func;\n        }\n    }\n\n    function addWeekParseToken(token, callback) {\n        addParseToken(token, function (input, array, config, token) {\n            config._w = config._w || {};\n            callback(input, config._w, config, token);\n        });\n    }\n\n    function addTimeToArrayFromToken(token, input, config) {\n        if (input != null && hasOwnProp(tokens, token)) {\n            tokens[token](input, config._a, config, token);\n        }\n    }\n\n    var YEAR = 0,\n        MONTH = 1,\n        DATE = 2,\n        HOUR = 3,\n        MINUTE = 4,\n        SECOND = 5,\n        MILLISECOND = 6,\n        WEEK = 7,\n        WEEKDAY = 8;\n\n    function mod(n, x) {\n        return ((n % x) + x) % x;\n    }\n\n    var indexOf;\n\n    if (Array.prototype.indexOf) {\n        indexOf = Array.prototype.indexOf;\n    } else {\n        indexOf = function (o) {\n            // I know\n            var i;\n            for (i = 0; i < this.length; ++i) {\n                if (this[i] === o) {\n                    return i;\n                }\n            }\n            return -1;\n        };\n    }\n\n    function daysInMonth(year, month) {\n        if (isNaN(year) || isNaN(month)) {\n            return NaN;\n        }\n        var modMonth = mod(month, 12);\n        year += (month - modMonth) / 12;\n        return modMonth === 1\n            ? isLeapYear(year)\n                ? 29\n                : 28\n            : 31 - ((modMonth % 7) % 2);\n    }\n\n    // FORMATTING\n\n    addFormatToken('M', ['MM', 2], 'Mo', function () {\n        return this.month() + 1;\n    });\n\n    addFormatToken('MMM', 0, 0, function (format) {\n        return this.localeData().monthsShort(this, format);\n    });\n\n    addFormatToken('MMMM', 0, 0, function (format) {\n        return this.localeData().months(this, format);\n    });\n\n    // ALIASES\n\n    addUnitAlias('month', 'M');\n\n    // PRIORITY\n\n    addUnitPriority('month', 8);\n\n    // PARSING\n\n    addRegexToken('M', match1to2);\n    addRegexToken('MM', match1to2, match2);\n    addRegexToken('MMM', function (isStrict, locale) {\n        return locale.monthsShortRegex(isStrict);\n    });\n    addRegexToken('MMMM', function (isStrict, locale) {\n        return locale.monthsRegex(isStrict);\n    });\n\n    addParseToken(['M', 'MM'], function (input, array) {\n        array[MONTH] = toInt(input) - 1;\n    });\n\n    addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n        var month = config._locale.monthsParse(input, token, config._strict);\n        // if we didn't find a month name, mark the date as invalid.\n        if (month != null) {\n            array[MONTH] = month;\n        } else {\n            getParsingFlags(config).invalidMonth = input;\n        }\n    });\n\n    // LOCALES\n\n    var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split(\n            '_'\n        ),\n        defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split(\n            '_'\n        ),\n        MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/,\n        defaultMonthsShortRegex = matchWord,\n        defaultMonthsRegex = matchWord;\n\n    function localeMonths(m, format) {\n        if (!m) {\n            return isArray(this._months)\n                ? this._months\n                : this._months['standalone'];\n        }\n        return isArray(this._months)\n            ? this._months[m.month()]\n            : this._months[\n                  (this._months.isFormat || MONTHS_IN_FORMAT).test(format)\n                      ? 'format'\n                      : 'standalone'\n              ][m.month()];\n    }\n\n    function localeMonthsShort(m, format) {\n        if (!m) {\n            return isArray(this._monthsShort)\n                ? this._monthsShort\n                : this._monthsShort['standalone'];\n        }\n        return isArray(this._monthsShort)\n            ? this._monthsShort[m.month()]\n            : this._monthsShort[\n                  MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'\n              ][m.month()];\n    }\n\n    function handleStrictParse(monthName, format, strict) {\n        var i,\n            ii,\n            mom,\n            llc = monthName.toLocaleLowerCase();\n        if (!this._monthsParse) {\n            // this is not used\n            this._monthsParse = [];\n            this._longMonthsParse = [];\n            this._shortMonthsParse = [];\n            for (i = 0; i < 12; ++i) {\n                mom = createUTC([2000, i]);\n                this._shortMonthsParse[i] = this.monthsShort(\n                    mom,\n                    ''\n                ).toLocaleLowerCase();\n                this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n            }\n        }\n\n        if (strict) {\n            if (format === 'MMM') {\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._longMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        } else {\n            if (format === 'MMM') {\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._longMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._longMonthsParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        }\n    }\n\n    function localeMonthsParse(monthName, format, strict) {\n        var i, mom, regex;\n\n        if (this._monthsParseExact) {\n            return handleStrictParse.call(this, monthName, format, strict);\n        }\n\n        if (!this._monthsParse) {\n            this._monthsParse = [];\n            this._longMonthsParse = [];\n            this._shortMonthsParse = [];\n        }\n\n        // TODO: add sorting\n        // Sorting makes sure if one month (or abbr) is a prefix of another\n        // see sorting in computeMonthsParse\n        for (i = 0; i < 12; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, i]);\n            if (strict && !this._longMonthsParse[i]) {\n                this._longMonthsParse[i] = new RegExp(\n                    '^' + this.months(mom, '').replace('.', '') + '$',\n                    'i'\n                );\n                this._shortMonthsParse[i] = new RegExp(\n                    '^' + this.monthsShort(mom, '').replace('.', '') + '$',\n                    'i'\n                );\n            }\n            if (!strict && !this._monthsParse[i]) {\n                regex =\n                    '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n                this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n            }\n            // test the regex\n            if (\n                strict &&\n                format === 'MMMM' &&\n                this._longMonthsParse[i].test(monthName)\n            ) {\n                return i;\n            } else if (\n                strict &&\n                format === 'MMM' &&\n                this._shortMonthsParse[i].test(monthName)\n            ) {\n                return i;\n            } else if (!strict && this._monthsParse[i].test(monthName)) {\n                return i;\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function setMonth(mom, value) {\n        var dayOfMonth;\n\n        if (!mom.isValid()) {\n            // No op\n            return mom;\n        }\n\n        if (typeof value === 'string') {\n            if (/^\\d+$/.test(value)) {\n                value = toInt(value);\n            } else {\n                value = mom.localeData().monthsParse(value);\n                // TODO: Another silent failure?\n                if (!isNumber(value)) {\n                    return mom;\n                }\n            }\n        }\n\n        dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n        return mom;\n    }\n\n    function getSetMonth(value) {\n        if (value != null) {\n            setMonth(this, value);\n            hooks.updateOffset(this, true);\n            return this;\n        } else {\n            return get(this, 'Month');\n        }\n    }\n\n    function getDaysInMonth() {\n        return daysInMonth(this.year(), this.month());\n    }\n\n    function monthsShortRegex(isStrict) {\n        if (this._monthsParseExact) {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                computeMonthsParse.call(this);\n            }\n            if (isStrict) {\n                return this._monthsShortStrictRegex;\n            } else {\n                return this._monthsShortRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_monthsShortRegex')) {\n                this._monthsShortRegex = defaultMonthsShortRegex;\n            }\n            return this._monthsShortStrictRegex && isStrict\n                ? this._monthsShortStrictRegex\n                : this._monthsShortRegex;\n        }\n    }\n\n    function monthsRegex(isStrict) {\n        if (this._monthsParseExact) {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                computeMonthsParse.call(this);\n            }\n            if (isStrict) {\n                return this._monthsStrictRegex;\n            } else {\n                return this._monthsRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                this._monthsRegex = defaultMonthsRegex;\n            }\n            return this._monthsStrictRegex && isStrict\n                ? this._monthsStrictRegex\n                : this._monthsRegex;\n        }\n    }\n\n    function computeMonthsParse() {\n        function cmpLenRev(a, b) {\n            return b.length - a.length;\n        }\n\n        var shortPieces = [],\n            longPieces = [],\n            mixedPieces = [],\n            i,\n            mom;\n        for (i = 0; i < 12; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, i]);\n            shortPieces.push(this.monthsShort(mom, ''));\n            longPieces.push(this.months(mom, ''));\n            mixedPieces.push(this.months(mom, ''));\n            mixedPieces.push(this.monthsShort(mom, ''));\n        }\n        // Sorting makes sure if one month (or abbr) is a prefix of another it\n        // will match the longer piece.\n        shortPieces.sort(cmpLenRev);\n        longPieces.sort(cmpLenRev);\n        mixedPieces.sort(cmpLenRev);\n        for (i = 0; i < 12; i++) {\n            shortPieces[i] = regexEscape(shortPieces[i]);\n            longPieces[i] = regexEscape(longPieces[i]);\n        }\n        for (i = 0; i < 24; i++) {\n            mixedPieces[i] = regexEscape(mixedPieces[i]);\n        }\n\n        this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n        this._monthsShortRegex = this._monthsRegex;\n        this._monthsStrictRegex = new RegExp(\n            '^(' + longPieces.join('|') + ')',\n            'i'\n        );\n        this._monthsShortStrictRegex = new RegExp(\n            '^(' + shortPieces.join('|') + ')',\n            'i'\n        );\n    }\n\n    // FORMATTING\n\n    addFormatToken('Y', 0, 0, function () {\n        var y = this.year();\n        return y <= 9999 ? zeroFill(y, 4) : '+' + y;\n    });\n\n    addFormatToken(0, ['YY', 2], 0, function () {\n        return this.year() % 100;\n    });\n\n    addFormatToken(0, ['YYYY', 4], 0, 'year');\n    addFormatToken(0, ['YYYYY', 5], 0, 'year');\n    addFormatToken(0, ['YYYYYY', 6, true], 0, 'year');\n\n    // ALIASES\n\n    addUnitAlias('year', 'y');\n\n    // PRIORITIES\n\n    addUnitPriority('year', 1);\n\n    // PARSING\n\n    addRegexToken('Y', matchSigned);\n    addRegexToken('YY', match1to2, match2);\n    addRegexToken('YYYY', match1to4, match4);\n    addRegexToken('YYYYY', match1to6, match6);\n    addRegexToken('YYYYYY', match1to6, match6);\n\n    addParseToken(['YYYYY', 'YYYYYY'], YEAR);\n    addParseToken('YYYY', function (input, array) {\n        array[YEAR] =\n            input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);\n    });\n    addParseToken('YY', function (input, array) {\n        array[YEAR] = hooks.parseTwoDigitYear(input);\n    });\n    addParseToken('Y', function (input, array) {\n        array[YEAR] = parseInt(input, 10);\n    });\n\n    // HELPERS\n\n    function daysInYear(year) {\n        return isLeapYear(year) ? 366 : 365;\n    }\n\n    // HOOKS\n\n    hooks.parseTwoDigitYear = function (input) {\n        return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n    };\n\n    // MOMENTS\n\n    var getSetYear = makeGetSet('FullYear', true);\n\n    function getIsLeapYear() {\n        return isLeapYear(this.year());\n    }\n\n    function createDate(y, m, d, h, M, s, ms) {\n        // can't just apply() to create a date:\n        // https://stackoverflow.com/q/181348\n        var date;\n        // the date constructor remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) {\n            // preserve leap years using a full 400 year cycle, then reset\n            date = new Date(y + 400, m, d, h, M, s, ms);\n            if (isFinite(date.getFullYear())) {\n                date.setFullYear(y);\n            }\n        } else {\n            date = new Date(y, m, d, h, M, s, ms);\n        }\n\n        return date;\n    }\n\n    function createUTCDate(y) {\n        var date, args;\n        // the Date.UTC function remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) {\n            args = Array.prototype.slice.call(arguments);\n            // preserve leap years using a full 400 year cycle, then reset\n            args[0] = y + 400;\n            date = new Date(Date.UTC.apply(null, args));\n            if (isFinite(date.getUTCFullYear())) {\n                date.setUTCFullYear(y);\n            }\n        } else {\n            date = new Date(Date.UTC.apply(null, arguments));\n        }\n\n        return date;\n    }\n\n    // start-of-first-week - start-of-year\n    function firstWeekOffset(year, dow, doy) {\n        var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n            fwd = 7 + dow - doy,\n            // first-week day local weekday -- which local weekday is fwd\n            fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n\n        return -fwdlw + fwd - 1;\n    }\n\n    // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n    function dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n        var localWeekday = (7 + weekday - dow) % 7,\n            weekOffset = firstWeekOffset(year, dow, doy),\n            dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n            resYear,\n            resDayOfYear;\n\n        if (dayOfYear <= 0) {\n            resYear = year - 1;\n            resDayOfYear = daysInYear(resYear) + dayOfYear;\n        } else if (dayOfYear > daysInYear(year)) {\n            resYear = year + 1;\n            resDayOfYear = dayOfYear - daysInYear(year);\n        } else {\n            resYear = year;\n            resDayOfYear = dayOfYear;\n        }\n\n        return {\n            year: resYear,\n            dayOfYear: resDayOfYear,\n        };\n    }\n\n    function weekOfYear(mom, dow, doy) {\n        var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n            week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n            resWeek,\n            resYear;\n\n        if (week < 1) {\n            resYear = mom.year() - 1;\n            resWeek = week + weeksInYear(resYear, dow, doy);\n        } else if (week > weeksInYear(mom.year(), dow, doy)) {\n            resWeek = week - weeksInYear(mom.year(), dow, doy);\n            resYear = mom.year() + 1;\n        } else {\n            resYear = mom.year();\n            resWeek = week;\n        }\n\n        return {\n            week: resWeek,\n            year: resYear,\n        };\n    }\n\n    function weeksInYear(year, dow, doy) {\n        var weekOffset = firstWeekOffset(year, dow, doy),\n            weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n        return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n    }\n\n    // FORMATTING\n\n    addFormatToken('w', ['ww', 2], 'wo', 'week');\n    addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');\n\n    // ALIASES\n\n    addUnitAlias('week', 'w');\n    addUnitAlias('isoWeek', 'W');\n\n    // PRIORITIES\n\n    addUnitPriority('week', 5);\n    addUnitPriority('isoWeek', 5);\n\n    // PARSING\n\n    addRegexToken('w', match1to2);\n    addRegexToken('ww', match1to2, match2);\n    addRegexToken('W', match1to2);\n    addRegexToken('WW', match1to2, match2);\n\n    addWeekParseToken(['w', 'ww', 'W', 'WW'], function (\n        input,\n        week,\n        config,\n        token\n    ) {\n        week[token.substr(0, 1)] = toInt(input);\n    });\n\n    // HELPERS\n\n    // LOCALES\n\n    function localeWeek(mom) {\n        return weekOfYear(mom, this._week.dow, this._week.doy).week;\n    }\n\n    var defaultLocaleWeek = {\n        dow: 0, // Sunday is the first day of the week.\n        doy: 6, // The week that contains Jan 6th is the first week of the year.\n    };\n\n    function localeFirstDayOfWeek() {\n        return this._week.dow;\n    }\n\n    function localeFirstDayOfYear() {\n        return this._week.doy;\n    }\n\n    // MOMENTS\n\n    function getSetWeek(input) {\n        var week = this.localeData().week(this);\n        return input == null ? week : this.add((input - week) * 7, 'd');\n    }\n\n    function getSetISOWeek(input) {\n        var week = weekOfYear(this, 1, 4).week;\n        return input == null ? week : this.add((input - week) * 7, 'd');\n    }\n\n    // FORMATTING\n\n    addFormatToken('d', 0, 'do', 'day');\n\n    addFormatToken('dd', 0, 0, function (format) {\n        return this.localeData().weekdaysMin(this, format);\n    });\n\n    addFormatToken('ddd', 0, 0, function (format) {\n        return this.localeData().weekdaysShort(this, format);\n    });\n\n    addFormatToken('dddd', 0, 0, function (format) {\n        return this.localeData().weekdays(this, format);\n    });\n\n    addFormatToken('e', 0, 0, 'weekday');\n    addFormatToken('E', 0, 0, 'isoWeekday');\n\n    // ALIASES\n\n    addUnitAlias('day', 'd');\n    addUnitAlias('weekday', 'e');\n    addUnitAlias('isoWeekday', 'E');\n\n    // PRIORITY\n    addUnitPriority('day', 11);\n    addUnitPriority('weekday', 11);\n    addUnitPriority('isoWeekday', 11);\n\n    // PARSING\n\n    addRegexToken('d', match1to2);\n    addRegexToken('e', match1to2);\n    addRegexToken('E', match1to2);\n    addRegexToken('dd', function (isStrict, locale) {\n        return locale.weekdaysMinRegex(isStrict);\n    });\n    addRegexToken('ddd', function (isStrict, locale) {\n        return locale.weekdaysShortRegex(isStrict);\n    });\n    addRegexToken('dddd', function (isStrict, locale) {\n        return locale.weekdaysRegex(isStrict);\n    });\n\n    addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n        var weekday = config._locale.weekdaysParse(input, token, config._strict);\n        // if we didn't get a weekday name, mark the date as invalid\n        if (weekday != null) {\n            week.d = weekday;\n        } else {\n            getParsingFlags(config).invalidWeekday = input;\n        }\n    });\n\n    addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n        week[token] = toInt(input);\n    });\n\n    // HELPERS\n\n    function parseWeekday(input, locale) {\n        if (typeof input !== 'string') {\n            return input;\n        }\n\n        if (!isNaN(input)) {\n            return parseInt(input, 10);\n        }\n\n        input = locale.weekdaysParse(input);\n        if (typeof input === 'number') {\n            return input;\n        }\n\n        return null;\n    }\n\n    function parseIsoWeekday(input, locale) {\n        if (typeof input === 'string') {\n            return locale.weekdaysParse(input) % 7 || 7;\n        }\n        return isNaN(input) ? null : input;\n    }\n\n    // LOCALES\n    function shiftWeekdays(ws, n) {\n        return ws.slice(n, 7).concat(ws.slice(0, n));\n    }\n\n    var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split(\n            '_'\n        ),\n        defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n        defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n        defaultWeekdaysRegex = matchWord,\n        defaultWeekdaysShortRegex = matchWord,\n        defaultWeekdaysMinRegex = matchWord;\n\n    function localeWeekdays(m, format) {\n        var weekdays = isArray(this._weekdays)\n            ? this._weekdays\n            : this._weekdays[\n                  m && m !== true && this._weekdays.isFormat.test(format)\n                      ? 'format'\n                      : 'standalone'\n              ];\n        return m === true\n            ? shiftWeekdays(weekdays, this._week.dow)\n            : m\n            ? weekdays[m.day()]\n            : weekdays;\n    }\n\n    function localeWeekdaysShort(m) {\n        return m === true\n            ? shiftWeekdays(this._weekdaysShort, this._week.dow)\n            : m\n            ? this._weekdaysShort[m.day()]\n            : this._weekdaysShort;\n    }\n\n    function localeWeekdaysMin(m) {\n        return m === true\n            ? shiftWeekdays(this._weekdaysMin, this._week.dow)\n            : m\n            ? this._weekdaysMin[m.day()]\n            : this._weekdaysMin;\n    }\n\n    function handleStrictParse$1(weekdayName, format, strict) {\n        var i,\n            ii,\n            mom,\n            llc = weekdayName.toLocaleLowerCase();\n        if (!this._weekdaysParse) {\n            this._weekdaysParse = [];\n            this._shortWeekdaysParse = [];\n            this._minWeekdaysParse = [];\n\n            for (i = 0; i < 7; ++i) {\n                mom = createUTC([2000, 1]).day(i);\n                this._minWeekdaysParse[i] = this.weekdaysMin(\n                    mom,\n                    ''\n                ).toLocaleLowerCase();\n                this._shortWeekdaysParse[i] = this.weekdaysShort(\n                    mom,\n                    ''\n                ).toLocaleLowerCase();\n                this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\n            }\n        }\n\n        if (strict) {\n            if (format === 'dddd') {\n                ii = indexOf.call(this._weekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else if (format === 'ddd') {\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        } else {\n            if (format === 'dddd') {\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else if (format === 'ddd') {\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        }\n    }\n\n    function localeWeekdaysParse(weekdayName, format, strict) {\n        var i, mom, regex;\n\n        if (this._weekdaysParseExact) {\n            return handleStrictParse$1.call(this, weekdayName, format, strict);\n        }\n\n        if (!this._weekdaysParse) {\n            this._weekdaysParse = [];\n            this._minWeekdaysParse = [];\n            this._shortWeekdaysParse = [];\n            this._fullWeekdaysParse = [];\n        }\n\n        for (i = 0; i < 7; i++) {\n            // make the regex if we don't have it already\n\n            mom = createUTC([2000, 1]).day(i);\n            if (strict && !this._fullWeekdaysParse[i]) {\n                this._fullWeekdaysParse[i] = new RegExp(\n                    '^' + this.weekdays(mom, '').replace('.', '\\\\.?') + '$',\n                    'i'\n                );\n                this._shortWeekdaysParse[i] = new RegExp(\n                    '^' + this.weekdaysShort(mom, '').replace('.', '\\\\.?') + '$',\n                    'i'\n                );\n                this._minWeekdaysParse[i] = new RegExp(\n                    '^' + this.weekdaysMin(mom, '').replace('.', '\\\\.?') + '$',\n                    'i'\n                );\n            }\n            if (!this._weekdaysParse[i]) {\n                regex =\n                    '^' +\n                    this.weekdays(mom, '') +\n                    '|^' +\n                    this.weekdaysShort(mom, '') +\n                    '|^' +\n                    this.weekdaysMin(mom, '');\n                this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n            }\n            // test the regex\n            if (\n                strict &&\n                format === 'dddd' &&\n                this._fullWeekdaysParse[i].test(weekdayName)\n            ) {\n                return i;\n            } else if (\n                strict &&\n                format === 'ddd' &&\n                this._shortWeekdaysParse[i].test(weekdayName)\n            ) {\n                return i;\n            } else if (\n                strict &&\n                format === 'dd' &&\n                this._minWeekdaysParse[i].test(weekdayName)\n            ) {\n                return i;\n            } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n                return i;\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function getSetDayOfWeek(input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n        if (input != null) {\n            input = parseWeekday(input, this.localeData());\n            return this.add(input - day, 'd');\n        } else {\n            return day;\n        }\n    }\n\n    function getSetLocaleDayOfWeek(input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n        return input == null ? weekday : this.add(input - weekday, 'd');\n    }\n\n    function getSetISODayOfWeek(input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n\n        // behaves the same as moment#day except\n        // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n        // as a setter, sunday should belong to the previous week.\n\n        if (input != null) {\n            var weekday = parseIsoWeekday(input, this.localeData());\n            return this.day(this.day() % 7 ? weekday : weekday - 7);\n        } else {\n            return this.day() || 7;\n        }\n    }\n\n    function weekdaysRegex(isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysStrictRegex;\n            } else {\n                return this._weekdaysRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                this._weekdaysRegex = defaultWeekdaysRegex;\n            }\n            return this._weekdaysStrictRegex && isStrict\n                ? this._weekdaysStrictRegex\n                : this._weekdaysRegex;\n        }\n    }\n\n    function weekdaysShortRegex(isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysShortStrictRegex;\n            } else {\n                return this._weekdaysShortRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n                this._weekdaysShortRegex = defaultWeekdaysShortRegex;\n            }\n            return this._weekdaysShortStrictRegex && isStrict\n                ? this._weekdaysShortStrictRegex\n                : this._weekdaysShortRegex;\n        }\n    }\n\n    function weekdaysMinRegex(isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysMinStrictRegex;\n            } else {\n                return this._weekdaysMinRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n                this._weekdaysMinRegex = defaultWeekdaysMinRegex;\n            }\n            return this._weekdaysMinStrictRegex && isStrict\n                ? this._weekdaysMinStrictRegex\n                : this._weekdaysMinRegex;\n        }\n    }\n\n    function computeWeekdaysParse() {\n        function cmpLenRev(a, b) {\n            return b.length - a.length;\n        }\n\n        var minPieces = [],\n            shortPieces = [],\n            longPieces = [],\n            mixedPieces = [],\n            i,\n            mom,\n            minp,\n            shortp,\n            longp;\n        for (i = 0; i < 7; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, 1]).day(i);\n            minp = regexEscape(this.weekdaysMin(mom, ''));\n            shortp = regexEscape(this.weekdaysShort(mom, ''));\n            longp = regexEscape(this.weekdays(mom, ''));\n            minPieces.push(minp);\n            shortPieces.push(shortp);\n            longPieces.push(longp);\n            mixedPieces.push(minp);\n            mixedPieces.push(shortp);\n            mixedPieces.push(longp);\n        }\n        // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n        // will match the longer piece.\n        minPieces.sort(cmpLenRev);\n        shortPieces.sort(cmpLenRev);\n        longPieces.sort(cmpLenRev);\n        mixedPieces.sort(cmpLenRev);\n\n        this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n        this._weekdaysShortRegex = this._weekdaysRegex;\n        this._weekdaysMinRegex = this._weekdaysRegex;\n\n        this._weekdaysStrictRegex = new RegExp(\n            '^(' + longPieces.join('|') + ')',\n            'i'\n        );\n        this._weekdaysShortStrictRegex = new RegExp(\n            '^(' + shortPieces.join('|') + ')',\n            'i'\n        );\n        this._weekdaysMinStrictRegex = new RegExp(\n            '^(' + minPieces.join('|') + ')',\n            'i'\n        );\n    }\n\n    // FORMATTING\n\n    function hFormat() {\n        return this.hours() % 12 || 12;\n    }\n\n    function kFormat() {\n        return this.hours() || 24;\n    }\n\n    addFormatToken('H', ['HH', 2], 0, 'hour');\n    addFormatToken('h', ['hh', 2], 0, hFormat);\n    addFormatToken('k', ['kk', 2], 0, kFormat);\n\n    addFormatToken('hmm', 0, 0, function () {\n        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n    });\n\n    addFormatToken('hmmss', 0, 0, function () {\n        return (\n            '' +\n            hFormat.apply(this) +\n            zeroFill(this.minutes(), 2) +\n            zeroFill(this.seconds(), 2)\n        );\n    });\n\n    addFormatToken('Hmm', 0, 0, function () {\n        return '' + this.hours() + zeroFill(this.minutes(), 2);\n    });\n\n    addFormatToken('Hmmss', 0, 0, function () {\n        return (\n            '' +\n            this.hours() +\n            zeroFill(this.minutes(), 2) +\n            zeroFill(this.seconds(), 2)\n        );\n    });\n\n    function meridiem(token, lowercase) {\n        addFormatToken(token, 0, 0, function () {\n            return this.localeData().meridiem(\n                this.hours(),\n                this.minutes(),\n                lowercase\n            );\n        });\n    }\n\n    meridiem('a', true);\n    meridiem('A', false);\n\n    // ALIASES\n\n    addUnitAlias('hour', 'h');\n\n    // PRIORITY\n    addUnitPriority('hour', 13);\n\n    // PARSING\n\n    function matchMeridiem(isStrict, locale) {\n        return locale._meridiemParse;\n    }\n\n    addRegexToken('a', matchMeridiem);\n    addRegexToken('A', matchMeridiem);\n    addRegexToken('H', match1to2);\n    addRegexToken('h', match1to2);\n    addRegexToken('k', match1to2);\n    addRegexToken('HH', match1to2, match2);\n    addRegexToken('hh', match1to2, match2);\n    addRegexToken('kk', match1to2, match2);\n\n    addRegexToken('hmm', match3to4);\n    addRegexToken('hmmss', match5to6);\n    addRegexToken('Hmm', match3to4);\n    addRegexToken('Hmmss', match5to6);\n\n    addParseToken(['H', 'HH'], HOUR);\n    addParseToken(['k', 'kk'], function (input, array, config) {\n        var kInput = toInt(input);\n        array[HOUR] = kInput === 24 ? 0 : kInput;\n    });\n    addParseToken(['a', 'A'], function (input, array, config) {\n        config._isPm = config._locale.isPM(input);\n        config._meridiem = input;\n    });\n    addParseToken(['h', 'hh'], function (input, array, config) {\n        array[HOUR] = toInt(input);\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('hmm', function (input, array, config) {\n        var pos = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos));\n        array[MINUTE] = toInt(input.substr(pos));\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('hmmss', function (input, array, config) {\n        var pos1 = input.length - 4,\n            pos2 = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos1));\n        array[MINUTE] = toInt(input.substr(pos1, 2));\n        array[SECOND] = toInt(input.substr(pos2));\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('Hmm', function (input, array, config) {\n        var pos = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos));\n        array[MINUTE] = toInt(input.substr(pos));\n    });\n    addParseToken('Hmmss', function (input, array, config) {\n        var pos1 = input.length - 4,\n            pos2 = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos1));\n        array[MINUTE] = toInt(input.substr(pos1, 2));\n        array[SECOND] = toInt(input.substr(pos2));\n    });\n\n    // LOCALES\n\n    function localeIsPM(input) {\n        // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n        // Using charAt should be more compatible.\n        return (input + '').toLowerCase().charAt(0) === 'p';\n    }\n\n    var defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i,\n        // Setting the hour should keep the time, because the user explicitly\n        // specified which hour they want. So trying to maintain the same hour (in\n        // a new timezone) makes sense. Adding/subtracting hours does not follow\n        // this rule.\n        getSetHour = makeGetSet('Hours', true);\n\n    function localeMeridiem(hours, minutes, isLower) {\n        if (hours > 11) {\n            return isLower ? 'pm' : 'PM';\n        } else {\n            return isLower ? 'am' : 'AM';\n        }\n    }\n\n    var baseConfig = {\n        calendar: defaultCalendar,\n        longDateFormat: defaultLongDateFormat,\n        invalidDate: defaultInvalidDate,\n        ordinal: defaultOrdinal,\n        dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n        relativeTime: defaultRelativeTime,\n\n        months: defaultLocaleMonths,\n        monthsShort: defaultLocaleMonthsShort,\n\n        week: defaultLocaleWeek,\n\n        weekdays: defaultLocaleWeekdays,\n        weekdaysMin: defaultLocaleWeekdaysMin,\n        weekdaysShort: defaultLocaleWeekdaysShort,\n\n        meridiemParse: defaultLocaleMeridiemParse,\n    };\n\n    // internal storage for locale config files\n    var locales = {},\n        localeFamilies = {},\n        globalLocale;\n\n    function commonPrefix(arr1, arr2) {\n        var i,\n            minl = Math.min(arr1.length, arr2.length);\n        for (i = 0; i < minl; i += 1) {\n            if (arr1[i] !== arr2[i]) {\n                return i;\n            }\n        }\n        return minl;\n    }\n\n    function normalizeLocale(key) {\n        return key ? key.toLowerCase().replace('_', '-') : key;\n    }\n\n    // pick the locale from the array\n    // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n    // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n    function chooseLocale(names) {\n        var i = 0,\n            j,\n            next,\n            locale,\n            split;\n\n        while (i < names.length) {\n            split = normalizeLocale(names[i]).split('-');\n            j = split.length;\n            next = normalizeLocale(names[i + 1]);\n            next = next ? next.split('-') : null;\n            while (j > 0) {\n                locale = loadLocale(split.slice(0, j).join('-'));\n                if (locale) {\n                    return locale;\n                }\n                if (\n                    next &&\n                    next.length >= j &&\n                    commonPrefix(split, next) >= j - 1\n                ) {\n                    //the next array item is better than a shallower substring of this one\n                    break;\n                }\n                j--;\n            }\n            i++;\n        }\n        return globalLocale;\n    }\n\n    function loadLocale(name) {\n        var oldLocale = null,\n            aliasedRequire;\n        // TODO: Find a better way to register and load all the locales in Node\n        if (\n            locales[name] === undefined &&\n            typeof module !== 'undefined' &&\n            module &&\n            module.exports\n        ) {\n            try {\n                oldLocale = globalLocale._abbr;\n                aliasedRequire = require;\n                !(function webpackMissingModule() { var e = new Error(\"Cannot find module \\\"./locale\\\"\"); e.code = 'MODULE_NOT_FOUND'; throw e; }());\n                getSetGlobalLocale(oldLocale);\n            } catch (e) {\n                // mark as not found to avoid repeating expensive file require call causing high CPU\n                // when trying to find en-US, en_US, en-us for every format call\n                locales[name] = null; // null means not found\n            }\n        }\n        return locales[name];\n    }\n\n    // This function will load locale and then set the global locale.  If\n    // no arguments are passed in, it will simply return the current global\n    // locale key.\n    function getSetGlobalLocale(key, values) {\n        var data;\n        if (key) {\n            if (isUndefined(values)) {\n                data = getLocale(key);\n            } else {\n                data = defineLocale(key, values);\n            }\n\n            if (data) {\n                // moment.duration._locale = moment._locale = data;\n                globalLocale = data;\n            } else {\n                if (typeof console !== 'undefined' && console.warn) {\n                    //warn user if arguments are passed but the locale could not be set\n                    console.warn(\n                        'Locale ' + key + ' not found. Did you forget to load it?'\n                    );\n                }\n            }\n        }\n\n        return globalLocale._abbr;\n    }\n\n    function defineLocale(name, config) {\n        if (config !== null) {\n            var locale,\n                parentConfig = baseConfig;\n            config.abbr = name;\n            if (locales[name] != null) {\n                deprecateSimple(\n                    'defineLocaleOverride',\n                    'use moment.updateLocale(localeName, config) to change ' +\n                        'an existing locale. moment.defineLocale(localeName, ' +\n                        'config) should only be used for creating a new locale ' +\n                        'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.'\n                );\n                parentConfig = locales[name]._config;\n            } else if (config.parentLocale != null) {\n                if (locales[config.parentLocale] != null) {\n                    parentConfig = locales[config.parentLocale]._config;\n                } else {\n                    locale = loadLocale(config.parentLocale);\n                    if (locale != null) {\n                        parentConfig = locale._config;\n                    } else {\n                        if (!localeFamilies[config.parentLocale]) {\n                            localeFamilies[config.parentLocale] = [];\n                        }\n                        localeFamilies[config.parentLocale].push({\n                            name: name,\n                            config: config,\n                        });\n                        return null;\n                    }\n                }\n            }\n            locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\n            if (localeFamilies[name]) {\n                localeFamilies[name].forEach(function (x) {\n                    defineLocale(x.name, x.config);\n                });\n            }\n\n            // backwards compat for now: also set the locale\n            // make sure we set the locale AFTER all child locales have been\n            // created, so we won't end up with the child locale set.\n            getSetGlobalLocale(name);\n\n            return locales[name];\n        } else {\n            // useful for testing\n            delete locales[name];\n            return null;\n        }\n    }\n\n    function updateLocale(name, config) {\n        if (config != null) {\n            var locale,\n                tmpLocale,\n                parentConfig = baseConfig;\n\n            if (locales[name] != null && locales[name].parentLocale != null) {\n                // Update existing child locale in-place to avoid memory-leaks\n                locales[name].set(mergeConfigs(locales[name]._config, config));\n            } else {\n                // MERGE\n                tmpLocale = loadLocale(name);\n                if (tmpLocale != null) {\n                    parentConfig = tmpLocale._config;\n                }\n                config = mergeConfigs(parentConfig, config);\n                if (tmpLocale == null) {\n                    // updateLocale is called for creating a new locale\n                    // Set abbr so it will have a name (getters return\n                    // undefined otherwise).\n                    config.abbr = name;\n                }\n                locale = new Locale(config);\n                locale.parentLocale = locales[name];\n                locales[name] = locale;\n            }\n\n            // backwards compat for now: also set the locale\n            getSetGlobalLocale(name);\n        } else {\n            // pass null for config to unupdate, useful for tests\n            if (locales[name] != null) {\n                if (locales[name].parentLocale != null) {\n                    locales[name] = locales[name].parentLocale;\n                    if (name === getSetGlobalLocale()) {\n                        getSetGlobalLocale(name);\n                    }\n                } else if (locales[name] != null) {\n                    delete locales[name];\n                }\n            }\n        }\n        return locales[name];\n    }\n\n    // returns locale data\n    function getLocale(key) {\n        var locale;\n\n        if (key && key._locale && key._locale._abbr) {\n            key = key._locale._abbr;\n        }\n\n        if (!key) {\n            return globalLocale;\n        }\n\n        if (!isArray(key)) {\n            //short-circuit everything else\n            locale = loadLocale(key);\n            if (locale) {\n                return locale;\n            }\n            key = [key];\n        }\n\n        return chooseLocale(key);\n    }\n\n    function listLocales() {\n        return keys(locales);\n    }\n\n    function checkOverflow(m) {\n        var overflow,\n            a = m._a;\n\n        if (a && getParsingFlags(m).overflow === -2) {\n            overflow =\n                a[MONTH] < 0 || a[MONTH] > 11\n                    ? MONTH\n                    : a[DATE] < 1 || a[DATE] > daysInMonth(a[YEAR], a[MONTH])\n                    ? DATE\n                    : a[HOUR] < 0 ||\n                      a[HOUR] > 24 ||\n                      (a[HOUR] === 24 &&\n                          (a[MINUTE] !== 0 ||\n                              a[SECOND] !== 0 ||\n                              a[MILLISECOND] !== 0))\n                    ? HOUR\n                    : a[MINUTE] < 0 || a[MINUTE] > 59\n                    ? MINUTE\n                    : a[SECOND] < 0 || a[SECOND] > 59\n                    ? SECOND\n                    : a[MILLISECOND] < 0 || a[MILLISECOND] > 999\n                    ? MILLISECOND\n                    : -1;\n\n            if (\n                getParsingFlags(m)._overflowDayOfYear &&\n                (overflow < YEAR || overflow > DATE)\n            ) {\n                overflow = DATE;\n            }\n            if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n                overflow = WEEK;\n            }\n            if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n                overflow = WEEKDAY;\n            }\n\n            getParsingFlags(m).overflow = overflow;\n        }\n\n        return m;\n    }\n\n    // iso 8601 regex\n    // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n    var extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([+-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/,\n        basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d|))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([+-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/,\n        tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/,\n        isoDates = [\n            ['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/],\n            ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/],\n            ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/],\n            ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false],\n            ['YYYY-DDD', /\\d{4}-\\d{3}/],\n            ['YYYY-MM', /\\d{4}-\\d\\d/, false],\n            ['YYYYYYMMDD', /[+-]\\d{10}/],\n            ['YYYYMMDD', /\\d{8}/],\n            ['GGGG[W]WWE', /\\d{4}W\\d{3}/],\n            ['GGGG[W]WW', /\\d{4}W\\d{2}/, false],\n            ['YYYYDDD', /\\d{7}/],\n            ['YYYYMM', /\\d{6}/, false],\n            ['YYYY', /\\d{4}/, false],\n        ],\n        // iso time formats and regexes\n        isoTimes = [\n            ['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/],\n            ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/],\n            ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/],\n            ['HH:mm', /\\d\\d:\\d\\d/],\n            ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/],\n            ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/],\n            ['HHmmss', /\\d\\d\\d\\d\\d\\d/],\n            ['HHmm', /\\d\\d\\d\\d/],\n            ['HH', /\\d\\d/],\n        ],\n        aspNetJsonRegex = /^\\/?Date\\((-?\\d+)/i,\n        // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\n        rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\\d{4}))$/,\n        obsOffsets = {\n            UT: 0,\n            GMT: 0,\n            EDT: -4 * 60,\n            EST: -5 * 60,\n            CDT: -5 * 60,\n            CST: -6 * 60,\n            MDT: -6 * 60,\n            MST: -7 * 60,\n            PDT: -7 * 60,\n            PST: -8 * 60,\n        };\n\n    // date from iso format\n    function configFromISO(config) {\n        var i,\n            l,\n            string = config._i,\n            match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n            allowTime,\n            dateFormat,\n            timeFormat,\n            tzFormat;\n\n        if (match) {\n            getParsingFlags(config).iso = true;\n\n            for (i = 0, l = isoDates.length; i < l; i++) {\n                if (isoDates[i][1].exec(match[1])) {\n                    dateFormat = isoDates[i][0];\n                    allowTime = isoDates[i][2] !== false;\n                    break;\n                }\n            }\n            if (dateFormat == null) {\n                config._isValid = false;\n                return;\n            }\n            if (match[3]) {\n                for (i = 0, l = isoTimes.length; i < l; i++) {\n                    if (isoTimes[i][1].exec(match[3])) {\n                        // match[2] should be 'T' or space\n                        timeFormat = (match[2] || ' ') + isoTimes[i][0];\n                        break;\n                    }\n                }\n                if (timeFormat == null) {\n                    config._isValid = false;\n                    return;\n                }\n            }\n            if (!allowTime && timeFormat != null) {\n                config._isValid = false;\n                return;\n            }\n            if (match[4]) {\n                if (tzRegex.exec(match[4])) {\n                    tzFormat = 'Z';\n                } else {\n                    config._isValid = false;\n                    return;\n                }\n            }\n            config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n            configFromStringAndFormat(config);\n        } else {\n            config._isValid = false;\n        }\n    }\n\n    function extractFromRFC2822Strings(\n        yearStr,\n        monthStr,\n        dayStr,\n        hourStr,\n        minuteStr,\n        secondStr\n    ) {\n        var result = [\n            untruncateYear(yearStr),\n            defaultLocaleMonthsShort.indexOf(monthStr),\n            parseInt(dayStr, 10),\n            parseInt(hourStr, 10),\n            parseInt(minuteStr, 10),\n        ];\n\n        if (secondStr) {\n            result.push(parseInt(secondStr, 10));\n        }\n\n        return result;\n    }\n\n    function untruncateYear(yearStr) {\n        var year = parseInt(yearStr, 10);\n        if (year <= 49) {\n            return 2000 + year;\n        } else if (year <= 999) {\n            return 1900 + year;\n        }\n        return year;\n    }\n\n    function preprocessRFC2822(s) {\n        // Remove comments and folding whitespace and replace multiple-spaces with a single space\n        return s\n            .replace(/\\([^)]*\\)|[\\n\\t]/g, ' ')\n            .replace(/(\\s\\s+)/g, ' ')\n            .replace(/^\\s\\s*/, '')\n            .replace(/\\s\\s*$/, '');\n    }\n\n    function checkWeekday(weekdayStr, parsedInput, config) {\n        if (weekdayStr) {\n            // TODO: Replace the vanilla JS Date object with an independent day-of-week check.\n            var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),\n                weekdayActual = new Date(\n                    parsedInput[0],\n                    parsedInput[1],\n                    parsedInput[2]\n                ).getDay();\n            if (weekdayProvided !== weekdayActual) {\n                getParsingFlags(config).weekdayMismatch = true;\n                config._isValid = false;\n                return false;\n            }\n        }\n        return true;\n    }\n\n    function calculateOffset(obsOffset, militaryOffset, numOffset) {\n        if (obsOffset) {\n            return obsOffsets[obsOffset];\n        } else if (militaryOffset) {\n            // the only allowed military tz is Z\n            return 0;\n        } else {\n            var hm = parseInt(numOffset, 10),\n                m = hm % 100,\n                h = (hm - m) / 100;\n            return h * 60 + m;\n        }\n    }\n\n    // date and time from ref 2822 format\n    function configFromRFC2822(config) {\n        var match = rfc2822.exec(preprocessRFC2822(config._i)),\n            parsedArray;\n        if (match) {\n            parsedArray = extractFromRFC2822Strings(\n                match[4],\n                match[3],\n                match[2],\n                match[5],\n                match[6],\n                match[7]\n            );\n            if (!checkWeekday(match[1], parsedArray, config)) {\n                return;\n            }\n\n            config._a = parsedArray;\n            config._tzm = calculateOffset(match[8], match[9], match[10]);\n\n            config._d = createUTCDate.apply(null, config._a);\n            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n\n            getParsingFlags(config).rfc2822 = true;\n        } else {\n            config._isValid = false;\n        }\n    }\n\n    // date from 1) ASP.NET, 2) ISO, 3) RFC 2822 formats, or 4) optional fallback if parsing isn't strict\n    function configFromString(config) {\n        var matched = aspNetJsonRegex.exec(config._i);\n        if (matched !== null) {\n            config._d = new Date(+matched[1]);\n            return;\n        }\n\n        configFromISO(config);\n        if (config._isValid === false) {\n            delete config._isValid;\n        } else {\n            return;\n        }\n\n        configFromRFC2822(config);\n        if (config._isValid === false) {\n            delete config._isValid;\n        } else {\n            return;\n        }\n\n        if (config._strict) {\n            config._isValid = false;\n        } else {\n            // Final attempt, use Input Fallback\n            hooks.createFromInputFallback(config);\n        }\n    }\n\n    hooks.createFromInputFallback = deprecate(\n        'value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' +\n            'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' +\n            'discouraged and will be removed in an upcoming major release. Please refer to ' +\n            'http://momentjs.com/guides/#/warnings/js-date/ for more info.',\n        function (config) {\n            config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n        }\n    );\n\n    // Pick the first defined of two or three arguments.\n    function defaults(a, b, c) {\n        if (a != null) {\n            return a;\n        }\n        if (b != null) {\n            return b;\n        }\n        return c;\n    }\n\n    function currentDateArray(config) {\n        // hooks is actually the exported moment object\n        var nowValue = new Date(hooks.now());\n        if (config._useUTC) {\n            return [\n                nowValue.getUTCFullYear(),\n                nowValue.getUTCMonth(),\n                nowValue.getUTCDate(),\n            ];\n        }\n        return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n    }\n\n    // convert an array to a date.\n    // the array should mirror the parameters below\n    // note: all values past the year are optional and will default to the lowest possible value.\n    // [year, month, day , hour, minute, second, millisecond]\n    function configFromArray(config) {\n        var i,\n            date,\n            input = [],\n            currentDate,\n            expectedWeekday,\n            yearToUse;\n\n        if (config._d) {\n            return;\n        }\n\n        currentDate = currentDateArray(config);\n\n        //compute day of the year from weeks and weekdays\n        if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n            dayOfYearFromWeekInfo(config);\n        }\n\n        //if the day of the year is set, figure out what it is\n        if (config._dayOfYear != null) {\n            yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n            if (\n                config._dayOfYear > daysInYear(yearToUse) ||\n                config._dayOfYear === 0\n            ) {\n                getParsingFlags(config)._overflowDayOfYear = true;\n            }\n\n            date = createUTCDate(yearToUse, 0, config._dayOfYear);\n            config._a[MONTH] = date.getUTCMonth();\n            config._a[DATE] = date.getUTCDate();\n        }\n\n        // Default to current date.\n        // * if no year, month, day of month are given, default to today\n        // * if day of month is given, default month and year\n        // * if month is given, default only year\n        // * if year is given, don't default anything\n        for (i = 0; i < 3 && config._a[i] == null; ++i) {\n            config._a[i] = input[i] = currentDate[i];\n        }\n\n        // Zero out whatever was not defaulted, including time\n        for (; i < 7; i++) {\n            config._a[i] = input[i] =\n                config._a[i] == null ? (i === 2 ? 1 : 0) : config._a[i];\n        }\n\n        // Check for 24:00:00.000\n        if (\n            config._a[HOUR] === 24 &&\n            config._a[MINUTE] === 0 &&\n            config._a[SECOND] === 0 &&\n            config._a[MILLISECOND] === 0\n        ) {\n            config._nextDay = true;\n            config._a[HOUR] = 0;\n        }\n\n        config._d = (config._useUTC ? createUTCDate : createDate).apply(\n            null,\n            input\n        );\n        expectedWeekday = config._useUTC\n            ? config._d.getUTCDay()\n            : config._d.getDay();\n\n        // Apply timezone offset from input. The actual utcOffset can be changed\n        // with parseZone.\n        if (config._tzm != null) {\n            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n        }\n\n        if (config._nextDay) {\n            config._a[HOUR] = 24;\n        }\n\n        // check for mismatching day of week\n        if (\n            config._w &&\n            typeof config._w.d !== 'undefined' &&\n            config._w.d !== expectedWeekday\n        ) {\n            getParsingFlags(config).weekdayMismatch = true;\n        }\n    }\n\n    function dayOfYearFromWeekInfo(config) {\n        var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow, curWeek;\n\n        w = config._w;\n        if (w.GG != null || w.W != null || w.E != null) {\n            dow = 1;\n            doy = 4;\n\n            // TODO: We need to take the current isoWeekYear, but that depends on\n            // how we interpret now (local, utc, fixed offset). So create\n            // a now version of current config (take local/utc/offset flags, and\n            // create now).\n            weekYear = defaults(\n                w.GG,\n                config._a[YEAR],\n                weekOfYear(createLocal(), 1, 4).year\n            );\n            week = defaults(w.W, 1);\n            weekday = defaults(w.E, 1);\n            if (weekday < 1 || weekday > 7) {\n                weekdayOverflow = true;\n            }\n        } else {\n            dow = config._locale._week.dow;\n            doy = config._locale._week.doy;\n\n            curWeek = weekOfYear(createLocal(), dow, doy);\n\n            weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);\n\n            // Default to current week.\n            week = defaults(w.w, curWeek.week);\n\n            if (w.d != null) {\n                // weekday -- low day numbers are considered next week\n                weekday = w.d;\n                if (weekday < 0 || weekday > 6) {\n                    weekdayOverflow = true;\n                }\n            } else if (w.e != null) {\n                // local weekday -- counting starts from beginning of week\n                weekday = w.e + dow;\n                if (w.e < 0 || w.e > 6) {\n                    weekdayOverflow = true;\n                }\n            } else {\n                // default to beginning of week\n                weekday = dow;\n            }\n        }\n        if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n            getParsingFlags(config)._overflowWeeks = true;\n        } else if (weekdayOverflow != null) {\n            getParsingFlags(config)._overflowWeekday = true;\n        } else {\n            temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n            config._a[YEAR] = temp.year;\n            config._dayOfYear = temp.dayOfYear;\n        }\n    }\n\n    // constant that refers to the ISO standard\n    hooks.ISO_8601 = function () {};\n\n    // constant that refers to the RFC 2822 form\n    hooks.RFC_2822 = function () {};\n\n    // date from string and format string\n    function configFromStringAndFormat(config) {\n        // TODO: Move this to another part of the creation flow to prevent circular deps\n        if (config._f === hooks.ISO_8601) {\n            configFromISO(config);\n            return;\n        }\n        if (config._f === hooks.RFC_2822) {\n            configFromRFC2822(config);\n            return;\n        }\n        config._a = [];\n        getParsingFlags(config).empty = true;\n\n        // This array is used to make a Date, either with `new Date` or `Date.UTC`\n        var string = '' + config._i,\n            i,\n            parsedInput,\n            tokens,\n            token,\n            skipped,\n            stringLength = string.length,\n            totalParsedInputLength = 0,\n            era;\n\n        tokens =\n            expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\n        for (i = 0; i < tokens.length; i++) {\n            token = tokens[i];\n            parsedInput = (string.match(getParseRegexForToken(token, config)) ||\n                [])[0];\n            if (parsedInput) {\n                skipped = string.substr(0, string.indexOf(parsedInput));\n                if (skipped.length > 0) {\n                    getParsingFlags(config).unusedInput.push(skipped);\n                }\n                string = string.slice(\n                    string.indexOf(parsedInput) + parsedInput.length\n                );\n                totalParsedInputLength += parsedInput.length;\n            }\n            // don't parse if it's not a known token\n            if (formatTokenFunctions[token]) {\n                if (parsedInput) {\n                    getParsingFlags(config).empty = false;\n                } else {\n                    getParsingFlags(config).unusedTokens.push(token);\n                }\n                addTimeToArrayFromToken(token, parsedInput, config);\n            } else if (config._strict && !parsedInput) {\n                getParsingFlags(config).unusedTokens.push(token);\n            }\n        }\n\n        // add remaining unparsed input length to the string\n        getParsingFlags(config).charsLeftOver =\n            stringLength - totalParsedInputLength;\n        if (string.length > 0) {\n            getParsingFlags(config).unusedInput.push(string);\n        }\n\n        // clear _12h flag if hour is <= 12\n        if (\n            config._a[HOUR] <= 12 &&\n            getParsingFlags(config).bigHour === true &&\n            config._a[HOUR] > 0\n        ) {\n            getParsingFlags(config).bigHour = undefined;\n        }\n\n        getParsingFlags(config).parsedDateParts = config._a.slice(0);\n        getParsingFlags(config).meridiem = config._meridiem;\n        // handle meridiem\n        config._a[HOUR] = meridiemFixWrap(\n            config._locale,\n            config._a[HOUR],\n            config._meridiem\n        );\n\n        // handle era\n        era = getParsingFlags(config).era;\n        if (era !== null) {\n            config._a[YEAR] = config._locale.erasConvertYear(era, config._a[YEAR]);\n        }\n\n        configFromArray(config);\n        checkOverflow(config);\n    }\n\n    function meridiemFixWrap(locale, hour, meridiem) {\n        var isPm;\n\n        if (meridiem == null) {\n            // nothing to do\n            return hour;\n        }\n        if (locale.meridiemHour != null) {\n            return locale.meridiemHour(hour, meridiem);\n        } else if (locale.isPM != null) {\n            // Fallback\n            isPm = locale.isPM(meridiem);\n            if (isPm && hour < 12) {\n                hour += 12;\n            }\n            if (!isPm && hour === 12) {\n                hour = 0;\n            }\n            return hour;\n        } else {\n            // this is not supposed to happen\n            return hour;\n        }\n    }\n\n    // date from string and array of format strings\n    function configFromStringAndArray(config) {\n        var tempConfig,\n            bestMoment,\n            scoreToBeat,\n            i,\n            currentScore,\n            validFormatFound,\n            bestFormatIsValid = false;\n\n        if (config._f.length === 0) {\n            getParsingFlags(config).invalidFormat = true;\n            config._d = new Date(NaN);\n            return;\n        }\n\n        for (i = 0; i < config._f.length; i++) {\n            currentScore = 0;\n            validFormatFound = false;\n            tempConfig = copyConfig({}, config);\n            if (config._useUTC != null) {\n                tempConfig._useUTC = config._useUTC;\n            }\n            tempConfig._f = config._f[i];\n            configFromStringAndFormat(tempConfig);\n\n            if (isValid(tempConfig)) {\n                validFormatFound = true;\n            }\n\n            // if there is any input that was not parsed add a penalty for that format\n            currentScore += getParsingFlags(tempConfig).charsLeftOver;\n\n            //or tokens\n            currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n\n            getParsingFlags(tempConfig).score = currentScore;\n\n            if (!bestFormatIsValid) {\n                if (\n                    scoreToBeat == null ||\n                    currentScore < scoreToBeat ||\n                    validFormatFound\n                ) {\n                    scoreToBeat = currentScore;\n                    bestMoment = tempConfig;\n                    if (validFormatFound) {\n                        bestFormatIsValid = true;\n                    }\n                }\n            } else {\n                if (currentScore < scoreToBeat) {\n                    scoreToBeat = currentScore;\n                    bestMoment = tempConfig;\n                }\n            }\n        }\n\n        extend(config, bestMoment || tempConfig);\n    }\n\n    function configFromObject(config) {\n        if (config._d) {\n            return;\n        }\n\n        var i = normalizeObjectUnits(config._i),\n            dayOrDate = i.day === undefined ? i.date : i.day;\n        config._a = map(\n            [i.year, i.month, dayOrDate, i.hour, i.minute, i.second, i.millisecond],\n            function (obj) {\n                return obj && parseInt(obj, 10);\n            }\n        );\n\n        configFromArray(config);\n    }\n\n    function createFromConfig(config) {\n        var res = new Moment(checkOverflow(prepareConfig(config)));\n        if (res._nextDay) {\n            // Adding is smart enough around DST\n            res.add(1, 'd');\n            res._nextDay = undefined;\n        }\n\n        return res;\n    }\n\n    function prepareConfig(config) {\n        var input = config._i,\n            format = config._f;\n\n        config._locale = config._locale || getLocale(config._l);\n\n        if (input === null || (format === undefined && input === '')) {\n            return createInvalid({ nullInput: true });\n        }\n\n        if (typeof input === 'string') {\n            config._i = input = config._locale.preparse(input);\n        }\n\n        if (isMoment(input)) {\n            return new Moment(checkOverflow(input));\n        } else if (isDate(input)) {\n            config._d = input;\n        } else if (isArray(format)) {\n            configFromStringAndArray(config);\n        } else if (format) {\n            configFromStringAndFormat(config);\n        } else {\n            configFromInput(config);\n        }\n\n        if (!isValid(config)) {\n            config._d = null;\n        }\n\n        return config;\n    }\n\n    function configFromInput(config) {\n        var input = config._i;\n        if (isUndefined(input)) {\n            config._d = new Date(hooks.now());\n        } else if (isDate(input)) {\n            config._d = new Date(input.valueOf());\n        } else if (typeof input === 'string') {\n            configFromString(config);\n        } else if (isArray(input)) {\n            config._a = map(input.slice(0), function (obj) {\n                return parseInt(obj, 10);\n            });\n            configFromArray(config);\n        } else if (isObject(input)) {\n            configFromObject(config);\n        } else if (isNumber(input)) {\n            // from milliseconds\n            config._d = new Date(input);\n        } else {\n            hooks.createFromInputFallback(config);\n        }\n    }\n\n    function createLocalOrUTC(input, format, locale, strict, isUTC) {\n        var c = {};\n\n        if (format === true || format === false) {\n            strict = format;\n            format = undefined;\n        }\n\n        if (locale === true || locale === false) {\n            strict = locale;\n            locale = undefined;\n        }\n\n        if (\n            (isObject(input) && isObjectEmpty(input)) ||\n            (isArray(input) && input.length === 0)\n        ) {\n            input = undefined;\n        }\n        // object construction must be done this way.\n        // https://github.com/moment/moment/issues/1423\n        c._isAMomentObject = true;\n        c._useUTC = c._isUTC = isUTC;\n        c._l = locale;\n        c._i = input;\n        c._f = format;\n        c._strict = strict;\n\n        return createFromConfig(c);\n    }\n\n    function createLocal(input, format, locale, strict) {\n        return createLocalOrUTC(input, format, locale, strict, false);\n    }\n\n    var prototypeMin = deprecate(\n            'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',\n            function () {\n                var other = createLocal.apply(null, arguments);\n                if (this.isValid() && other.isValid()) {\n                    return other < this ? this : other;\n                } else {\n                    return createInvalid();\n                }\n            }\n        ),\n        prototypeMax = deprecate(\n            'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',\n            function () {\n                var other = createLocal.apply(null, arguments);\n                if (this.isValid() && other.isValid()) {\n                    return other > this ? this : other;\n                } else {\n                    return createInvalid();\n                }\n            }\n        );\n\n    // Pick a moment m from moments so that m[fn](other) is true for all\n    // other. This relies on the function fn to be transitive.\n    //\n    // moments should either be an array of moment objects or an array, whose\n    // first element is an array of moment objects.\n    function pickBy(fn, moments) {\n        var res, i;\n        if (moments.length === 1 && isArray(moments[0])) {\n            moments = moments[0];\n        }\n        if (!moments.length) {\n            return createLocal();\n        }\n        res = moments[0];\n        for (i = 1; i < moments.length; ++i) {\n            if (!moments[i].isValid() || moments[i][fn](res)) {\n                res = moments[i];\n            }\n        }\n        return res;\n    }\n\n    // TODO: Use [].sort instead?\n    function min() {\n        var args = [].slice.call(arguments, 0);\n\n        return pickBy('isBefore', args);\n    }\n\n    function max() {\n        var args = [].slice.call(arguments, 0);\n\n        return pickBy('isAfter', args);\n    }\n\n    var now = function () {\n        return Date.now ? Date.now() : +new Date();\n    };\n\n    var ordering = [\n        'year',\n        'quarter',\n        'month',\n        'week',\n        'day',\n        'hour',\n        'minute',\n        'second',\n        'millisecond',\n    ];\n\n    function isDurationValid(m) {\n        var key,\n            unitHasDecimal = false,\n            i;\n        for (key in m) {\n            if (\n                hasOwnProp(m, key) &&\n                !(\n                    indexOf.call(ordering, key) !== -1 &&\n                    (m[key] == null || !isNaN(m[key]))\n                )\n            ) {\n                return false;\n            }\n        }\n\n        for (i = 0; i < ordering.length; ++i) {\n            if (m[ordering[i]]) {\n                if (unitHasDecimal) {\n                    return false; // only allow non-integers for smallest unit\n                }\n                if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {\n                    unitHasDecimal = true;\n                }\n            }\n        }\n\n        return true;\n    }\n\n    function isValid$1() {\n        return this._isValid;\n    }\n\n    function createInvalid$1() {\n        return createDuration(NaN);\n    }\n\n    function Duration(duration) {\n        var normalizedInput = normalizeObjectUnits(duration),\n            years = normalizedInput.year || 0,\n            quarters = normalizedInput.quarter || 0,\n            months = normalizedInput.month || 0,\n            weeks = normalizedInput.week || normalizedInput.isoWeek || 0,\n            days = normalizedInput.day || 0,\n            hours = normalizedInput.hour || 0,\n            minutes = normalizedInput.minute || 0,\n            seconds = normalizedInput.second || 0,\n            milliseconds = normalizedInput.millisecond || 0;\n\n        this._isValid = isDurationValid(normalizedInput);\n\n        // representation for dateAddRemove\n        this._milliseconds =\n            +milliseconds +\n            seconds * 1e3 + // 1000\n            minutes * 6e4 + // 1000 * 60\n            hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n        // Because of dateAddRemove treats 24 hours as different from a\n        // day when working around DST, we need to store them separately\n        this._days = +days + weeks * 7;\n        // It is impossible to translate months into days without knowing\n        // which months you are are talking about, so we have to store\n        // it separately.\n        this._months = +months + quarters * 3 + years * 12;\n\n        this._data = {};\n\n        this._locale = getLocale();\n\n        this._bubble();\n    }\n\n    function isDuration(obj) {\n        return obj instanceof Duration;\n    }\n\n    function absRound(number) {\n        if (number < 0) {\n            return Math.round(-1 * number) * -1;\n        } else {\n            return Math.round(number);\n        }\n    }\n\n    // compare two arrays, return the number of differences\n    function compareArrays(array1, array2, dontConvert) {\n        var len = Math.min(array1.length, array2.length),\n            lengthDiff = Math.abs(array1.length - array2.length),\n            diffs = 0,\n            i;\n        for (i = 0; i < len; i++) {\n            if (\n                (dontConvert && array1[i] !== array2[i]) ||\n                (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))\n            ) {\n                diffs++;\n            }\n        }\n        return diffs + lengthDiff;\n    }\n\n    // FORMATTING\n\n    function offset(token, separator) {\n        addFormatToken(token, 0, 0, function () {\n            var offset = this.utcOffset(),\n                sign = '+';\n            if (offset < 0) {\n                offset = -offset;\n                sign = '-';\n            }\n            return (\n                sign +\n                zeroFill(~~(offset / 60), 2) +\n                separator +\n                zeroFill(~~offset % 60, 2)\n            );\n        });\n    }\n\n    offset('Z', ':');\n    offset('ZZ', '');\n\n    // PARSING\n\n    addRegexToken('Z', matchShortOffset);\n    addRegexToken('ZZ', matchShortOffset);\n    addParseToken(['Z', 'ZZ'], function (input, array, config) {\n        config._useUTC = true;\n        config._tzm = offsetFromString(matchShortOffset, input);\n    });\n\n    // HELPERS\n\n    // timezone chunker\n    // '+10:00' > ['10',  '00']\n    // '-1530'  > ['-15', '30']\n    var chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\n    function offsetFromString(matcher, string) {\n        var matches = (string || '').match(matcher),\n            chunk,\n            parts,\n            minutes;\n\n        if (matches === null) {\n            return null;\n        }\n\n        chunk = matches[matches.length - 1] || [];\n        parts = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n        minutes = +(parts[1] * 60) + toInt(parts[2]);\n\n        return minutes === 0 ? 0 : parts[0] === '+' ? minutes : -minutes;\n    }\n\n    // Return a moment from input, that is local/utc/zone equivalent to model.\n    function cloneWithOffset(input, model) {\n        var res, diff;\n        if (model._isUTC) {\n            res = model.clone();\n            diff =\n                (isMoment(input) || isDate(input)\n                    ? input.valueOf()\n                    : createLocal(input).valueOf()) - res.valueOf();\n            // Use low-level api, because this fn is low-level api.\n            res._d.setTime(res._d.valueOf() + diff);\n            hooks.updateOffset(res, false);\n            return res;\n        } else {\n            return createLocal(input).local();\n        }\n    }\n\n    function getDateOffset(m) {\n        // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n        // https://github.com/moment/moment/pull/1871\n        return -Math.round(m._d.getTimezoneOffset());\n    }\n\n    // HOOKS\n\n    // This function will be called whenever a moment is mutated.\n    // It is intended to keep the offset in sync with the timezone.\n    hooks.updateOffset = function () {};\n\n    // MOMENTS\n\n    // keepLocalTime = true means only change the timezone, without\n    // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n    // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n    // +0200, so we adjust the time as needed, to be valid.\n    //\n    // Keeping the time actually adds/subtracts (one hour)\n    // from the actual represented time. That is why we call updateOffset\n    // a second time. In case it wants us to change the offset again\n    // _changeInProgress == true case, then we have to adjust, because\n    // there is no such time in the given timezone.\n    function getSetOffset(input, keepLocalTime, keepMinutes) {\n        var offset = this._offset || 0,\n            localAdjust;\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        if (input != null) {\n            if (typeof input === 'string') {\n                input = offsetFromString(matchShortOffset, input);\n                if (input === null) {\n                    return this;\n                }\n            } else if (Math.abs(input) < 16 && !keepMinutes) {\n                input = input * 60;\n            }\n            if (!this._isUTC && keepLocalTime) {\n                localAdjust = getDateOffset(this);\n            }\n            this._offset = input;\n            this._isUTC = true;\n            if (localAdjust != null) {\n                this.add(localAdjust, 'm');\n            }\n            if (offset !== input) {\n                if (!keepLocalTime || this._changeInProgress) {\n                    addSubtract(\n                        this,\n                        createDuration(input - offset, 'm'),\n                        1,\n                        false\n                    );\n                } else if (!this._changeInProgress) {\n                    this._changeInProgress = true;\n                    hooks.updateOffset(this, true);\n                    this._changeInProgress = null;\n                }\n            }\n            return this;\n        } else {\n            return this._isUTC ? offset : getDateOffset(this);\n        }\n    }\n\n    function getSetZone(input, keepLocalTime) {\n        if (input != null) {\n            if (typeof input !== 'string') {\n                input = -input;\n            }\n\n            this.utcOffset(input, keepLocalTime);\n\n            return this;\n        } else {\n            return -this.utcOffset();\n        }\n    }\n\n    function setOffsetToUTC(keepLocalTime) {\n        return this.utcOffset(0, keepLocalTime);\n    }\n\n    function setOffsetToLocal(keepLocalTime) {\n        if (this._isUTC) {\n            this.utcOffset(0, keepLocalTime);\n            this._isUTC = false;\n\n            if (keepLocalTime) {\n                this.subtract(getDateOffset(this), 'm');\n            }\n        }\n        return this;\n    }\n\n    function setOffsetToParsedOffset() {\n        if (this._tzm != null) {\n            this.utcOffset(this._tzm, false, true);\n        } else if (typeof this._i === 'string') {\n            var tZone = offsetFromString(matchOffset, this._i);\n            if (tZone != null) {\n                this.utcOffset(tZone);\n            } else {\n                this.utcOffset(0, true);\n            }\n        }\n        return this;\n    }\n\n    function hasAlignedHourOffset(input) {\n        if (!this.isValid()) {\n            return false;\n        }\n        input = input ? createLocal(input).utcOffset() : 0;\n\n        return (this.utcOffset() - input) % 60 === 0;\n    }\n\n    function isDaylightSavingTime() {\n        return (\n            this.utcOffset() > this.clone().month(0).utcOffset() ||\n            this.utcOffset() > this.clone().month(5).utcOffset()\n        );\n    }\n\n    function isDaylightSavingTimeShifted() {\n        if (!isUndefined(this._isDSTShifted)) {\n            return this._isDSTShifted;\n        }\n\n        var c = {},\n            other;\n\n        copyConfig(c, this);\n        c = prepareConfig(c);\n\n        if (c._a) {\n            other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n            this._isDSTShifted =\n                this.isValid() && compareArrays(c._a, other.toArray()) > 0;\n        } else {\n            this._isDSTShifted = false;\n        }\n\n        return this._isDSTShifted;\n    }\n\n    function isLocal() {\n        return this.isValid() ? !this._isUTC : false;\n    }\n\n    function isUtcOffset() {\n        return this.isValid() ? this._isUTC : false;\n    }\n\n    function isUtc() {\n        return this.isValid() ? this._isUTC && this._offset === 0 : false;\n    }\n\n    // ASP.NET json date format regex\n    var aspNetRegex = /^(-|\\+)?(?:(\\d*)[. ])?(\\d+):(\\d+)(?::(\\d+)(\\.\\d*)?)?$/,\n        // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n        // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n        // and further modified to allow for strings containing both week and day\n        isoRegex = /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n\n    function createDuration(input, key) {\n        var duration = input,\n            // matching against regexp is expensive, do it on demand\n            match = null,\n            sign,\n            ret,\n            diffRes;\n\n        if (isDuration(input)) {\n            duration = {\n                ms: input._milliseconds,\n                d: input._days,\n                M: input._months,\n            };\n        } else if (isNumber(input) || !isNaN(+input)) {\n            duration = {};\n            if (key) {\n                duration[key] = +input;\n            } else {\n                duration.milliseconds = +input;\n            }\n        } else if ((match = aspNetRegex.exec(input))) {\n            sign = match[1] === '-' ? -1 : 1;\n            duration = {\n                y: 0,\n                d: toInt(match[DATE]) * sign,\n                h: toInt(match[HOUR]) * sign,\n                m: toInt(match[MINUTE]) * sign,\n                s: toInt(match[SECOND]) * sign,\n                ms: toInt(absRound(match[MILLISECOND] * 1000)) * sign, // the millisecond decimal point is included in the match\n            };\n        } else if ((match = isoRegex.exec(input))) {\n            sign = match[1] === '-' ? -1 : 1;\n            duration = {\n                y: parseIso(match[2], sign),\n                M: parseIso(match[3], sign),\n                w: parseIso(match[4], sign),\n                d: parseIso(match[5], sign),\n                h: parseIso(match[6], sign),\n                m: parseIso(match[7], sign),\n                s: parseIso(match[8], sign),\n            };\n        } else if (duration == null) {\n            // checks for null or undefined\n            duration = {};\n        } else if (\n            typeof duration === 'object' &&\n            ('from' in duration || 'to' in duration)\n        ) {\n            diffRes = momentsDifference(\n                createLocal(duration.from),\n                createLocal(duration.to)\n            );\n\n            duration = {};\n            duration.ms = diffRes.milliseconds;\n            duration.M = diffRes.months;\n        }\n\n        ret = new Duration(duration);\n\n        if (isDuration(input) && hasOwnProp(input, '_locale')) {\n            ret._locale = input._locale;\n        }\n\n        if (isDuration(input) && hasOwnProp(input, '_isValid')) {\n            ret._isValid = input._isValid;\n        }\n\n        return ret;\n    }\n\n    createDuration.fn = Duration.prototype;\n    createDuration.invalid = createInvalid$1;\n\n    function parseIso(inp, sign) {\n        // We'd normally use ~~inp for this, but unfortunately it also\n        // converts floats to ints.\n        // inp may be undefined, so careful calling replace on it.\n        var res = inp && parseFloat(inp.replace(',', '.'));\n        // apply sign while we're at it\n        return (isNaN(res) ? 0 : res) * sign;\n    }\n\n    function positiveMomentsDifference(base, other) {\n        var res = {};\n\n        res.months =\n            other.month() - base.month() + (other.year() - base.year()) * 12;\n        if (base.clone().add(res.months, 'M').isAfter(other)) {\n            --res.months;\n        }\n\n        res.milliseconds = +other - +base.clone().add(res.months, 'M');\n\n        return res;\n    }\n\n    function momentsDifference(base, other) {\n        var res;\n        if (!(base.isValid() && other.isValid())) {\n            return { milliseconds: 0, months: 0 };\n        }\n\n        other = cloneWithOffset(other, base);\n        if (base.isBefore(other)) {\n            res = positiveMomentsDifference(base, other);\n        } else {\n            res = positiveMomentsDifference(other, base);\n            res.milliseconds = -res.milliseconds;\n            res.months = -res.months;\n        }\n\n        return res;\n    }\n\n    // TODO: remove 'name' arg after deprecation is removed\n    function createAdder(direction, name) {\n        return function (val, period) {\n            var dur, tmp;\n            //invert the arguments, but complain about it\n            if (period !== null && !isNaN(+period)) {\n                deprecateSimple(\n                    name,\n                    'moment().' +\n                        name +\n                        '(period, number) is deprecated. Please use moment().' +\n                        name +\n                        '(number, period). ' +\n                        'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.'\n                );\n                tmp = val;\n                val = period;\n                period = tmp;\n            }\n\n            dur = createDuration(val, period);\n            addSubtract(this, dur, direction);\n            return this;\n        };\n    }\n\n    function addSubtract(mom, duration, isAdding, updateOffset) {\n        var milliseconds = duration._milliseconds,\n            days = absRound(duration._days),\n            months = absRound(duration._months);\n\n        if (!mom.isValid()) {\n            // No op\n            return;\n        }\n\n        updateOffset = updateOffset == null ? true : updateOffset;\n\n        if (months) {\n            setMonth(mom, get(mom, 'Month') + months * isAdding);\n        }\n        if (days) {\n            set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);\n        }\n        if (milliseconds) {\n            mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\n        }\n        if (updateOffset) {\n            hooks.updateOffset(mom, days || months);\n        }\n    }\n\n    var add = createAdder(1, 'add'),\n        subtract = createAdder(-1, 'subtract');\n\n    function isString(input) {\n        return typeof input === 'string' || input instanceof String;\n    }\n\n    // type MomentInput = Moment | Date | string | number | (number | string)[] | MomentInputObject | void; // null | undefined\n    function isMomentInput(input) {\n        return (\n            isMoment(input) ||\n            isDate(input) ||\n            isString(input) ||\n            isNumber(input) ||\n            isNumberOrStringArray(input) ||\n            isMomentInputObject(input) ||\n            input === null ||\n            input === undefined\n        );\n    }\n\n    function isMomentInputObject(input) {\n        var objectTest = isObject(input) && !isObjectEmpty(input),\n            propertyTest = false,\n            properties = [\n                'years',\n                'year',\n                'y',\n                'months',\n                'month',\n                'M',\n                'days',\n                'day',\n                'd',\n                'dates',\n                'date',\n                'D',\n                'hours',\n                'hour',\n                'h',\n                'minutes',\n                'minute',\n                'm',\n                'seconds',\n                'second',\n                's',\n                'milliseconds',\n                'millisecond',\n                'ms',\n            ],\n            i,\n            property;\n\n        for (i = 0; i < properties.length; i += 1) {\n            property = properties[i];\n            propertyTest = propertyTest || hasOwnProp(input, property);\n        }\n\n        return objectTest && propertyTest;\n    }\n\n    function isNumberOrStringArray(input) {\n        var arrayTest = isArray(input),\n            dataTypeTest = false;\n        if (arrayTest) {\n            dataTypeTest =\n                input.filter(function (item) {\n                    return !isNumber(item) && isString(input);\n                }).length === 0;\n        }\n        return arrayTest && dataTypeTest;\n    }\n\n    function isCalendarSpec(input) {\n        var objectTest = isObject(input) && !isObjectEmpty(input),\n            propertyTest = false,\n            properties = [\n                'sameDay',\n                'nextDay',\n                'lastDay',\n                'nextWeek',\n                'lastWeek',\n                'sameElse',\n            ],\n            i,\n            property;\n\n        for (i = 0; i < properties.length; i += 1) {\n            property = properties[i];\n            propertyTest = propertyTest || hasOwnProp(input, property);\n        }\n\n        return objectTest && propertyTest;\n    }\n\n    function getCalendarFormat(myMoment, now) {\n        var diff = myMoment.diff(now, 'days', true);\n        return diff < -6\n            ? 'sameElse'\n            : diff < -1\n            ? 'lastWeek'\n            : diff < 0\n            ? 'lastDay'\n            : diff < 1\n            ? 'sameDay'\n            : diff < 2\n            ? 'nextDay'\n            : diff < 7\n            ? 'nextWeek'\n            : 'sameElse';\n    }\n\n    function calendar$1(time, formats) {\n        // Support for single parameter, formats only overload to the calendar function\n        if (arguments.length === 1) {\n            if (isMomentInput(arguments[0])) {\n                time = arguments[0];\n                formats = undefined;\n            } else if (isCalendarSpec(arguments[0])) {\n                formats = arguments[0];\n                time = undefined;\n            }\n        }\n        // We want to compare the start of today, vs this.\n        // Getting start-of-today depends on whether we're local/utc/offset or not.\n        var now = time || createLocal(),\n            sod = cloneWithOffset(now, this).startOf('day'),\n            format = hooks.calendarFormat(this, sod) || 'sameElse',\n            output =\n                formats &&\n                (isFunction(formats[format])\n                    ? formats[format].call(this, now)\n                    : formats[format]);\n\n        return this.format(\n            output || this.localeData().calendar(format, this, createLocal(now))\n        );\n    }\n\n    function clone() {\n        return new Moment(this);\n    }\n\n    function isAfter(input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input);\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(units) || 'millisecond';\n        if (units === 'millisecond') {\n            return this.valueOf() > localInput.valueOf();\n        } else {\n            return localInput.valueOf() < this.clone().startOf(units).valueOf();\n        }\n    }\n\n    function isBefore(input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input);\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(units) || 'millisecond';\n        if (units === 'millisecond') {\n            return this.valueOf() < localInput.valueOf();\n        } else {\n            return this.clone().endOf(units).valueOf() < localInput.valueOf();\n        }\n    }\n\n    function isBetween(from, to, units, inclusivity) {\n        var localFrom = isMoment(from) ? from : createLocal(from),\n            localTo = isMoment(to) ? to : createLocal(to);\n        if (!(this.isValid() && localFrom.isValid() && localTo.isValid())) {\n            return false;\n        }\n        inclusivity = inclusivity || '()';\n        return (\n            (inclusivity[0] === '('\n                ? this.isAfter(localFrom, units)\n                : !this.isBefore(localFrom, units)) &&\n            (inclusivity[1] === ')'\n                ? this.isBefore(localTo, units)\n                : !this.isAfter(localTo, units))\n        );\n    }\n\n    function isSame(input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input),\n            inputMs;\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(units) || 'millisecond';\n        if (units === 'millisecond') {\n            return this.valueOf() === localInput.valueOf();\n        } else {\n            inputMs = localInput.valueOf();\n            return (\n                this.clone().startOf(units).valueOf() <= inputMs &&\n                inputMs <= this.clone().endOf(units).valueOf()\n            );\n        }\n    }\n\n    function isSameOrAfter(input, units) {\n        return this.isSame(input, units) || this.isAfter(input, units);\n    }\n\n    function isSameOrBefore(input, units) {\n        return this.isSame(input, units) || this.isBefore(input, units);\n    }\n\n    function diff(input, units, asFloat) {\n        var that, zoneDelta, output;\n\n        if (!this.isValid()) {\n            return NaN;\n        }\n\n        that = cloneWithOffset(input, this);\n\n        if (!that.isValid()) {\n            return NaN;\n        }\n\n        zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n\n        units = normalizeUnits(units);\n\n        switch (units) {\n            case 'year':\n                output = monthDiff(this, that) / 12;\n                break;\n            case 'month':\n                output = monthDiff(this, that);\n                break;\n            case 'quarter':\n                output = monthDiff(this, that) / 3;\n                break;\n            case 'second':\n                output = (this - that) / 1e3;\n                break; // 1000\n            case 'minute':\n                output = (this - that) / 6e4;\n                break; // 1000 * 60\n            case 'hour':\n                output = (this - that) / 36e5;\n                break; // 1000 * 60 * 60\n            case 'day':\n                output = (this - that - zoneDelta) / 864e5;\n                break; // 1000 * 60 * 60 * 24, negate dst\n            case 'week':\n                output = (this - that - zoneDelta) / 6048e5;\n                break; // 1000 * 60 * 60 * 24 * 7, negate dst\n            default:\n                output = this - that;\n        }\n\n        return asFloat ? output : absFloor(output);\n    }\n\n    function monthDiff(a, b) {\n        if (a.date() < b.date()) {\n            // end-of-month calculations work correct when the start month has more\n            // days than the end month.\n            return -monthDiff(b, a);\n        }\n        // difference in months\n        var wholeMonthDiff = (b.year() - a.year()) * 12 + (b.month() - a.month()),\n            // b is in (anchor - 1 month, anchor + 1 month)\n            anchor = a.clone().add(wholeMonthDiff, 'months'),\n            anchor2,\n            adjust;\n\n        if (b - anchor < 0) {\n            anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');\n            // linear across the month\n            adjust = (b - anchor) / (anchor - anchor2);\n        } else {\n            anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');\n            // linear across the month\n            adjust = (b - anchor) / (anchor2 - anchor);\n        }\n\n        //check for negative zero, return zero if negative zero\n        return -(wholeMonthDiff + adjust) || 0;\n    }\n\n    hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\n    hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\n\n    function toString() {\n        return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n    }\n\n    function toISOString(keepOffset) {\n        if (!this.isValid()) {\n            return null;\n        }\n        var utc = keepOffset !== true,\n            m = utc ? this.clone().utc() : this;\n        if (m.year() < 0 || m.year() > 9999) {\n            return formatMoment(\n                m,\n                utc\n                    ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]'\n                    : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ'\n            );\n        }\n        if (isFunction(Date.prototype.toISOString)) {\n            // native implementation is ~50x faster, use it when we can\n            if (utc) {\n                return this.toDate().toISOString();\n            } else {\n                return new Date(this.valueOf() + this.utcOffset() * 60 * 1000)\n                    .toISOString()\n                    .replace('Z', formatMoment(m, 'Z'));\n            }\n        }\n        return formatMoment(\n            m,\n            utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ'\n        );\n    }\n\n    /**\n     * Return a human readable representation of a moment that can\n     * also be evaluated to get a new moment which is the same\n     *\n     * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\n     */\n    function inspect() {\n        if (!this.isValid()) {\n            return 'moment.invalid(/* ' + this._i + ' */)';\n        }\n        var func = 'moment',\n            zone = '',\n            prefix,\n            year,\n            datetime,\n            suffix;\n        if (!this.isLocal()) {\n            func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\n            zone = 'Z';\n        }\n        prefix = '[' + func + '(\"]';\n        year = 0 <= this.year() && this.year() <= 9999 ? 'YYYY' : 'YYYYYY';\n        datetime = '-MM-DD[T]HH:mm:ss.SSS';\n        suffix = zone + '[\")]';\n\n        return this.format(prefix + year + datetime + suffix);\n    }\n\n    function format(inputString) {\n        if (!inputString) {\n            inputString = this.isUtc()\n                ? hooks.defaultFormatUtc\n                : hooks.defaultFormat;\n        }\n        var output = formatMoment(this, inputString);\n        return this.localeData().postformat(output);\n    }\n\n    function from(time, withoutSuffix) {\n        if (\n            this.isValid() &&\n            ((isMoment(time) && time.isValid()) || createLocal(time).isValid())\n        ) {\n            return createDuration({ to: this, from: time })\n                .locale(this.locale())\n                .humanize(!withoutSuffix);\n        } else {\n            return this.localeData().invalidDate();\n        }\n    }\n\n    function fromNow(withoutSuffix) {\n        return this.from(createLocal(), withoutSuffix);\n    }\n\n    function to(time, withoutSuffix) {\n        if (\n            this.isValid() &&\n            ((isMoment(time) && time.isValid()) || createLocal(time).isValid())\n        ) {\n            return createDuration({ from: this, to: time })\n                .locale(this.locale())\n                .humanize(!withoutSuffix);\n        } else {\n            return this.localeData().invalidDate();\n        }\n    }\n\n    function toNow(withoutSuffix) {\n        return this.to(createLocal(), withoutSuffix);\n    }\n\n    // If passed a locale key, it will set the locale for this\n    // instance.  Otherwise, it will return the locale configuration\n    // variables for this instance.\n    function locale(key) {\n        var newLocaleData;\n\n        if (key === undefined) {\n            return this._locale._abbr;\n        } else {\n            newLocaleData = getLocale(key);\n            if (newLocaleData != null) {\n                this._locale = newLocaleData;\n            }\n            return this;\n        }\n    }\n\n    var lang = deprecate(\n        'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',\n        function (key) {\n            if (key === undefined) {\n                return this.localeData();\n            } else {\n                return this.locale(key);\n            }\n        }\n    );\n\n    function localeData() {\n        return this._locale;\n    }\n\n    var MS_PER_SECOND = 1000,\n        MS_PER_MINUTE = 60 * MS_PER_SECOND,\n        MS_PER_HOUR = 60 * MS_PER_MINUTE,\n        MS_PER_400_YEARS = (365 * 400 + 97) * 24 * MS_PER_HOUR;\n\n    // actual modulo - handles negative numbers (for dates before 1970):\n    function mod$1(dividend, divisor) {\n        return ((dividend % divisor) + divisor) % divisor;\n    }\n\n    function localStartOfDate(y, m, d) {\n        // the date constructor remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) {\n            // preserve leap years using a full 400 year cycle, then reset\n            return new Date(y + 400, m, d) - MS_PER_400_YEARS;\n        } else {\n            return new Date(y, m, d).valueOf();\n        }\n    }\n\n    function utcStartOfDate(y, m, d) {\n        // Date.UTC remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) {\n            // preserve leap years using a full 400 year cycle, then reset\n            return Date.UTC(y + 400, m, d) - MS_PER_400_YEARS;\n        } else {\n            return Date.UTC(y, m, d);\n        }\n    }\n\n    function startOf(units) {\n        var time, startOfDate;\n        units = normalizeUnits(units);\n        if (units === undefined || units === 'millisecond' || !this.isValid()) {\n            return this;\n        }\n\n        startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n        switch (units) {\n            case 'year':\n                time = startOfDate(this.year(), 0, 1);\n                break;\n            case 'quarter':\n                time = startOfDate(\n                    this.year(),\n                    this.month() - (this.month() % 3),\n                    1\n                );\n                break;\n            case 'month':\n                time = startOfDate(this.year(), this.month(), 1);\n                break;\n            case 'week':\n                time = startOfDate(\n                    this.year(),\n                    this.month(),\n                    this.date() - this.weekday()\n                );\n                break;\n            case 'isoWeek':\n                time = startOfDate(\n                    this.year(),\n                    this.month(),\n                    this.date() - (this.isoWeekday() - 1)\n                );\n                break;\n            case 'day':\n            case 'date':\n                time = startOfDate(this.year(), this.month(), this.date());\n                break;\n            case 'hour':\n                time = this._d.valueOf();\n                time -= mod$1(\n                    time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE),\n                    MS_PER_HOUR\n                );\n                break;\n            case 'minute':\n                time = this._d.valueOf();\n                time -= mod$1(time, MS_PER_MINUTE);\n                break;\n            case 'second':\n                time = this._d.valueOf();\n                time -= mod$1(time, MS_PER_SECOND);\n                break;\n        }\n\n        this._d.setTime(time);\n        hooks.updateOffset(this, true);\n        return this;\n    }\n\n    function endOf(units) {\n        var time, startOfDate;\n        units = normalizeUnits(units);\n        if (units === undefined || units === 'millisecond' || !this.isValid()) {\n            return this;\n        }\n\n        startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n        switch (units) {\n            case 'year':\n                time = startOfDate(this.year() + 1, 0, 1) - 1;\n                break;\n            case 'quarter':\n                time =\n                    startOfDate(\n                        this.year(),\n                        this.month() - (this.month() % 3) + 3,\n                        1\n                    ) - 1;\n                break;\n            case 'month':\n                time = startOfDate(this.year(), this.month() + 1, 1) - 1;\n                break;\n            case 'week':\n                time =\n                    startOfDate(\n                        this.year(),\n                        this.month(),\n                        this.date() - this.weekday() + 7\n                    ) - 1;\n                break;\n            case 'isoWeek':\n                time =\n                    startOfDate(\n                        this.year(),\n                        this.month(),\n                        this.date() - (this.isoWeekday() - 1) + 7\n                    ) - 1;\n                break;\n            case 'day':\n            case 'date':\n                time = startOfDate(this.year(), this.month(), this.date() + 1) - 1;\n                break;\n            case 'hour':\n                time = this._d.valueOf();\n                time +=\n                    MS_PER_HOUR -\n                    mod$1(\n                        time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE),\n                        MS_PER_HOUR\n                    ) -\n                    1;\n                break;\n            case 'minute':\n                time = this._d.valueOf();\n                time += MS_PER_MINUTE - mod$1(time, MS_PER_MINUTE) - 1;\n                break;\n            case 'second':\n                time = this._d.valueOf();\n                time += MS_PER_SECOND - mod$1(time, MS_PER_SECOND) - 1;\n                break;\n        }\n\n        this._d.setTime(time);\n        hooks.updateOffset(this, true);\n        return this;\n    }\n\n    function valueOf() {\n        return this._d.valueOf() - (this._offset || 0) * 60000;\n    }\n\n    function unix() {\n        return Math.floor(this.valueOf() / 1000);\n    }\n\n    function toDate() {\n        return new Date(this.valueOf());\n    }\n\n    function toArray() {\n        var m = this;\n        return [\n            m.year(),\n            m.month(),\n            m.date(),\n            m.hour(),\n            m.minute(),\n            m.second(),\n            m.millisecond(),\n        ];\n    }\n\n    function toObject() {\n        var m = this;\n        return {\n            years: m.year(),\n            months: m.month(),\n            date: m.date(),\n            hours: m.hours(),\n            minutes: m.minutes(),\n            seconds: m.seconds(),\n            milliseconds: m.milliseconds(),\n        };\n    }\n\n    function toJSON() {\n        // new Date(NaN).toJSON() === null\n        return this.isValid() ? this.toISOString() : null;\n    }\n\n    function isValid$2() {\n        return isValid(this);\n    }\n\n    function parsingFlags() {\n        return extend({}, getParsingFlags(this));\n    }\n\n    function invalidAt() {\n        return getParsingFlags(this).overflow;\n    }\n\n    function creationData() {\n        return {\n            input: this._i,\n            format: this._f,\n            locale: this._locale,\n            isUTC: this._isUTC,\n            strict: this._strict,\n        };\n    }\n\n    addFormatToken('N', 0, 0, 'eraAbbr');\n    addFormatToken('NN', 0, 0, 'eraAbbr');\n    addFormatToken('NNN', 0, 0, 'eraAbbr');\n    addFormatToken('NNNN', 0, 0, 'eraName');\n    addFormatToken('NNNNN', 0, 0, 'eraNarrow');\n\n    addFormatToken('y', ['y', 1], 'yo', 'eraYear');\n    addFormatToken('y', ['yy', 2], 0, 'eraYear');\n    addFormatToken('y', ['yyy', 3], 0, 'eraYear');\n    addFormatToken('y', ['yyyy', 4], 0, 'eraYear');\n\n    addRegexToken('N', matchEraAbbr);\n    addRegexToken('NN', matchEraAbbr);\n    addRegexToken('NNN', matchEraAbbr);\n    addRegexToken('NNNN', matchEraName);\n    addRegexToken('NNNNN', matchEraNarrow);\n\n    addParseToken(['N', 'NN', 'NNN', 'NNNN', 'NNNNN'], function (\n        input,\n        array,\n        config,\n        token\n    ) {\n        var era = config._locale.erasParse(input, token, config._strict);\n        if (era) {\n            getParsingFlags(config).era = era;\n        } else {\n            getParsingFlags(config).invalidEra = input;\n        }\n    });\n\n    addRegexToken('y', matchUnsigned);\n    addRegexToken('yy', matchUnsigned);\n    addRegexToken('yyy', matchUnsigned);\n    addRegexToken('yyyy', matchUnsigned);\n    addRegexToken('yo', matchEraYearOrdinal);\n\n    addParseToken(['y', 'yy', 'yyy', 'yyyy'], YEAR);\n    addParseToken(['yo'], function (input, array, config, token) {\n        var match;\n        if (config._locale._eraYearOrdinalRegex) {\n            match = input.match(config._locale._eraYearOrdinalRegex);\n        }\n\n        if (config._locale.eraYearOrdinalParse) {\n            array[YEAR] = config._locale.eraYearOrdinalParse(input, match);\n        } else {\n            array[YEAR] = parseInt(input, 10);\n        }\n    });\n\n    function localeEras(m, format) {\n        var i,\n            l,\n            date,\n            eras = this._eras || getLocale('en')._eras;\n        for (i = 0, l = eras.length; i < l; ++i) {\n            switch (typeof eras[i].since) {\n                case 'string':\n                    // truncate time\n                    date = hooks(eras[i].since).startOf('day');\n                    eras[i].since = date.valueOf();\n                    break;\n            }\n\n            switch (typeof eras[i].until) {\n                case 'undefined':\n                    eras[i].until = +Infinity;\n                    break;\n                case 'string':\n                    // truncate time\n                    date = hooks(eras[i].until).startOf('day').valueOf();\n                    eras[i].until = date.valueOf();\n                    break;\n            }\n        }\n        return eras;\n    }\n\n    function localeErasParse(eraName, format, strict) {\n        var i,\n            l,\n            eras = this.eras(),\n            name,\n            abbr,\n            narrow;\n        eraName = eraName.toUpperCase();\n\n        for (i = 0, l = eras.length; i < l; ++i) {\n            name = eras[i].name.toUpperCase();\n            abbr = eras[i].abbr.toUpperCase();\n            narrow = eras[i].narrow.toUpperCase();\n\n            if (strict) {\n                switch (format) {\n                    case 'N':\n                    case 'NN':\n                    case 'NNN':\n                        if (abbr === eraName) {\n                            return eras[i];\n                        }\n                        break;\n\n                    case 'NNNN':\n                        if (name === eraName) {\n                            return eras[i];\n                        }\n                        break;\n\n                    case 'NNNNN':\n                        if (narrow === eraName) {\n                            return eras[i];\n                        }\n                        break;\n                }\n            } else if ([name, abbr, narrow].indexOf(eraName) >= 0) {\n                return eras[i];\n            }\n        }\n    }\n\n    function localeErasConvertYear(era, year) {\n        var dir = era.since <= era.until ? +1 : -1;\n        if (year === undefined) {\n            return hooks(era.since).year();\n        } else {\n            return hooks(era.since).year() + (year - era.offset) * dir;\n        }\n    }\n\n    function getEraName() {\n        var i,\n            l,\n            val,\n            eras = this.localeData().eras();\n        for (i = 0, l = eras.length; i < l; ++i) {\n            // truncate time\n            val = this.startOf('day').valueOf();\n\n            if (eras[i].since <= val && val <= eras[i].until) {\n                return eras[i].name;\n            }\n            if (eras[i].until <= val && val <= eras[i].since) {\n                return eras[i].name;\n            }\n        }\n\n        return '';\n    }\n\n    function getEraNarrow() {\n        var i,\n            l,\n            val,\n            eras = this.localeData().eras();\n        for (i = 0, l = eras.length; i < l; ++i) {\n            // truncate time\n            val = this.startOf('day').valueOf();\n\n            if (eras[i].since <= val && val <= eras[i].until) {\n                return eras[i].narrow;\n            }\n            if (eras[i].until <= val && val <= eras[i].since) {\n                return eras[i].narrow;\n            }\n        }\n\n        return '';\n    }\n\n    function getEraAbbr() {\n        var i,\n            l,\n            val,\n            eras = this.localeData().eras();\n        for (i = 0, l = eras.length; i < l; ++i) {\n            // truncate time\n            val = this.startOf('day').valueOf();\n\n            if (eras[i].since <= val && val <= eras[i].until) {\n                return eras[i].abbr;\n            }\n            if (eras[i].until <= val && val <= eras[i].since) {\n                return eras[i].abbr;\n            }\n        }\n\n        return '';\n    }\n\n    function getEraYear() {\n        var i,\n            l,\n            dir,\n            val,\n            eras = this.localeData().eras();\n        for (i = 0, l = eras.length; i < l; ++i) {\n            dir = eras[i].since <= eras[i].until ? +1 : -1;\n\n            // truncate time\n            val = this.startOf('day').valueOf();\n\n            if (\n                (eras[i].since <= val && val <= eras[i].until) ||\n                (eras[i].until <= val && val <= eras[i].since)\n            ) {\n                return (\n                    (this.year() - hooks(eras[i].since).year()) * dir +\n                    eras[i].offset\n                );\n            }\n        }\n\n        return this.year();\n    }\n\n    function erasNameRegex(isStrict) {\n        if (!hasOwnProp(this, '_erasNameRegex')) {\n            computeErasParse.call(this);\n        }\n        return isStrict ? this._erasNameRegex : this._erasRegex;\n    }\n\n    function erasAbbrRegex(isStrict) {\n        if (!hasOwnProp(this, '_erasAbbrRegex')) {\n            computeErasParse.call(this);\n        }\n        return isStrict ? this._erasAbbrRegex : this._erasRegex;\n    }\n\n    function erasNarrowRegex(isStrict) {\n        if (!hasOwnProp(this, '_erasNarrowRegex')) {\n            computeErasParse.call(this);\n        }\n        return isStrict ? this._erasNarrowRegex : this._erasRegex;\n    }\n\n    function matchEraAbbr(isStrict, locale) {\n        return locale.erasAbbrRegex(isStrict);\n    }\n\n    function matchEraName(isStrict, locale) {\n        return locale.erasNameRegex(isStrict);\n    }\n\n    function matchEraNarrow(isStrict, locale) {\n        return locale.erasNarrowRegex(isStrict);\n    }\n\n    function matchEraYearOrdinal(isStrict, locale) {\n        return locale._eraYearOrdinalRegex || matchUnsigned;\n    }\n\n    function computeErasParse() {\n        var abbrPieces = [],\n            namePieces = [],\n            narrowPieces = [],\n            mixedPieces = [],\n            i,\n            l,\n            eras = this.eras();\n\n        for (i = 0, l = eras.length; i < l; ++i) {\n            namePieces.push(regexEscape(eras[i].name));\n            abbrPieces.push(regexEscape(eras[i].abbr));\n            narrowPieces.push(regexEscape(eras[i].narrow));\n\n            mixedPieces.push(regexEscape(eras[i].name));\n            mixedPieces.push(regexEscape(eras[i].abbr));\n            mixedPieces.push(regexEscape(eras[i].narrow));\n        }\n\n        this._erasRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n        this._erasNameRegex = new RegExp('^(' + namePieces.join('|') + ')', 'i');\n        this._erasAbbrRegex = new RegExp('^(' + abbrPieces.join('|') + ')', 'i');\n        this._erasNarrowRegex = new RegExp(\n            '^(' + narrowPieces.join('|') + ')',\n            'i'\n        );\n    }\n\n    // FORMATTING\n\n    addFormatToken(0, ['gg', 2], 0, function () {\n        return this.weekYear() % 100;\n    });\n\n    addFormatToken(0, ['GG', 2], 0, function () {\n        return this.isoWeekYear() % 100;\n    });\n\n    function addWeekYearFormatToken(token, getter) {\n        addFormatToken(0, [token, token.length], 0, getter);\n    }\n\n    addWeekYearFormatToken('gggg', 'weekYear');\n    addWeekYearFormatToken('ggggg', 'weekYear');\n    addWeekYearFormatToken('GGGG', 'isoWeekYear');\n    addWeekYearFormatToken('GGGGG', 'isoWeekYear');\n\n    // ALIASES\n\n    addUnitAlias('weekYear', 'gg');\n    addUnitAlias('isoWeekYear', 'GG');\n\n    // PRIORITY\n\n    addUnitPriority('weekYear', 1);\n    addUnitPriority('isoWeekYear', 1);\n\n    // PARSING\n\n    addRegexToken('G', matchSigned);\n    addRegexToken('g', matchSigned);\n    addRegexToken('GG', match1to2, match2);\n    addRegexToken('gg', match1to2, match2);\n    addRegexToken('GGGG', match1to4, match4);\n    addRegexToken('gggg', match1to4, match4);\n    addRegexToken('GGGGG', match1to6, match6);\n    addRegexToken('ggggg', match1to6, match6);\n\n    addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (\n        input,\n        week,\n        config,\n        token\n    ) {\n        week[token.substr(0, 2)] = toInt(input);\n    });\n\n    addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n        week[token] = hooks.parseTwoDigitYear(input);\n    });\n\n    // MOMENTS\n\n    function getSetWeekYear(input) {\n        return getSetWeekYearHelper.call(\n            this,\n            input,\n            this.week(),\n            this.weekday(),\n            this.localeData()._week.dow,\n            this.localeData()._week.doy\n        );\n    }\n\n    function getSetISOWeekYear(input) {\n        return getSetWeekYearHelper.call(\n            this,\n            input,\n            this.isoWeek(),\n            this.isoWeekday(),\n            1,\n            4\n        );\n    }\n\n    function getISOWeeksInYear() {\n        return weeksInYear(this.year(), 1, 4);\n    }\n\n    function getISOWeeksInISOWeekYear() {\n        return weeksInYear(this.isoWeekYear(), 1, 4);\n    }\n\n    function getWeeksInYear() {\n        var weekInfo = this.localeData()._week;\n        return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n    }\n\n    function getWeeksInWeekYear() {\n        var weekInfo = this.localeData()._week;\n        return weeksInYear(this.weekYear(), weekInfo.dow, weekInfo.doy);\n    }\n\n    function getSetWeekYearHelper(input, week, weekday, dow, doy) {\n        var weeksTarget;\n        if (input == null) {\n            return weekOfYear(this, dow, doy).year;\n        } else {\n            weeksTarget = weeksInYear(input, dow, doy);\n            if (week > weeksTarget) {\n                week = weeksTarget;\n            }\n            return setWeekAll.call(this, input, week, weekday, dow, doy);\n        }\n    }\n\n    function setWeekAll(weekYear, week, weekday, dow, doy) {\n        var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n            date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n\n        this.year(date.getUTCFullYear());\n        this.month(date.getUTCMonth());\n        this.date(date.getUTCDate());\n        return this;\n    }\n\n    // FORMATTING\n\n    addFormatToken('Q', 0, 'Qo', 'quarter');\n\n    // ALIASES\n\n    addUnitAlias('quarter', 'Q');\n\n    // PRIORITY\n\n    addUnitPriority('quarter', 7);\n\n    // PARSING\n\n    addRegexToken('Q', match1);\n    addParseToken('Q', function (input, array) {\n        array[MONTH] = (toInt(input) - 1) * 3;\n    });\n\n    // MOMENTS\n\n    function getSetQuarter(input) {\n        return input == null\n            ? Math.ceil((this.month() + 1) / 3)\n            : this.month((input - 1) * 3 + (this.month() % 3));\n    }\n\n    // FORMATTING\n\n    addFormatToken('D', ['DD', 2], 'Do', 'date');\n\n    // ALIASES\n\n    addUnitAlias('date', 'D');\n\n    // PRIORITY\n    addUnitPriority('date', 9);\n\n    // PARSING\n\n    addRegexToken('D', match1to2);\n    addRegexToken('DD', match1to2, match2);\n    addRegexToken('Do', function (isStrict, locale) {\n        // TODO: Remove \"ordinalParse\" fallback in next major release.\n        return isStrict\n            ? locale._dayOfMonthOrdinalParse || locale._ordinalParse\n            : locale._dayOfMonthOrdinalParseLenient;\n    });\n\n    addParseToken(['D', 'DD'], DATE);\n    addParseToken('Do', function (input, array) {\n        array[DATE] = toInt(input.match(match1to2)[0]);\n    });\n\n    // MOMENTS\n\n    var getSetDayOfMonth = makeGetSet('Date', true);\n\n    // FORMATTING\n\n    addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');\n\n    // ALIASES\n\n    addUnitAlias('dayOfYear', 'DDD');\n\n    // PRIORITY\n    addUnitPriority('dayOfYear', 4);\n\n    // PARSING\n\n    addRegexToken('DDD', match1to3);\n    addRegexToken('DDDD', match3);\n    addParseToken(['DDD', 'DDDD'], function (input, array, config) {\n        config._dayOfYear = toInt(input);\n    });\n\n    // HELPERS\n\n    // MOMENTS\n\n    function getSetDayOfYear(input) {\n        var dayOfYear =\n            Math.round(\n                (this.clone().startOf('day') - this.clone().startOf('year')) / 864e5\n            ) + 1;\n        return input == null ? dayOfYear : this.add(input - dayOfYear, 'd');\n    }\n\n    // FORMATTING\n\n    addFormatToken('m', ['mm', 2], 0, 'minute');\n\n    // ALIASES\n\n    addUnitAlias('minute', 'm');\n\n    // PRIORITY\n\n    addUnitPriority('minute', 14);\n\n    // PARSING\n\n    addRegexToken('m', match1to2);\n    addRegexToken('mm', match1to2, match2);\n    addParseToken(['m', 'mm'], MINUTE);\n\n    // MOMENTS\n\n    var getSetMinute = makeGetSet('Minutes', false);\n\n    // FORMATTING\n\n    addFormatToken('s', ['ss', 2], 0, 'second');\n\n    // ALIASES\n\n    addUnitAlias('second', 's');\n\n    // PRIORITY\n\n    addUnitPriority('second', 15);\n\n    // PARSING\n\n    addRegexToken('s', match1to2);\n    addRegexToken('ss', match1to2, match2);\n    addParseToken(['s', 'ss'], SECOND);\n\n    // MOMENTS\n\n    var getSetSecond = makeGetSet('Seconds', false);\n\n    // FORMATTING\n\n    addFormatToken('S', 0, 0, function () {\n        return ~~(this.millisecond() / 100);\n    });\n\n    addFormatToken(0, ['SS', 2], 0, function () {\n        return ~~(this.millisecond() / 10);\n    });\n\n    addFormatToken(0, ['SSS', 3], 0, 'millisecond');\n    addFormatToken(0, ['SSSS', 4], 0, function () {\n        return this.millisecond() * 10;\n    });\n    addFormatToken(0, ['SSSSS', 5], 0, function () {\n        return this.millisecond() * 100;\n    });\n    addFormatToken(0, ['SSSSSS', 6], 0, function () {\n        return this.millisecond() * 1000;\n    });\n    addFormatToken(0, ['SSSSSSS', 7], 0, function () {\n        return this.millisecond() * 10000;\n    });\n    addFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n        return this.millisecond() * 100000;\n    });\n    addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n        return this.millisecond() * 1000000;\n    });\n\n    // ALIASES\n\n    addUnitAlias('millisecond', 'ms');\n\n    // PRIORITY\n\n    addUnitPriority('millisecond', 16);\n\n    // PARSING\n\n    addRegexToken('S', match1to3, match1);\n    addRegexToken('SS', match1to3, match2);\n    addRegexToken('SSS', match1to3, match3);\n\n    var token, getSetMillisecond;\n    for (token = 'SSSS'; token.length <= 9; token += 'S') {\n        addRegexToken(token, matchUnsigned);\n    }\n\n    function parseMs(input, array) {\n        array[MILLISECOND] = toInt(('0.' + input) * 1000);\n    }\n\n    for (token = 'S'; token.length <= 9; token += 'S') {\n        addParseToken(token, parseMs);\n    }\n\n    getSetMillisecond = makeGetSet('Milliseconds', false);\n\n    // FORMATTING\n\n    addFormatToken('z', 0, 0, 'zoneAbbr');\n    addFormatToken('zz', 0, 0, 'zoneName');\n\n    // MOMENTS\n\n    function getZoneAbbr() {\n        return this._isUTC ? 'UTC' : '';\n    }\n\n    function getZoneName() {\n        return this._isUTC ? 'Coordinated Universal Time' : '';\n    }\n\n    var proto = Moment.prototype;\n\n    proto.add = add;\n    proto.calendar = calendar$1;\n    proto.clone = clone;\n    proto.diff = diff;\n    proto.endOf = endOf;\n    proto.format = format;\n    proto.from = from;\n    proto.fromNow = fromNow;\n    proto.to = to;\n    proto.toNow = toNow;\n    proto.get = stringGet;\n    proto.invalidAt = invalidAt;\n    proto.isAfter = isAfter;\n    proto.isBefore = isBefore;\n    proto.isBetween = isBetween;\n    proto.isSame = isSame;\n    proto.isSameOrAfter = isSameOrAfter;\n    proto.isSameOrBefore = isSameOrBefore;\n    proto.isValid = isValid$2;\n    proto.lang = lang;\n    proto.locale = locale;\n    proto.localeData = localeData;\n    proto.max = prototypeMax;\n    proto.min = prototypeMin;\n    proto.parsingFlags = parsingFlags;\n    proto.set = stringSet;\n    proto.startOf = startOf;\n    proto.subtract = subtract;\n    proto.toArray = toArray;\n    proto.toObject = toObject;\n    proto.toDate = toDate;\n    proto.toISOString = toISOString;\n    proto.inspect = inspect;\n    if (typeof Symbol !== 'undefined' && Symbol.for != null) {\n        proto[Symbol.for('nodejs.util.inspect.custom')] = function () {\n            return 'Moment<' + this.format() + '>';\n        };\n    }\n    proto.toJSON = toJSON;\n    proto.toString = toString;\n    proto.unix = unix;\n    proto.valueOf = valueOf;\n    proto.creationData = creationData;\n    proto.eraName = getEraName;\n    proto.eraNarrow = getEraNarrow;\n    proto.eraAbbr = getEraAbbr;\n    proto.eraYear = getEraYear;\n    proto.year = getSetYear;\n    proto.isLeapYear = getIsLeapYear;\n    proto.weekYear = getSetWeekYear;\n    proto.isoWeekYear = getSetISOWeekYear;\n    proto.quarter = proto.quarters = getSetQuarter;\n    proto.month = getSetMonth;\n    proto.daysInMonth = getDaysInMonth;\n    proto.week = proto.weeks = getSetWeek;\n    proto.isoWeek = proto.isoWeeks = getSetISOWeek;\n    proto.weeksInYear = getWeeksInYear;\n    proto.weeksInWeekYear = getWeeksInWeekYear;\n    proto.isoWeeksInYear = getISOWeeksInYear;\n    proto.isoWeeksInISOWeekYear = getISOWeeksInISOWeekYear;\n    proto.date = getSetDayOfMonth;\n    proto.day = proto.days = getSetDayOfWeek;\n    proto.weekday = getSetLocaleDayOfWeek;\n    proto.isoWeekday = getSetISODayOfWeek;\n    proto.dayOfYear = getSetDayOfYear;\n    proto.hour = proto.hours = getSetHour;\n    proto.minute = proto.minutes = getSetMinute;\n    proto.second = proto.seconds = getSetSecond;\n    proto.millisecond = proto.milliseconds = getSetMillisecond;\n    proto.utcOffset = getSetOffset;\n    proto.utc = setOffsetToUTC;\n    proto.local = setOffsetToLocal;\n    proto.parseZone = setOffsetToParsedOffset;\n    proto.hasAlignedHourOffset = hasAlignedHourOffset;\n    proto.isDST = isDaylightSavingTime;\n    proto.isLocal = isLocal;\n    proto.isUtcOffset = isUtcOffset;\n    proto.isUtc = isUtc;\n    proto.isUTC = isUtc;\n    proto.zoneAbbr = getZoneAbbr;\n    proto.zoneName = getZoneName;\n    proto.dates = deprecate(\n        'dates accessor is deprecated. Use date instead.',\n        getSetDayOfMonth\n    );\n    proto.months = deprecate(\n        'months accessor is deprecated. Use month instead',\n        getSetMonth\n    );\n    proto.years = deprecate(\n        'years accessor is deprecated. Use year instead',\n        getSetYear\n    );\n    proto.zone = deprecate(\n        'moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/',\n        getSetZone\n    );\n    proto.isDSTShifted = deprecate(\n        'isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information',\n        isDaylightSavingTimeShifted\n    );\n\n    function createUnix(input) {\n        return createLocal(input * 1000);\n    }\n\n    function createInZone() {\n        return createLocal.apply(null, arguments).parseZone();\n    }\n\n    function preParsePostFormat(string) {\n        return string;\n    }\n\n    var proto$1 = Locale.prototype;\n\n    proto$1.calendar = calendar;\n    proto$1.longDateFormat = longDateFormat;\n    proto$1.invalidDate = invalidDate;\n    proto$1.ordinal = ordinal;\n    proto$1.preparse = preParsePostFormat;\n    proto$1.postformat = preParsePostFormat;\n    proto$1.relativeTime = relativeTime;\n    proto$1.pastFuture = pastFuture;\n    proto$1.set = set;\n    proto$1.eras = localeEras;\n    proto$1.erasParse = localeErasParse;\n    proto$1.erasConvertYear = localeErasConvertYear;\n    proto$1.erasAbbrRegex = erasAbbrRegex;\n    proto$1.erasNameRegex = erasNameRegex;\n    proto$1.erasNarrowRegex = erasNarrowRegex;\n\n    proto$1.months = localeMonths;\n    proto$1.monthsShort = localeMonthsShort;\n    proto$1.monthsParse = localeMonthsParse;\n    proto$1.monthsRegex = monthsRegex;\n    proto$1.monthsShortRegex = monthsShortRegex;\n    proto$1.week = localeWeek;\n    proto$1.firstDayOfYear = localeFirstDayOfYear;\n    proto$1.firstDayOfWeek = localeFirstDayOfWeek;\n\n    proto$1.weekdays = localeWeekdays;\n    proto$1.weekdaysMin = localeWeekdaysMin;\n    proto$1.weekdaysShort = localeWeekdaysShort;\n    proto$1.weekdaysParse = localeWeekdaysParse;\n\n    proto$1.weekdaysRegex = weekdaysRegex;\n    proto$1.weekdaysShortRegex = weekdaysShortRegex;\n    proto$1.weekdaysMinRegex = weekdaysMinRegex;\n\n    proto$1.isPM = localeIsPM;\n    proto$1.meridiem = localeMeridiem;\n\n    function get$1(format, index, field, setter) {\n        var locale = getLocale(),\n            utc = createUTC().set(setter, index);\n        return locale[field](utc, format);\n    }\n\n    function listMonthsImpl(format, index, field) {\n        if (isNumber(format)) {\n            index = format;\n            format = undefined;\n        }\n\n        format = format || '';\n\n        if (index != null) {\n            return get$1(format, index, field, 'month');\n        }\n\n        var i,\n            out = [];\n        for (i = 0; i < 12; i++) {\n            out[i] = get$1(format, i, field, 'month');\n        }\n        return out;\n    }\n\n    // ()\n    // (5)\n    // (fmt, 5)\n    // (fmt)\n    // (true)\n    // (true, 5)\n    // (true, fmt, 5)\n    // (true, fmt)\n    function listWeekdaysImpl(localeSorted, format, index, field) {\n        if (typeof localeSorted === 'boolean') {\n            if (isNumber(format)) {\n                index = format;\n                format = undefined;\n            }\n\n            format = format || '';\n        } else {\n            format = localeSorted;\n            index = format;\n            localeSorted = false;\n\n            if (isNumber(format)) {\n                index = format;\n                format = undefined;\n            }\n\n            format = format || '';\n        }\n\n        var locale = getLocale(),\n            shift = localeSorted ? locale._week.dow : 0,\n            i,\n            out = [];\n\n        if (index != null) {\n            return get$1(format, (index + shift) % 7, field, 'day');\n        }\n\n        for (i = 0; i < 7; i++) {\n            out[i] = get$1(format, (i + shift) % 7, field, 'day');\n        }\n        return out;\n    }\n\n    function listMonths(format, index) {\n        return listMonthsImpl(format, index, 'months');\n    }\n\n    function listMonthsShort(format, index) {\n        return listMonthsImpl(format, index, 'monthsShort');\n    }\n\n    function listWeekdays(localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\n    }\n\n    function listWeekdaysShort(localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\n    }\n\n    function listWeekdaysMin(localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\n    }\n\n    getSetGlobalLocale('en', {\n        eras: [\n            {\n                since: '0001-01-01',\n                until: +Infinity,\n                offset: 1,\n                name: 'Anno Domini',\n                narrow: 'AD',\n                abbr: 'AD',\n            },\n            {\n                since: '0000-12-31',\n                until: -Infinity,\n                offset: 1,\n                name: 'Before Christ',\n                narrow: 'BC',\n                abbr: 'BC',\n            },\n        ],\n        dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n        ordinal: function (number) {\n            var b = number % 10,\n                output =\n                    toInt((number % 100) / 10) === 1\n                        ? 'th'\n                        : b === 1\n                        ? 'st'\n                        : b === 2\n                        ? 'nd'\n                        : b === 3\n                        ? 'rd'\n                        : 'th';\n            return number + output;\n        },\n    });\n\n    // Side effect imports\n\n    hooks.lang = deprecate(\n        'moment.lang is deprecated. Use moment.locale instead.',\n        getSetGlobalLocale\n    );\n    hooks.langData = deprecate(\n        'moment.langData is deprecated. Use moment.localeData instead.',\n        getLocale\n    );\n\n    var mathAbs = Math.abs;\n\n    function abs() {\n        var data = this._data;\n\n        this._milliseconds = mathAbs(this._milliseconds);\n        this._days = mathAbs(this._days);\n        this._months = mathAbs(this._months);\n\n        data.milliseconds = mathAbs(data.milliseconds);\n        data.seconds = mathAbs(data.seconds);\n        data.minutes = mathAbs(data.minutes);\n        data.hours = mathAbs(data.hours);\n        data.months = mathAbs(data.months);\n        data.years = mathAbs(data.years);\n\n        return this;\n    }\n\n    function addSubtract$1(duration, input, value, direction) {\n        var other = createDuration(input, value);\n\n        duration._milliseconds += direction * other._milliseconds;\n        duration._days += direction * other._days;\n        duration._months += direction * other._months;\n\n        return duration._bubble();\n    }\n\n    // supports only 2.0-style add(1, 's') or add(duration)\n    function add$1(input, value) {\n        return addSubtract$1(this, input, value, 1);\n    }\n\n    // supports only 2.0-style subtract(1, 's') or subtract(duration)\n    function subtract$1(input, value) {\n        return addSubtract$1(this, input, value, -1);\n    }\n\n    function absCeil(number) {\n        if (number < 0) {\n            return Math.floor(number);\n        } else {\n            return Math.ceil(number);\n        }\n    }\n\n    function bubble() {\n        var milliseconds = this._milliseconds,\n            days = this._days,\n            months = this._months,\n            data = this._data,\n            seconds,\n            minutes,\n            hours,\n            years,\n            monthsFromDays;\n\n        // if we have a mix of positive and negative values, bubble down first\n        // check: https://github.com/moment/moment/issues/2166\n        if (\n            !(\n                (milliseconds >= 0 && days >= 0 && months >= 0) ||\n                (milliseconds <= 0 && days <= 0 && months <= 0)\n            )\n        ) {\n            milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n            days = 0;\n            months = 0;\n        }\n\n        // The following code bubbles up values, see the tests for\n        // examples of what that means.\n        data.milliseconds = milliseconds % 1000;\n\n        seconds = absFloor(milliseconds / 1000);\n        data.seconds = seconds % 60;\n\n        minutes = absFloor(seconds / 60);\n        data.minutes = minutes % 60;\n\n        hours = absFloor(minutes / 60);\n        data.hours = hours % 24;\n\n        days += absFloor(hours / 24);\n\n        // convert days to months\n        monthsFromDays = absFloor(daysToMonths(days));\n        months += monthsFromDays;\n        days -= absCeil(monthsToDays(monthsFromDays));\n\n        // 12 months -> 1 year\n        years = absFloor(months / 12);\n        months %= 12;\n\n        data.days = days;\n        data.months = months;\n        data.years = years;\n\n        return this;\n    }\n\n    function daysToMonths(days) {\n        // 400 years have 146097 days (taking into account leap year rules)\n        // 400 years have 12 months === 4800\n        return (days * 4800) / 146097;\n    }\n\n    function monthsToDays(months) {\n        // the reverse of daysToMonths\n        return (months * 146097) / 4800;\n    }\n\n    function as(units) {\n        if (!this.isValid()) {\n            return NaN;\n        }\n        var days,\n            months,\n            milliseconds = this._milliseconds;\n\n        units = normalizeUnits(units);\n\n        if (units === 'month' || units === 'quarter' || units === 'year') {\n            days = this._days + milliseconds / 864e5;\n            months = this._months + daysToMonths(days);\n            switch (units) {\n                case 'month':\n                    return months;\n                case 'quarter':\n                    return months / 3;\n                case 'year':\n                    return months / 12;\n            }\n        } else {\n            // handle milliseconds separately because of floating point math errors (issue #1867)\n            days = this._days + Math.round(monthsToDays(this._months));\n            switch (units) {\n                case 'week':\n                    return days / 7 + milliseconds / 6048e5;\n                case 'day':\n                    return days + milliseconds / 864e5;\n                case 'hour':\n                    return days * 24 + milliseconds / 36e5;\n                case 'minute':\n                    return days * 1440 + milliseconds / 6e4;\n                case 'second':\n                    return days * 86400 + milliseconds / 1000;\n                // Math.floor prevents floating point math errors here\n                case 'millisecond':\n                    return Math.floor(days * 864e5) + milliseconds;\n                default:\n                    throw new Error('Unknown unit ' + units);\n            }\n        }\n    }\n\n    // TODO: Use this.as('ms')?\n    function valueOf$1() {\n        if (!this.isValid()) {\n            return NaN;\n        }\n        return (\n            this._milliseconds +\n            this._days * 864e5 +\n            (this._months % 12) * 2592e6 +\n            toInt(this._months / 12) * 31536e6\n        );\n    }\n\n    function makeAs(alias) {\n        return function () {\n            return this.as(alias);\n        };\n    }\n\n    var asMilliseconds = makeAs('ms'),\n        asSeconds = makeAs('s'),\n        asMinutes = makeAs('m'),\n        asHours = makeAs('h'),\n        asDays = makeAs('d'),\n        asWeeks = makeAs('w'),\n        asMonths = makeAs('M'),\n        asQuarters = makeAs('Q'),\n        asYears = makeAs('y');\n\n    function clone$1() {\n        return createDuration(this);\n    }\n\n    function get$2(units) {\n        units = normalizeUnits(units);\n        return this.isValid() ? this[units + 's']() : NaN;\n    }\n\n    function makeGetter(name) {\n        return function () {\n            return this.isValid() ? this._data[name] : NaN;\n        };\n    }\n\n    var milliseconds = makeGetter('milliseconds'),\n        seconds = makeGetter('seconds'),\n        minutes = makeGetter('minutes'),\n        hours = makeGetter('hours'),\n        days = makeGetter('days'),\n        months = makeGetter('months'),\n        years = makeGetter('years');\n\n    function weeks() {\n        return absFloor(this.days() / 7);\n    }\n\n    var round = Math.round,\n        thresholds = {\n            ss: 44, // a few seconds to seconds\n            s: 45, // seconds to minute\n            m: 45, // minutes to hour\n            h: 22, // hours to day\n            d: 26, // days to month/week\n            w: null, // weeks to month\n            M: 11, // months to year\n        };\n\n    // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n    function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n        return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n    }\n\n    function relativeTime$1(posNegDuration, withoutSuffix, thresholds, locale) {\n        var duration = createDuration(posNegDuration).abs(),\n            seconds = round(duration.as('s')),\n            minutes = round(duration.as('m')),\n            hours = round(duration.as('h')),\n            days = round(duration.as('d')),\n            months = round(duration.as('M')),\n            weeks = round(duration.as('w')),\n            years = round(duration.as('y')),\n            a =\n                (seconds <= thresholds.ss && ['s', seconds]) ||\n                (seconds < thresholds.s && ['ss', seconds]) ||\n                (minutes <= 1 && ['m']) ||\n                (minutes < thresholds.m && ['mm', minutes]) ||\n                (hours <= 1 && ['h']) ||\n                (hours < thresholds.h && ['hh', hours]) ||\n                (days <= 1 && ['d']) ||\n                (days < thresholds.d && ['dd', days]);\n\n        if (thresholds.w != null) {\n            a =\n                a ||\n                (weeks <= 1 && ['w']) ||\n                (weeks < thresholds.w && ['ww', weeks]);\n        }\n        a = a ||\n            (months <= 1 && ['M']) ||\n            (months < thresholds.M && ['MM', months]) ||\n            (years <= 1 && ['y']) || ['yy', years];\n\n        a[2] = withoutSuffix;\n        a[3] = +posNegDuration > 0;\n        a[4] = locale;\n        return substituteTimeAgo.apply(null, a);\n    }\n\n    // This function allows you to set the rounding function for relative time strings\n    function getSetRelativeTimeRounding(roundingFunction) {\n        if (roundingFunction === undefined) {\n            return round;\n        }\n        if (typeof roundingFunction === 'function') {\n            round = roundingFunction;\n            return true;\n        }\n        return false;\n    }\n\n    // This function allows you to set a threshold for relative time strings\n    function getSetRelativeTimeThreshold(threshold, limit) {\n        if (thresholds[threshold] === undefined) {\n            return false;\n        }\n        if (limit === undefined) {\n            return thresholds[threshold];\n        }\n        thresholds[threshold] = limit;\n        if (threshold === 's') {\n            thresholds.ss = limit - 1;\n        }\n        return true;\n    }\n\n    function humanize(argWithSuffix, argThresholds) {\n        if (!this.isValid()) {\n            return this.localeData().invalidDate();\n        }\n\n        var withSuffix = false,\n            th = thresholds,\n            locale,\n            output;\n\n        if (typeof argWithSuffix === 'object') {\n            argThresholds = argWithSuffix;\n            argWithSuffix = false;\n        }\n        if (typeof argWithSuffix === 'boolean') {\n            withSuffix = argWithSuffix;\n        }\n        if (typeof argThresholds === 'object') {\n            th = Object.assign({}, thresholds, argThresholds);\n            if (argThresholds.s != null && argThresholds.ss == null) {\n                th.ss = argThresholds.s - 1;\n            }\n        }\n\n        locale = this.localeData();\n        output = relativeTime$1(this, !withSuffix, th, locale);\n\n        if (withSuffix) {\n            output = locale.pastFuture(+this, output);\n        }\n\n        return locale.postformat(output);\n    }\n\n    var abs$1 = Math.abs;\n\n    function sign(x) {\n        return (x > 0) - (x < 0) || +x;\n    }\n\n    function toISOString$1() {\n        // for ISO strings we do not use the normal bubbling rules:\n        //  * milliseconds bubble up until they become hours\n        //  * days do not bubble at all\n        //  * months bubble up until they become years\n        // This is because there is no context-free conversion between hours and days\n        // (think of clock changes)\n        // and also not between days and months (28-31 days per month)\n        if (!this.isValid()) {\n            return this.localeData().invalidDate();\n        }\n\n        var seconds = abs$1(this._milliseconds) / 1000,\n            days = abs$1(this._days),\n            months = abs$1(this._months),\n            minutes,\n            hours,\n            years,\n            s,\n            total = this.asSeconds(),\n            totalSign,\n            ymSign,\n            daysSign,\n            hmsSign;\n\n        if (!total) {\n            // this is the same as C#'s (Noda) and python (isodate)...\n            // but not other JS (goog.date)\n            return 'P0D';\n        }\n\n        // 3600 seconds -> 60 minutes -> 1 hour\n        minutes = absFloor(seconds / 60);\n        hours = absFloor(minutes / 60);\n        seconds %= 60;\n        minutes %= 60;\n\n        // 12 months -> 1 year\n        years = absFloor(months / 12);\n        months %= 12;\n\n        // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n        s = seconds ? seconds.toFixed(3).replace(/\\.?0+$/, '') : '';\n\n        totalSign = total < 0 ? '-' : '';\n        ymSign = sign(this._months) !== sign(total) ? '-' : '';\n        daysSign = sign(this._days) !== sign(total) ? '-' : '';\n        hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';\n\n        return (\n            totalSign +\n            'P' +\n            (years ? ymSign + years + 'Y' : '') +\n            (months ? ymSign + months + 'M' : '') +\n            (days ? daysSign + days + 'D' : '') +\n            (hours || minutes || seconds ? 'T' : '') +\n            (hours ? hmsSign + hours + 'H' : '') +\n            (minutes ? hmsSign + minutes + 'M' : '') +\n            (seconds ? hmsSign + s + 'S' : '')\n        );\n    }\n\n    var proto$2 = Duration.prototype;\n\n    proto$2.isValid = isValid$1;\n    proto$2.abs = abs;\n    proto$2.add = add$1;\n    proto$2.subtract = subtract$1;\n    proto$2.as = as;\n    proto$2.asMilliseconds = asMilliseconds;\n    proto$2.asSeconds = asSeconds;\n    proto$2.asMinutes = asMinutes;\n    proto$2.asHours = asHours;\n    proto$2.asDays = asDays;\n    proto$2.asWeeks = asWeeks;\n    proto$2.asMonths = asMonths;\n    proto$2.asQuarters = asQuarters;\n    proto$2.asYears = asYears;\n    proto$2.valueOf = valueOf$1;\n    proto$2._bubble = bubble;\n    proto$2.clone = clone$1;\n    proto$2.get = get$2;\n    proto$2.milliseconds = milliseconds;\n    proto$2.seconds = seconds;\n    proto$2.minutes = minutes;\n    proto$2.hours = hours;\n    proto$2.days = days;\n    proto$2.weeks = weeks;\n    proto$2.months = months;\n    proto$2.years = years;\n    proto$2.humanize = humanize;\n    proto$2.toISOString = toISOString$1;\n    proto$2.toString = toISOString$1;\n    proto$2.toJSON = toISOString$1;\n    proto$2.locale = locale;\n    proto$2.localeData = localeData;\n\n    proto$2.toIsoString = deprecate(\n        'toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)',\n        toISOString$1\n    );\n    proto$2.lang = lang;\n\n    // FORMATTING\n\n    addFormatToken('X', 0, 0, 'unix');\n    addFormatToken('x', 0, 0, 'valueOf');\n\n    // PARSING\n\n    addRegexToken('x', matchSigned);\n    addRegexToken('X', matchTimestamp);\n    addParseToken('X', function (input, array, config) {\n        config._d = new Date(parseFloat(input) * 1000);\n    });\n    addParseToken('x', function (input, array, config) {\n        config._d = new Date(toInt(input));\n    });\n\n    //! moment.js\n\n    hooks.version = '2.27.0';\n\n    setHookCallback(createLocal);\n\n    hooks.fn = proto;\n    hooks.min = min;\n    hooks.max = max;\n    hooks.now = now;\n    hooks.utc = createUTC;\n    hooks.unix = createUnix;\n    hooks.months = listMonths;\n    hooks.isDate = isDate;\n    hooks.locale = getSetGlobalLocale;\n    hooks.invalid = createInvalid;\n    hooks.duration = createDuration;\n    hooks.isMoment = isMoment;\n    hooks.weekdays = listWeekdays;\n    hooks.parseZone = createInZone;\n    hooks.localeData = getLocale;\n    hooks.isDuration = isDuration;\n    hooks.monthsShort = listMonthsShort;\n    hooks.weekdaysMin = listWeekdaysMin;\n    hooks.defineLocale = defineLocale;\n    hooks.updateLocale = updateLocale;\n    hooks.locales = listLocales;\n    hooks.weekdaysShort = listWeekdaysShort;\n    hooks.normalizeUnits = normalizeUnits;\n    hooks.relativeTimeRounding = getSetRelativeTimeRounding;\n    hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;\n    hooks.calendarFormat = getCalendarFormat;\n    hooks.prototype = proto;\n\n    // currently HTML5 input type only supports 24-hour formats\n    hooks.HTML5_FMT = {\n        DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm', // <input type=\"datetime-local\" />\n        DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss', // <input type=\"datetime-local\" step=\"1\" />\n        DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS', // <input type=\"datetime-local\" step=\"0.001\" />\n        DATE: 'YYYY-MM-DD', // <input type=\"date\" />\n        TIME: 'HH:mm', // <input type=\"time\" />\n        TIME_SECONDS: 'HH:mm:ss', // <input type=\"time\" step=\"1\" />\n        TIME_MS: 'HH:mm:ss.SSS', // <input type=\"time\" step=\"0.001\" />\n        WEEK: 'GGGG-[W]WW', // <input type=\"week\" />\n        MONTH: 'YYYY-MM', // <input type=\"month\" />\n    };\n\n    return hooks;\n\n})));\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(28)(module)))\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// docs/js/vendor.e3858ebe321f0f5cebfb.js","/* globals __VUE_SSR_CONTEXT__ */\n\n// this module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle\n\nmodule.exports = function normalizeComponent (\n  rawScriptExports,\n  compiledTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier /* server only */\n) {\n  var esModule\n  var scriptExports = rawScriptExports = rawScriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof rawScriptExports.default\n  if (type === 'object' || type === 'function') {\n    esModule = rawScriptExports\n    scriptExports = rawScriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (compiledTemplate) {\n    options.render = compiledTemplate.render\n    options.staticRenderFns = compiledTemplate.staticRenderFns\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = injectStyles\n  }\n\n  if (hook) {\n    var functional = options.functional\n    var existing = functional\n      ? options.render\n      : options.beforeCreate\n    if (!functional) {\n      // inject component registration as beforeCreate hook\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    } else {\n      // register for functioal component in vue file\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return existing(h, context)\n      }\n    }\n  }\n\n  return {\n    esModule: esModule,\n    exports: scriptExports,\n    options: options\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/component-normalizer.js\n// module id = 0\n// module chunks = 1","/**\n * Translates the list format produced by css-loader into something\n * easier to manipulate.\n */\nmodule.exports = function listToStyles (parentId, list) {\n  var styles = []\n  var newStyles = {}\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i]\n    var id = item[0]\n    var css = item[1]\n    var media = item[2]\n    var sourceMap = item[3]\n    var part = {\n      id: parentId + ':' + i,\n      css: css,\n      media: media,\n      sourceMap: sourceMap\n    }\n    if (!newStyles[id]) {\n      styles.push(newStyles[id] = { id: id, parts: [part] })\n    } else {\n      newStyles[id].parts.push(part)\n    }\n  }\n  return styles\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-style-loader/lib/listToStyles.js\n// module id = 27\n// module chunks = 1","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tif(!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.l;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.i;\r\n\t\t\t}\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/module.js\n// module id = 28\n// module chunks = 1","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader/lib/css-base.js\n// module id = 29\n// module chunks = 1","/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n  Modified by Evan You @yyx990803\n*/\n\nvar hasDocument = typeof document !== 'undefined'\n\nif (typeof DEBUG !== 'undefined' && DEBUG) {\n  if (!hasDocument) {\n    throw new Error(\n    'vue-style-loader cannot be used in a non-browser environment. ' +\n    \"Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.\"\n  ) }\n}\n\nvar listToStyles = require('./listToStyles')\n\n/*\ntype StyleObject = {\n  id: number;\n  parts: Array<StyleObjectPart>\n}\n\ntype StyleObjectPart = {\n  css: string;\n  media: string;\n  sourceMap: ?string\n}\n*/\n\nvar stylesInDom = {/*\n  [id: number]: {\n    id: number,\n    refs: number,\n    parts: Array<(obj?: StyleObjectPart) => void>\n  }\n*/}\n\nvar head = hasDocument && (document.head || document.getElementsByTagName('head')[0])\nvar singletonElement = null\nvar singletonCounter = 0\nvar isProduction = false\nvar noop = function () {}\nvar options = null\nvar ssrIdKey = 'data-vue-ssr-id'\n\n// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n// tags it will allow on a page\nvar isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\\b/.test(navigator.userAgent.toLowerCase())\n\nmodule.exports = function (parentId, list, _isProduction, _options) {\n  isProduction = _isProduction\n\n  options = _options || {}\n\n  var styles = listToStyles(parentId, list)\n  addStylesToDom(styles)\n\n  return function update (newList) {\n    var mayRemove = []\n    for (var i = 0; i < styles.length; i++) {\n      var item = styles[i]\n      var domStyle = stylesInDom[item.id]\n      domStyle.refs--\n      mayRemove.push(domStyle)\n    }\n    if (newList) {\n      styles = listToStyles(parentId, newList)\n      addStylesToDom(styles)\n    } else {\n      styles = []\n    }\n    for (var i = 0; i < mayRemove.length; i++) {\n      var domStyle = mayRemove[i]\n      if (domStyle.refs === 0) {\n        for (var j = 0; j < domStyle.parts.length; j++) {\n          domStyle.parts[j]()\n        }\n        delete stylesInDom[domStyle.id]\n      }\n    }\n  }\n}\n\nfunction addStylesToDom (styles /* Array<StyleObject> */) {\n  for (var i = 0; i < styles.length; i++) {\n    var item = styles[i]\n    var domStyle = stylesInDom[item.id]\n    if (domStyle) {\n      domStyle.refs++\n      for (var j = 0; j < domStyle.parts.length; j++) {\n        domStyle.parts[j](item.parts[j])\n      }\n      for (; j < item.parts.length; j++) {\n        domStyle.parts.push(addStyle(item.parts[j]))\n      }\n      if (domStyle.parts.length > item.parts.length) {\n        domStyle.parts.length = item.parts.length\n      }\n    } else {\n      var parts = []\n      for (var j = 0; j < item.parts.length; j++) {\n        parts.push(addStyle(item.parts[j]))\n      }\n      stylesInDom[item.id] = { id: item.id, refs: 1, parts: parts }\n    }\n  }\n}\n\nfunction createStyleElement () {\n  var styleElement = document.createElement('style')\n  styleElement.type = 'text/css'\n  head.appendChild(styleElement)\n  return styleElement\n}\n\nfunction addStyle (obj /* StyleObjectPart */) {\n  var update, remove\n  var styleElement = document.querySelector('style[' + ssrIdKey + '~=\"' + obj.id + '\"]')\n\n  if (styleElement) {\n    if (isProduction) {\n      // has SSR styles and in production mode.\n      // simply do nothing.\n      return noop\n    } else {\n      // has SSR styles but in dev mode.\n      // for some reason Chrome can't handle source map in server-rendered\n      // style tags - source maps in <style> only works if the style tag is\n      // created and inserted dynamically. So we remove the server rendered\n      // styles and inject new ones.\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  if (isOldIE) {\n    // use singleton mode for IE9.\n    var styleIndex = singletonCounter++\n    styleElement = singletonElement || (singletonElement = createStyleElement())\n    update = applyToSingletonTag.bind(null, styleElement, styleIndex, false)\n    remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true)\n  } else {\n    // use multi-style-tag mode in all other cases\n    styleElement = createStyleElement()\n    update = applyToTag.bind(null, styleElement)\n    remove = function () {\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  update(obj)\n\n  return function updateStyle (newObj /* StyleObjectPart */) {\n    if (newObj) {\n      if (newObj.css === obj.css &&\n          newObj.media === obj.media &&\n          newObj.sourceMap === obj.sourceMap) {\n        return\n      }\n      update(obj = newObj)\n    } else {\n      remove()\n    }\n  }\n}\n\nvar replaceText = (function () {\n  var textStore = []\n\n  return function (index, replacement) {\n    textStore[index] = replacement\n    return textStore.filter(Boolean).join('\\n')\n  }\n})()\n\nfunction applyToSingletonTag (styleElement, index, remove, obj) {\n  var css = remove ? '' : obj.css\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = replaceText(index, css)\n  } else {\n    var cssNode = document.createTextNode(css)\n    var childNodes = styleElement.childNodes\n    if (childNodes[index]) styleElement.removeChild(childNodes[index])\n    if (childNodes.length) {\n      styleElement.insertBefore(cssNode, childNodes[index])\n    } else {\n      styleElement.appendChild(cssNode)\n    }\n  }\n}\n\nfunction applyToTag (styleElement, obj) {\n  var css = obj.css\n  var media = obj.media\n  var sourceMap = obj.sourceMap\n\n  if (media) {\n    styleElement.setAttribute('media', media)\n  }\n  if (options.ssrId) {\n    styleElement.setAttribute(ssrIdKey, obj.id)\n  }\n\n  if (sourceMap) {\n    // https://developer.chrome.com/devtools/docs/javascript-debugging\n    // this makes source maps inside style tags work properly in Chrome\n    css += '\\n/*# sourceURL=' + sourceMap.sources[0] + ' */'\n    // http://stackoverflow.com/a/26603875\n    css += '\\n/*# sourceMappingURL=data:application/json;base64,' + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + ' */'\n  }\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild)\n    }\n    styleElement.appendChild(document.createTextNode(css))\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-style-loader/lib/addStylesClient.js\n// module id = 30\n// module chunks = 1","//! moment.js\n//! version : 2.27.0\n//! authors : Tim Wood, Iskren Chernev, Moment.js contributors\n//! license : MIT\n//! momentjs.com\n\n;(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    global.moment = factory()\n}(this, (function () { 'use strict';\n\n    var hookCallback;\n\n    function hooks() {\n        return hookCallback.apply(null, arguments);\n    }\n\n    // This is done to register the method called with moment()\n    // without creating circular dependencies.\n    function setHookCallback(callback) {\n        hookCallback = callback;\n    }\n\n    function isArray(input) {\n        return (\n            input instanceof Array ||\n            Object.prototype.toString.call(input) === '[object Array]'\n        );\n    }\n\n    function isObject(input) {\n        // IE8 will treat undefined and null as object if it wasn't for\n        // input != null\n        return (\n            input != null &&\n            Object.prototype.toString.call(input) === '[object Object]'\n        );\n    }\n\n    function hasOwnProp(a, b) {\n        return Object.prototype.hasOwnProperty.call(a, b);\n    }\n\n    function isObjectEmpty(obj) {\n        if (Object.getOwnPropertyNames) {\n            return Object.getOwnPropertyNames(obj).length === 0;\n        } else {\n            var k;\n            for (k in obj) {\n                if (hasOwnProp(obj, k)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n    }\n\n    function isUndefined(input) {\n        return input === void 0;\n    }\n\n    function isNumber(input) {\n        return (\n            typeof input === 'number' ||\n            Object.prototype.toString.call(input) === '[object Number]'\n        );\n    }\n\n    function isDate(input) {\n        return (\n            input instanceof Date ||\n            Object.prototype.toString.call(input) === '[object Date]'\n        );\n    }\n\n    function map(arr, fn) {\n        var res = [],\n            i;\n        for (i = 0; i < arr.length; ++i) {\n            res.push(fn(arr[i], i));\n        }\n        return res;\n    }\n\n    function extend(a, b) {\n        for (var i in b) {\n            if (hasOwnProp(b, i)) {\n                a[i] = b[i];\n            }\n        }\n\n        if (hasOwnProp(b, 'toString')) {\n            a.toString = b.toString;\n        }\n\n        if (hasOwnProp(b, 'valueOf')) {\n            a.valueOf = b.valueOf;\n        }\n\n        return a;\n    }\n\n    function createUTC(input, format, locale, strict) {\n        return createLocalOrUTC(input, format, locale, strict, true).utc();\n    }\n\n    function defaultParsingFlags() {\n        // We need to deep clone this object.\n        return {\n            empty: false,\n            unusedTokens: [],\n            unusedInput: [],\n            overflow: -2,\n            charsLeftOver: 0,\n            nullInput: false,\n            invalidEra: null,\n            invalidMonth: null,\n            invalidFormat: false,\n            userInvalidated: false,\n            iso: false,\n            parsedDateParts: [],\n            era: null,\n            meridiem: null,\n            rfc2822: false,\n            weekdayMismatch: false,\n        };\n    }\n\n    function getParsingFlags(m) {\n        if (m._pf == null) {\n            m._pf = defaultParsingFlags();\n        }\n        return m._pf;\n    }\n\n    var some;\n    if (Array.prototype.some) {\n        some = Array.prototype.some;\n    } else {\n        some = function (fun) {\n            var t = Object(this),\n                len = t.length >>> 0,\n                i;\n\n            for (i = 0; i < len; i++) {\n                if (i in t && fun.call(this, t[i], i, t)) {\n                    return true;\n                }\n            }\n\n            return false;\n        };\n    }\n\n    function isValid(m) {\n        if (m._isValid == null) {\n            var flags = getParsingFlags(m),\n                parsedParts = some.call(flags.parsedDateParts, function (i) {\n                    return i != null;\n                }),\n                isNowValid =\n                    !isNaN(m._d.getTime()) &&\n                    flags.overflow < 0 &&\n                    !flags.empty &&\n                    !flags.invalidEra &&\n                    !flags.invalidMonth &&\n                    !flags.invalidWeekday &&\n                    !flags.weekdayMismatch &&\n                    !flags.nullInput &&\n                    !flags.invalidFormat &&\n                    !flags.userInvalidated &&\n                    (!flags.meridiem || (flags.meridiem && parsedParts));\n\n            if (m._strict) {\n                isNowValid =\n                    isNowValid &&\n                    flags.charsLeftOver === 0 &&\n                    flags.unusedTokens.length === 0 &&\n                    flags.bigHour === undefined;\n            }\n\n            if (Object.isFrozen == null || !Object.isFrozen(m)) {\n                m._isValid = isNowValid;\n            } else {\n                return isNowValid;\n            }\n        }\n        return m._isValid;\n    }\n\n    function createInvalid(flags) {\n        var m = createUTC(NaN);\n        if (flags != null) {\n            extend(getParsingFlags(m), flags);\n        } else {\n            getParsingFlags(m).userInvalidated = true;\n        }\n\n        return m;\n    }\n\n    // Plugins that add properties should also add the key here (null value),\n    // so we can properly clone ourselves.\n    var momentProperties = (hooks.momentProperties = []),\n        updateInProgress = false;\n\n    function copyConfig(to, from) {\n        var i, prop, val;\n\n        if (!isUndefined(from._isAMomentObject)) {\n            to._isAMomentObject = from._isAMomentObject;\n        }\n        if (!isUndefined(from._i)) {\n            to._i = from._i;\n        }\n        if (!isUndefined(from._f)) {\n            to._f = from._f;\n        }\n        if (!isUndefined(from._l)) {\n            to._l = from._l;\n        }\n        if (!isUndefined(from._strict)) {\n            to._strict = from._strict;\n        }\n        if (!isUndefined(from._tzm)) {\n            to._tzm = from._tzm;\n        }\n        if (!isUndefined(from._isUTC)) {\n            to._isUTC = from._isUTC;\n        }\n        if (!isUndefined(from._offset)) {\n            to._offset = from._offset;\n        }\n        if (!isUndefined(from._pf)) {\n            to._pf = getParsingFlags(from);\n        }\n        if (!isUndefined(from._locale)) {\n            to._locale = from._locale;\n        }\n\n        if (momentProperties.length > 0) {\n            for (i = 0; i < momentProperties.length; i++) {\n                prop = momentProperties[i];\n                val = from[prop];\n                if (!isUndefined(val)) {\n                    to[prop] = val;\n                }\n            }\n        }\n\n        return to;\n    }\n\n    // Moment prototype object\n    function Moment(config) {\n        copyConfig(this, config);\n        this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n        if (!this.isValid()) {\n            this._d = new Date(NaN);\n        }\n        // Prevent infinite loop in case updateOffset creates new moment\n        // objects.\n        if (updateInProgress === false) {\n            updateInProgress = true;\n            hooks.updateOffset(this);\n            updateInProgress = false;\n        }\n    }\n\n    function isMoment(obj) {\n        return (\n            obj instanceof Moment || (obj != null && obj._isAMomentObject != null)\n        );\n    }\n\n    function warn(msg) {\n        if (\n            hooks.suppressDeprecationWarnings === false &&\n            typeof console !== 'undefined' &&\n            console.warn\n        ) {\n            console.warn('Deprecation warning: ' + msg);\n        }\n    }\n\n    function deprecate(msg, fn) {\n        var firstTime = true;\n\n        return extend(function () {\n            if (hooks.deprecationHandler != null) {\n                hooks.deprecationHandler(null, msg);\n            }\n            if (firstTime) {\n                var args = [],\n                    arg,\n                    i,\n                    key;\n                for (i = 0; i < arguments.length; i++) {\n                    arg = '';\n                    if (typeof arguments[i] === 'object') {\n                        arg += '\\n[' + i + '] ';\n                        for (key in arguments[0]) {\n                            if (hasOwnProp(arguments[0], key)) {\n                                arg += key + ': ' + arguments[0][key] + ', ';\n                            }\n                        }\n                        arg = arg.slice(0, -2); // Remove trailing comma and space\n                    } else {\n                        arg = arguments[i];\n                    }\n                    args.push(arg);\n                }\n                warn(\n                    msg +\n                        '\\nArguments: ' +\n                        Array.prototype.slice.call(args).join('') +\n                        '\\n' +\n                        new Error().stack\n                );\n                firstTime = false;\n            }\n            return fn.apply(this, arguments);\n        }, fn);\n    }\n\n    var deprecations = {};\n\n    function deprecateSimple(name, msg) {\n        if (hooks.deprecationHandler != null) {\n            hooks.deprecationHandler(name, msg);\n        }\n        if (!deprecations[name]) {\n            warn(msg);\n            deprecations[name] = true;\n        }\n    }\n\n    hooks.suppressDeprecationWarnings = false;\n    hooks.deprecationHandler = null;\n\n    function isFunction(input) {\n        return (\n            (typeof Function !== 'undefined' && input instanceof Function) ||\n            Object.prototype.toString.call(input) === '[object Function]'\n        );\n    }\n\n    function set(config) {\n        var prop, i;\n        for (i in config) {\n            if (hasOwnProp(config, i)) {\n                prop = config[i];\n                if (isFunction(prop)) {\n                    this[i] = prop;\n                } else {\n                    this['_' + i] = prop;\n                }\n            }\n        }\n        this._config = config;\n        // Lenient ordinal parsing accepts just a number in addition to\n        // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.\n        // TODO: Remove \"ordinalParse\" fallback in next major release.\n        this._dayOfMonthOrdinalParseLenient = new RegExp(\n            (this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) +\n                '|' +\n                /\\d{1,2}/.source\n        );\n    }\n\n    function mergeConfigs(parentConfig, childConfig) {\n        var res = extend({}, parentConfig),\n            prop;\n        for (prop in childConfig) {\n            if (hasOwnProp(childConfig, prop)) {\n                if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n                    res[prop] = {};\n                    extend(res[prop], parentConfig[prop]);\n                    extend(res[prop], childConfig[prop]);\n                } else if (childConfig[prop] != null) {\n                    res[prop] = childConfig[prop];\n                } else {\n                    delete res[prop];\n                }\n            }\n        }\n        for (prop in parentConfig) {\n            if (\n                hasOwnProp(parentConfig, prop) &&\n                !hasOwnProp(childConfig, prop) &&\n                isObject(parentConfig[prop])\n            ) {\n                // make sure changes to properties don't modify parent config\n                res[prop] = extend({}, res[prop]);\n            }\n        }\n        return res;\n    }\n\n    function Locale(config) {\n        if (config != null) {\n            this.set(config);\n        }\n    }\n\n    var keys;\n\n    if (Object.keys) {\n        keys = Object.keys;\n    } else {\n        keys = function (obj) {\n            var i,\n                res = [];\n            for (i in obj) {\n                if (hasOwnProp(obj, i)) {\n                    res.push(i);\n                }\n            }\n            return res;\n        };\n    }\n\n    var defaultCalendar = {\n        sameDay: '[Today at] LT',\n        nextDay: '[Tomorrow at] LT',\n        nextWeek: 'dddd [at] LT',\n        lastDay: '[Yesterday at] LT',\n        lastWeek: '[Last] dddd [at] LT',\n        sameElse: 'L',\n    };\n\n    function calendar(key, mom, now) {\n        var output = this._calendar[key] || this._calendar['sameElse'];\n        return isFunction(output) ? output.call(mom, now) : output;\n    }\n\n    function zeroFill(number, targetLength, forceSign) {\n        var absNumber = '' + Math.abs(number),\n            zerosToFill = targetLength - absNumber.length,\n            sign = number >= 0;\n        return (\n            (sign ? (forceSign ? '+' : '') : '-') +\n            Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) +\n            absNumber\n        );\n    }\n\n    var formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|N{1,5}|YYYYYY|YYYYY|YYYY|YY|y{2,4}|yo?|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g,\n        localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g,\n        formatFunctions = {},\n        formatTokenFunctions = {};\n\n    // token:    'M'\n    // padded:   ['MM', 2]\n    // ordinal:  'Mo'\n    // callback: function () { this.month() + 1 }\n    function addFormatToken(token, padded, ordinal, callback) {\n        var func = callback;\n        if (typeof callback === 'string') {\n            func = function () {\n                return this[callback]();\n            };\n        }\n        if (token) {\n            formatTokenFunctions[token] = func;\n        }\n        if (padded) {\n            formatTokenFunctions[padded[0]] = function () {\n                return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n            };\n        }\n        if (ordinal) {\n            formatTokenFunctions[ordinal] = function () {\n                return this.localeData().ordinal(\n                    func.apply(this, arguments),\n                    token\n                );\n            };\n        }\n    }\n\n    function removeFormattingTokens(input) {\n        if (input.match(/\\[[\\s\\S]/)) {\n            return input.replace(/^\\[|\\]$/g, '');\n        }\n        return input.replace(/\\\\/g, '');\n    }\n\n    function makeFormatFunction(format) {\n        var array = format.match(formattingTokens),\n            i,\n            length;\n\n        for (i = 0, length = array.length; i < length; i++) {\n            if (formatTokenFunctions[array[i]]) {\n                array[i] = formatTokenFunctions[array[i]];\n            } else {\n                array[i] = removeFormattingTokens(array[i]);\n            }\n        }\n\n        return function (mom) {\n            var output = '',\n                i;\n            for (i = 0; i < length; i++) {\n                output += isFunction(array[i])\n                    ? array[i].call(mom, format)\n                    : array[i];\n            }\n            return output;\n        };\n    }\n\n    // format date using native date object\n    function formatMoment(m, format) {\n        if (!m.isValid()) {\n            return m.localeData().invalidDate();\n        }\n\n        format = expandFormat(format, m.localeData());\n        formatFunctions[format] =\n            formatFunctions[format] || makeFormatFunction(format);\n\n        return formatFunctions[format](m);\n    }\n\n    function expandFormat(format, locale) {\n        var i = 5;\n\n        function replaceLongDateFormatTokens(input) {\n            return locale.longDateFormat(input) || input;\n        }\n\n        localFormattingTokens.lastIndex = 0;\n        while (i >= 0 && localFormattingTokens.test(format)) {\n            format = format.replace(\n                localFormattingTokens,\n                replaceLongDateFormatTokens\n            );\n            localFormattingTokens.lastIndex = 0;\n            i -= 1;\n        }\n\n        return format;\n    }\n\n    var defaultLongDateFormat = {\n        LTS: 'h:mm:ss A',\n        LT: 'h:mm A',\n        L: 'MM/DD/YYYY',\n        LL: 'MMMM D, YYYY',\n        LLL: 'MMMM D, YYYY h:mm A',\n        LLLL: 'dddd, MMMM D, YYYY h:mm A',\n    };\n\n    function longDateFormat(key) {\n        var format = this._longDateFormat[key],\n            formatUpper = this._longDateFormat[key.toUpperCase()];\n\n        if (format || !formatUpper) {\n            return format;\n        }\n\n        this._longDateFormat[key] = formatUpper\n            .match(formattingTokens)\n            .map(function (tok) {\n                if (\n                    tok === 'MMMM' ||\n                    tok === 'MM' ||\n                    tok === 'DD' ||\n                    tok === 'dddd'\n                ) {\n                    return tok.slice(1);\n                }\n                return tok;\n            })\n            .join('');\n\n        return this._longDateFormat[key];\n    }\n\n    var defaultInvalidDate = 'Invalid date';\n\n    function invalidDate() {\n        return this._invalidDate;\n    }\n\n    var defaultOrdinal = '%d',\n        defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n\n    function ordinal(number) {\n        return this._ordinal.replace('%d', number);\n    }\n\n    var defaultRelativeTime = {\n        future: 'in %s',\n        past: '%s ago',\n        s: 'a few seconds',\n        ss: '%d seconds',\n        m: 'a minute',\n        mm: '%d minutes',\n        h: 'an hour',\n        hh: '%d hours',\n        d: 'a day',\n        dd: '%d days',\n        w: 'a week',\n        ww: '%d weeks',\n        M: 'a month',\n        MM: '%d months',\n        y: 'a year',\n        yy: '%d years',\n    };\n\n    function relativeTime(number, withoutSuffix, string, isFuture) {\n        var output = this._relativeTime[string];\n        return isFunction(output)\n            ? output(number, withoutSuffix, string, isFuture)\n            : output.replace(/%d/i, number);\n    }\n\n    function pastFuture(diff, output) {\n        var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n        return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n    }\n\n    var aliases = {};\n\n    function addUnitAlias(unit, shorthand) {\n        var lowerCase = unit.toLowerCase();\n        aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n    }\n\n    function normalizeUnits(units) {\n        return typeof units === 'string'\n            ? aliases[units] || aliases[units.toLowerCase()]\n            : undefined;\n    }\n\n    function normalizeObjectUnits(inputObject) {\n        var normalizedInput = {},\n            normalizedProp,\n            prop;\n\n        for (prop in inputObject) {\n            if (hasOwnProp(inputObject, prop)) {\n                normalizedProp = normalizeUnits(prop);\n                if (normalizedProp) {\n                    normalizedInput[normalizedProp] = inputObject[prop];\n                }\n            }\n        }\n\n        return normalizedInput;\n    }\n\n    var priorities = {};\n\n    function addUnitPriority(unit, priority) {\n        priorities[unit] = priority;\n    }\n\n    function getPrioritizedUnits(unitsObj) {\n        var units = [],\n            u;\n        for (u in unitsObj) {\n            if (hasOwnProp(unitsObj, u)) {\n                units.push({ unit: u, priority: priorities[u] });\n            }\n        }\n        units.sort(function (a, b) {\n            return a.priority - b.priority;\n        });\n        return units;\n    }\n\n    function isLeapYear(year) {\n        return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n    }\n\n    function absFloor(number) {\n        if (number < 0) {\n            // -0 -> 0\n            return Math.ceil(number) || 0;\n        } else {\n            return Math.floor(number);\n        }\n    }\n\n    function toInt(argumentForCoercion) {\n        var coercedNumber = +argumentForCoercion,\n            value = 0;\n\n        if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n            value = absFloor(coercedNumber);\n        }\n\n        return value;\n    }\n\n    function makeGetSet(unit, keepTime) {\n        return function (value) {\n            if (value != null) {\n                set$1(this, unit, value);\n                hooks.updateOffset(this, keepTime);\n                return this;\n            } else {\n                return get(this, unit);\n            }\n        };\n    }\n\n    function get(mom, unit) {\n        return mom.isValid()\n            ? mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]()\n            : NaN;\n    }\n\n    function set$1(mom, unit, value) {\n        if (mom.isValid() && !isNaN(value)) {\n            if (\n                unit === 'FullYear' &&\n                isLeapYear(mom.year()) &&\n                mom.month() === 1 &&\n                mom.date() === 29\n            ) {\n                value = toInt(value);\n                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](\n                    value,\n                    mom.month(),\n                    daysInMonth(value, mom.month())\n                );\n            } else {\n                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function stringGet(units) {\n        units = normalizeUnits(units);\n        if (isFunction(this[units])) {\n            return this[units]();\n        }\n        return this;\n    }\n\n    function stringSet(units, value) {\n        if (typeof units === 'object') {\n            units = normalizeObjectUnits(units);\n            var prioritized = getPrioritizedUnits(units),\n                i;\n            for (i = 0; i < prioritized.length; i++) {\n                this[prioritized[i].unit](units[prioritized[i].unit]);\n            }\n        } else {\n            units = normalizeUnits(units);\n            if (isFunction(this[units])) {\n                return this[units](value);\n            }\n        }\n        return this;\n    }\n\n    var match1 = /\\d/, //       0 - 9\n        match2 = /\\d\\d/, //      00 - 99\n        match3 = /\\d{3}/, //     000 - 999\n        match4 = /\\d{4}/, //    0000 - 9999\n        match6 = /[+-]?\\d{6}/, // -999999 - 999999\n        match1to2 = /\\d\\d?/, //       0 - 99\n        match3to4 = /\\d\\d\\d\\d?/, //     999 - 9999\n        match5to6 = /\\d\\d\\d\\d\\d\\d?/, //   99999 - 999999\n        match1to3 = /\\d{1,3}/, //       0 - 999\n        match1to4 = /\\d{1,4}/, //       0 - 9999\n        match1to6 = /[+-]?\\d{1,6}/, // -999999 - 999999\n        matchUnsigned = /\\d+/, //       0 - inf\n        matchSigned = /[+-]?\\d+/, //    -inf - inf\n        matchOffset = /Z|[+-]\\d\\d:?\\d\\d/gi, // +00:00 -00:00 +0000 -0000 or Z\n        matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi, // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n        matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/, // 123456789 123456789.123\n        // any word (or two) characters or numbers including two/three word month in arabic.\n        // includes scottish gaelic two word and hyphenated months\n        matchWord = /[0-9]{0,256}['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFF07\\uFF10-\\uFFEF]{1,256}|[\\u0600-\\u06FF\\/]{1,256}(\\s*?[\\u0600-\\u06FF]{1,256}){1,2}/i,\n        regexes;\n\n    regexes = {};\n\n    function addRegexToken(token, regex, strictRegex) {\n        regexes[token] = isFunction(regex)\n            ? regex\n            : function (isStrict, localeData) {\n                  return isStrict && strictRegex ? strictRegex : regex;\n              };\n    }\n\n    function getParseRegexForToken(token, config) {\n        if (!hasOwnProp(regexes, token)) {\n            return new RegExp(unescapeFormat(token));\n        }\n\n        return regexes[token](config._strict, config._locale);\n    }\n\n    // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n    function unescapeFormat(s) {\n        return regexEscape(\n            s\n                .replace('\\\\', '')\n                .replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (\n                    matched,\n                    p1,\n                    p2,\n                    p3,\n                    p4\n                ) {\n                    return p1 || p2 || p3 || p4;\n                })\n        );\n    }\n\n    function regexEscape(s) {\n        return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    }\n\n    var tokens = {};\n\n    function addParseToken(token, callback) {\n        var i,\n            func = callback;\n        if (typeof token === 'string') {\n            token = [token];\n        }\n        if (isNumber(callback)) {\n            func = function (input, array) {\n                array[callback] = toInt(input);\n            };\n        }\n        for (i = 0; i < token.length; i++) {\n            tokens[token[i]] = func;\n        }\n    }\n\n    function addWeekParseToken(token, callback) {\n        addParseToken(token, function (input, array, config, token) {\n            config._w = config._w || {};\n            callback(input, config._w, config, token);\n        });\n    }\n\n    function addTimeToArrayFromToken(token, input, config) {\n        if (input != null && hasOwnProp(tokens, token)) {\n            tokens[token](input, config._a, config, token);\n        }\n    }\n\n    var YEAR = 0,\n        MONTH = 1,\n        DATE = 2,\n        HOUR = 3,\n        MINUTE = 4,\n        SECOND = 5,\n        MILLISECOND = 6,\n        WEEK = 7,\n        WEEKDAY = 8;\n\n    function mod(n, x) {\n        return ((n % x) + x) % x;\n    }\n\n    var indexOf;\n\n    if (Array.prototype.indexOf) {\n        indexOf = Array.prototype.indexOf;\n    } else {\n        indexOf = function (o) {\n            // I know\n            var i;\n            for (i = 0; i < this.length; ++i) {\n                if (this[i] === o) {\n                    return i;\n                }\n            }\n            return -1;\n        };\n    }\n\n    function daysInMonth(year, month) {\n        if (isNaN(year) || isNaN(month)) {\n            return NaN;\n        }\n        var modMonth = mod(month, 12);\n        year += (month - modMonth) / 12;\n        return modMonth === 1\n            ? isLeapYear(year)\n                ? 29\n                : 28\n            : 31 - ((modMonth % 7) % 2);\n    }\n\n    // FORMATTING\n\n    addFormatToken('M', ['MM', 2], 'Mo', function () {\n        return this.month() + 1;\n    });\n\n    addFormatToken('MMM', 0, 0, function (format) {\n        return this.localeData().monthsShort(this, format);\n    });\n\n    addFormatToken('MMMM', 0, 0, function (format) {\n        return this.localeData().months(this, format);\n    });\n\n    // ALIASES\n\n    addUnitAlias('month', 'M');\n\n    // PRIORITY\n\n    addUnitPriority('month', 8);\n\n    // PARSING\n\n    addRegexToken('M', match1to2);\n    addRegexToken('MM', match1to2, match2);\n    addRegexToken('MMM', function (isStrict, locale) {\n        return locale.monthsShortRegex(isStrict);\n    });\n    addRegexToken('MMMM', function (isStrict, locale) {\n        return locale.monthsRegex(isStrict);\n    });\n\n    addParseToken(['M', 'MM'], function (input, array) {\n        array[MONTH] = toInt(input) - 1;\n    });\n\n    addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n        var month = config._locale.monthsParse(input, token, config._strict);\n        // if we didn't find a month name, mark the date as invalid.\n        if (month != null) {\n            array[MONTH] = month;\n        } else {\n            getParsingFlags(config).invalidMonth = input;\n        }\n    });\n\n    // LOCALES\n\n    var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split(\n            '_'\n        ),\n        defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split(\n            '_'\n        ),\n        MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/,\n        defaultMonthsShortRegex = matchWord,\n        defaultMonthsRegex = matchWord;\n\n    function localeMonths(m, format) {\n        if (!m) {\n            return isArray(this._months)\n                ? this._months\n                : this._months['standalone'];\n        }\n        return isArray(this._months)\n            ? this._months[m.month()]\n            : this._months[\n                  (this._months.isFormat || MONTHS_IN_FORMAT).test(format)\n                      ? 'format'\n                      : 'standalone'\n              ][m.month()];\n    }\n\n    function localeMonthsShort(m, format) {\n        if (!m) {\n            return isArray(this._monthsShort)\n                ? this._monthsShort\n                : this._monthsShort['standalone'];\n        }\n        return isArray(this._monthsShort)\n            ? this._monthsShort[m.month()]\n            : this._monthsShort[\n                  MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'\n              ][m.month()];\n    }\n\n    function handleStrictParse(monthName, format, strict) {\n        var i,\n            ii,\n            mom,\n            llc = monthName.toLocaleLowerCase();\n        if (!this._monthsParse) {\n            // this is not used\n            this._monthsParse = [];\n            this._longMonthsParse = [];\n            this._shortMonthsParse = [];\n            for (i = 0; i < 12; ++i) {\n                mom = createUTC([2000, i]);\n                this._shortMonthsParse[i] = this.monthsShort(\n                    mom,\n                    ''\n                ).toLocaleLowerCase();\n                this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n            }\n        }\n\n        if (strict) {\n            if (format === 'MMM') {\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._longMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        } else {\n            if (format === 'MMM') {\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._longMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._longMonthsParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        }\n    }\n\n    function localeMonthsParse(monthName, format, strict) {\n        var i, mom, regex;\n\n        if (this._monthsParseExact) {\n            return handleStrictParse.call(this, monthName, format, strict);\n        }\n\n        if (!this._monthsParse) {\n            this._monthsParse = [];\n            this._longMonthsParse = [];\n            this._shortMonthsParse = [];\n        }\n\n        // TODO: add sorting\n        // Sorting makes sure if one month (or abbr) is a prefix of another\n        // see sorting in computeMonthsParse\n        for (i = 0; i < 12; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, i]);\n            if (strict && !this._longMonthsParse[i]) {\n                this._longMonthsParse[i] = new RegExp(\n                    '^' + this.months(mom, '').replace('.', '') + '$',\n                    'i'\n                );\n                this._shortMonthsParse[i] = new RegExp(\n                    '^' + this.monthsShort(mom, '').replace('.', '') + '$',\n                    'i'\n                );\n            }\n            if (!strict && !this._monthsParse[i]) {\n                regex =\n                    '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n                this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n            }\n            // test the regex\n            if (\n                strict &&\n                format === 'MMMM' &&\n                this._longMonthsParse[i].test(monthName)\n            ) {\n                return i;\n            } else if (\n                strict &&\n                format === 'MMM' &&\n                this._shortMonthsParse[i].test(monthName)\n            ) {\n                return i;\n            } else if (!strict && this._monthsParse[i].test(monthName)) {\n                return i;\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function setMonth(mom, value) {\n        var dayOfMonth;\n\n        if (!mom.isValid()) {\n            // No op\n            return mom;\n        }\n\n        if (typeof value === 'string') {\n            if (/^\\d+$/.test(value)) {\n                value = toInt(value);\n            } else {\n                value = mom.localeData().monthsParse(value);\n                // TODO: Another silent failure?\n                if (!isNumber(value)) {\n                    return mom;\n                }\n            }\n        }\n\n        dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n        return mom;\n    }\n\n    function getSetMonth(value) {\n        if (value != null) {\n            setMonth(this, value);\n            hooks.updateOffset(this, true);\n            return this;\n        } else {\n            return get(this, 'Month');\n        }\n    }\n\n    function getDaysInMonth() {\n        return daysInMonth(this.year(), this.month());\n    }\n\n    function monthsShortRegex(isStrict) {\n        if (this._monthsParseExact) {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                computeMonthsParse.call(this);\n            }\n            if (isStrict) {\n                return this._monthsShortStrictRegex;\n            } else {\n                return this._monthsShortRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_monthsShortRegex')) {\n                this._monthsShortRegex = defaultMonthsShortRegex;\n            }\n            return this._monthsShortStrictRegex && isStrict\n                ? this._monthsShortStrictRegex\n                : this._monthsShortRegex;\n        }\n    }\n\n    function monthsRegex(isStrict) {\n        if (this._monthsParseExact) {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                computeMonthsParse.call(this);\n            }\n            if (isStrict) {\n                return this._monthsStrictRegex;\n            } else {\n                return this._monthsRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                this._monthsRegex = defaultMonthsRegex;\n            }\n            return this._monthsStrictRegex && isStrict\n                ? this._monthsStrictRegex\n                : this._monthsRegex;\n        }\n    }\n\n    function computeMonthsParse() {\n        function cmpLenRev(a, b) {\n            return b.length - a.length;\n        }\n\n        var shortPieces = [],\n            longPieces = [],\n            mixedPieces = [],\n            i,\n            mom;\n        for (i = 0; i < 12; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, i]);\n            shortPieces.push(this.monthsShort(mom, ''));\n            longPieces.push(this.months(mom, ''));\n            mixedPieces.push(this.months(mom, ''));\n            mixedPieces.push(this.monthsShort(mom, ''));\n        }\n        // Sorting makes sure if one month (or abbr) is a prefix of another it\n        // will match the longer piece.\n        shortPieces.sort(cmpLenRev);\n        longPieces.sort(cmpLenRev);\n        mixedPieces.sort(cmpLenRev);\n        for (i = 0; i < 12; i++) {\n            shortPieces[i] = regexEscape(shortPieces[i]);\n            longPieces[i] = regexEscape(longPieces[i]);\n        }\n        for (i = 0; i < 24; i++) {\n            mixedPieces[i] = regexEscape(mixedPieces[i]);\n        }\n\n        this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n        this._monthsShortRegex = this._monthsRegex;\n        this._monthsStrictRegex = new RegExp(\n            '^(' + longPieces.join('|') + ')',\n            'i'\n        );\n        this._monthsShortStrictRegex = new RegExp(\n            '^(' + shortPieces.join('|') + ')',\n            'i'\n        );\n    }\n\n    // FORMATTING\n\n    addFormatToken('Y', 0, 0, function () {\n        var y = this.year();\n        return y <= 9999 ? zeroFill(y, 4) : '+' + y;\n    });\n\n    addFormatToken(0, ['YY', 2], 0, function () {\n        return this.year() % 100;\n    });\n\n    addFormatToken(0, ['YYYY', 4], 0, 'year');\n    addFormatToken(0, ['YYYYY', 5], 0, 'year');\n    addFormatToken(0, ['YYYYYY', 6, true], 0, 'year');\n\n    // ALIASES\n\n    addUnitAlias('year', 'y');\n\n    // PRIORITIES\n\n    addUnitPriority('year', 1);\n\n    // PARSING\n\n    addRegexToken('Y', matchSigned);\n    addRegexToken('YY', match1to2, match2);\n    addRegexToken('YYYY', match1to4, match4);\n    addRegexToken('YYYYY', match1to6, match6);\n    addRegexToken('YYYYYY', match1to6, match6);\n\n    addParseToken(['YYYYY', 'YYYYYY'], YEAR);\n    addParseToken('YYYY', function (input, array) {\n        array[YEAR] =\n            input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);\n    });\n    addParseToken('YY', function (input, array) {\n        array[YEAR] = hooks.parseTwoDigitYear(input);\n    });\n    addParseToken('Y', function (input, array) {\n        array[YEAR] = parseInt(input, 10);\n    });\n\n    // HELPERS\n\n    function daysInYear(year) {\n        return isLeapYear(year) ? 366 : 365;\n    }\n\n    // HOOKS\n\n    hooks.parseTwoDigitYear = function (input) {\n        return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n    };\n\n    // MOMENTS\n\n    var getSetYear = makeGetSet('FullYear', true);\n\n    function getIsLeapYear() {\n        return isLeapYear(this.year());\n    }\n\n    function createDate(y, m, d, h, M, s, ms) {\n        // can't just apply() to create a date:\n        // https://stackoverflow.com/q/181348\n        var date;\n        // the date constructor remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) {\n            // preserve leap years using a full 400 year cycle, then reset\n            date = new Date(y + 400, m, d, h, M, s, ms);\n            if (isFinite(date.getFullYear())) {\n                date.setFullYear(y);\n            }\n        } else {\n            date = new Date(y, m, d, h, M, s, ms);\n        }\n\n        return date;\n    }\n\n    function createUTCDate(y) {\n        var date, args;\n        // the Date.UTC function remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) {\n            args = Array.prototype.slice.call(arguments);\n            // preserve leap years using a full 400 year cycle, then reset\n            args[0] = y + 400;\n            date = new Date(Date.UTC.apply(null, args));\n            if (isFinite(date.getUTCFullYear())) {\n                date.setUTCFullYear(y);\n            }\n        } else {\n            date = new Date(Date.UTC.apply(null, arguments));\n        }\n\n        return date;\n    }\n\n    // start-of-first-week - start-of-year\n    function firstWeekOffset(year, dow, doy) {\n        var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n            fwd = 7 + dow - doy,\n            // first-week day local weekday -- which local weekday is fwd\n            fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n\n        return -fwdlw + fwd - 1;\n    }\n\n    // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n    function dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n        var localWeekday = (7 + weekday - dow) % 7,\n            weekOffset = firstWeekOffset(year, dow, doy),\n            dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n            resYear,\n            resDayOfYear;\n\n        if (dayOfYear <= 0) {\n            resYear = year - 1;\n            resDayOfYear = daysInYear(resYear) + dayOfYear;\n        } else if (dayOfYear > daysInYear(year)) {\n            resYear = year + 1;\n            resDayOfYear = dayOfYear - daysInYear(year);\n        } else {\n            resYear = year;\n            resDayOfYear = dayOfYear;\n        }\n\n        return {\n            year: resYear,\n            dayOfYear: resDayOfYear,\n        };\n    }\n\n    function weekOfYear(mom, dow, doy) {\n        var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n            week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n            resWeek,\n            resYear;\n\n        if (week < 1) {\n            resYear = mom.year() - 1;\n            resWeek = week + weeksInYear(resYear, dow, doy);\n        } else if (week > weeksInYear(mom.year(), dow, doy)) {\n            resWeek = week - weeksInYear(mom.year(), dow, doy);\n            resYear = mom.year() + 1;\n        } else {\n            resYear = mom.year();\n            resWeek = week;\n        }\n\n        return {\n            week: resWeek,\n            year: resYear,\n        };\n    }\n\n    function weeksInYear(year, dow, doy) {\n        var weekOffset = firstWeekOffset(year, dow, doy),\n            weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n        return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n    }\n\n    // FORMATTING\n\n    addFormatToken('w', ['ww', 2], 'wo', 'week');\n    addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');\n\n    // ALIASES\n\n    addUnitAlias('week', 'w');\n    addUnitAlias('isoWeek', 'W');\n\n    // PRIORITIES\n\n    addUnitPriority('week', 5);\n    addUnitPriority('isoWeek', 5);\n\n    // PARSING\n\n    addRegexToken('w', match1to2);\n    addRegexToken('ww', match1to2, match2);\n    addRegexToken('W', match1to2);\n    addRegexToken('WW', match1to2, match2);\n\n    addWeekParseToken(['w', 'ww', 'W', 'WW'], function (\n        input,\n        week,\n        config,\n        token\n    ) {\n        week[token.substr(0, 1)] = toInt(input);\n    });\n\n    // HELPERS\n\n    // LOCALES\n\n    function localeWeek(mom) {\n        return weekOfYear(mom, this._week.dow, this._week.doy).week;\n    }\n\n    var defaultLocaleWeek = {\n        dow: 0, // Sunday is the first day of the week.\n        doy: 6, // The week that contains Jan 6th is the first week of the year.\n    };\n\n    function localeFirstDayOfWeek() {\n        return this._week.dow;\n    }\n\n    function localeFirstDayOfYear() {\n        return this._week.doy;\n    }\n\n    // MOMENTS\n\n    function getSetWeek(input) {\n        var week = this.localeData().week(this);\n        return input == null ? week : this.add((input - week) * 7, 'd');\n    }\n\n    function getSetISOWeek(input) {\n        var week = weekOfYear(this, 1, 4).week;\n        return input == null ? week : this.add((input - week) * 7, 'd');\n    }\n\n    // FORMATTING\n\n    addFormatToken('d', 0, 'do', 'day');\n\n    addFormatToken('dd', 0, 0, function (format) {\n        return this.localeData().weekdaysMin(this, format);\n    });\n\n    addFormatToken('ddd', 0, 0, function (format) {\n        return this.localeData().weekdaysShort(this, format);\n    });\n\n    addFormatToken('dddd', 0, 0, function (format) {\n        return this.localeData().weekdays(this, format);\n    });\n\n    addFormatToken('e', 0, 0, 'weekday');\n    addFormatToken('E', 0, 0, 'isoWeekday');\n\n    // ALIASES\n\n    addUnitAlias('day', 'd');\n    addUnitAlias('weekday', 'e');\n    addUnitAlias('isoWeekday', 'E');\n\n    // PRIORITY\n    addUnitPriority('day', 11);\n    addUnitPriority('weekday', 11);\n    addUnitPriority('isoWeekday', 11);\n\n    // PARSING\n\n    addRegexToken('d', match1to2);\n    addRegexToken('e', match1to2);\n    addRegexToken('E', match1to2);\n    addRegexToken('dd', function (isStrict, locale) {\n        return locale.weekdaysMinRegex(isStrict);\n    });\n    addRegexToken('ddd', function (isStrict, locale) {\n        return locale.weekdaysShortRegex(isStrict);\n    });\n    addRegexToken('dddd', function (isStrict, locale) {\n        return locale.weekdaysRegex(isStrict);\n    });\n\n    addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n        var weekday = config._locale.weekdaysParse(input, token, config._strict);\n        // if we didn't get a weekday name, mark the date as invalid\n        if (weekday != null) {\n            week.d = weekday;\n        } else {\n            getParsingFlags(config).invalidWeekday = input;\n        }\n    });\n\n    addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n        week[token] = toInt(input);\n    });\n\n    // HELPERS\n\n    function parseWeekday(input, locale) {\n        if (typeof input !== 'string') {\n            return input;\n        }\n\n        if (!isNaN(input)) {\n            return parseInt(input, 10);\n        }\n\n        input = locale.weekdaysParse(input);\n        if (typeof input === 'number') {\n            return input;\n        }\n\n        return null;\n    }\n\n    function parseIsoWeekday(input, locale) {\n        if (typeof input === 'string') {\n            return locale.weekdaysParse(input) % 7 || 7;\n        }\n        return isNaN(input) ? null : input;\n    }\n\n    // LOCALES\n    function shiftWeekdays(ws, n) {\n        return ws.slice(n, 7).concat(ws.slice(0, n));\n    }\n\n    var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split(\n            '_'\n        ),\n        defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n        defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n        defaultWeekdaysRegex = matchWord,\n        defaultWeekdaysShortRegex = matchWord,\n        defaultWeekdaysMinRegex = matchWord;\n\n    function localeWeekdays(m, format) {\n        var weekdays = isArray(this._weekdays)\n            ? this._weekdays\n            : this._weekdays[\n                  m && m !== true && this._weekdays.isFormat.test(format)\n                      ? 'format'\n                      : 'standalone'\n              ];\n        return m === true\n            ? shiftWeekdays(weekdays, this._week.dow)\n            : m\n            ? weekdays[m.day()]\n            : weekdays;\n    }\n\n    function localeWeekdaysShort(m) {\n        return m === true\n            ? shiftWeekdays(this._weekdaysShort, this._week.dow)\n            : m\n            ? this._weekdaysShort[m.day()]\n            : this._weekdaysShort;\n    }\n\n    function localeWeekdaysMin(m) {\n        return m === true\n            ? shiftWeekdays(this._weekdaysMin, this._week.dow)\n            : m\n            ? this._weekdaysMin[m.day()]\n            : this._weekdaysMin;\n    }\n\n    function handleStrictParse$1(weekdayName, format, strict) {\n        var i,\n            ii,\n            mom,\n            llc = weekdayName.toLocaleLowerCase();\n        if (!this._weekdaysParse) {\n            this._weekdaysParse = [];\n            this._shortWeekdaysParse = [];\n            this._minWeekdaysParse = [];\n\n            for (i = 0; i < 7; ++i) {\n                mom = createUTC([2000, 1]).day(i);\n                this._minWeekdaysParse[i] = this.weekdaysMin(\n                    mom,\n                    ''\n                ).toLocaleLowerCase();\n                this._shortWeekdaysParse[i] = this.weekdaysShort(\n                    mom,\n                    ''\n                ).toLocaleLowerCase();\n                this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\n            }\n        }\n\n        if (strict) {\n            if (format === 'dddd') {\n                ii = indexOf.call(this._weekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else if (format === 'ddd') {\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        } else {\n            if (format === 'dddd') {\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else if (format === 'ddd') {\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        }\n    }\n\n    function localeWeekdaysParse(weekdayName, format, strict) {\n        var i, mom, regex;\n\n        if (this._weekdaysParseExact) {\n            return handleStrictParse$1.call(this, weekdayName, format, strict);\n        }\n\n        if (!this._weekdaysParse) {\n            this._weekdaysParse = [];\n            this._minWeekdaysParse = [];\n            this._shortWeekdaysParse = [];\n            this._fullWeekdaysParse = [];\n        }\n\n        for (i = 0; i < 7; i++) {\n            // make the regex if we don't have it already\n\n            mom = createUTC([2000, 1]).day(i);\n            if (strict && !this._fullWeekdaysParse[i]) {\n                this._fullWeekdaysParse[i] = new RegExp(\n                    '^' + this.weekdays(mom, '').replace('.', '\\\\.?') + '$',\n                    'i'\n                );\n                this._shortWeekdaysParse[i] = new RegExp(\n                    '^' + this.weekdaysShort(mom, '').replace('.', '\\\\.?') + '$',\n                    'i'\n                );\n                this._minWeekdaysParse[i] = new RegExp(\n                    '^' + this.weekdaysMin(mom, '').replace('.', '\\\\.?') + '$',\n                    'i'\n                );\n            }\n            if (!this._weekdaysParse[i]) {\n                regex =\n                    '^' +\n                    this.weekdays(mom, '') +\n                    '|^' +\n                    this.weekdaysShort(mom, '') +\n                    '|^' +\n                    this.weekdaysMin(mom, '');\n                this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n            }\n            // test the regex\n            if (\n                strict &&\n                format === 'dddd' &&\n                this._fullWeekdaysParse[i].test(weekdayName)\n            ) {\n                return i;\n            } else if (\n                strict &&\n                format === 'ddd' &&\n                this._shortWeekdaysParse[i].test(weekdayName)\n            ) {\n                return i;\n            } else if (\n                strict &&\n                format === 'dd' &&\n                this._minWeekdaysParse[i].test(weekdayName)\n            ) {\n                return i;\n            } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n                return i;\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function getSetDayOfWeek(input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n        if (input != null) {\n            input = parseWeekday(input, this.localeData());\n            return this.add(input - day, 'd');\n        } else {\n            return day;\n        }\n    }\n\n    function getSetLocaleDayOfWeek(input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n        return input == null ? weekday : this.add(input - weekday, 'd');\n    }\n\n    function getSetISODayOfWeek(input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n\n        // behaves the same as moment#day except\n        // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n        // as a setter, sunday should belong to the previous week.\n\n        if (input != null) {\n            var weekday = parseIsoWeekday(input, this.localeData());\n            return this.day(this.day() % 7 ? weekday : weekday - 7);\n        } else {\n            return this.day() || 7;\n        }\n    }\n\n    function weekdaysRegex(isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysStrictRegex;\n            } else {\n                return this._weekdaysRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                this._weekdaysRegex = defaultWeekdaysRegex;\n            }\n            return this._weekdaysStrictRegex && isStrict\n                ? this._weekdaysStrictRegex\n                : this._weekdaysRegex;\n        }\n    }\n\n    function weekdaysShortRegex(isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysShortStrictRegex;\n            } else {\n                return this._weekdaysShortRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n                this._weekdaysShortRegex = defaultWeekdaysShortRegex;\n            }\n            return this._weekdaysShortStrictRegex && isStrict\n                ? this._weekdaysShortStrictRegex\n                : this._weekdaysShortRegex;\n        }\n    }\n\n    function weekdaysMinRegex(isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysMinStrictRegex;\n            } else {\n                return this._weekdaysMinRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n                this._weekdaysMinRegex = defaultWeekdaysMinRegex;\n            }\n            return this._weekdaysMinStrictRegex && isStrict\n                ? this._weekdaysMinStrictRegex\n                : this._weekdaysMinRegex;\n        }\n    }\n\n    function computeWeekdaysParse() {\n        function cmpLenRev(a, b) {\n            return b.length - a.length;\n        }\n\n        var minPieces = [],\n            shortPieces = [],\n            longPieces = [],\n            mixedPieces = [],\n            i,\n            mom,\n            minp,\n            shortp,\n            longp;\n        for (i = 0; i < 7; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, 1]).day(i);\n            minp = regexEscape(this.weekdaysMin(mom, ''));\n            shortp = regexEscape(this.weekdaysShort(mom, ''));\n            longp = regexEscape(this.weekdays(mom, ''));\n            minPieces.push(minp);\n            shortPieces.push(shortp);\n            longPieces.push(longp);\n            mixedPieces.push(minp);\n            mixedPieces.push(shortp);\n            mixedPieces.push(longp);\n        }\n        // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n        // will match the longer piece.\n        minPieces.sort(cmpLenRev);\n        shortPieces.sort(cmpLenRev);\n        longPieces.sort(cmpLenRev);\n        mixedPieces.sort(cmpLenRev);\n\n        this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n        this._weekdaysShortRegex = this._weekdaysRegex;\n        this._weekdaysMinRegex = this._weekdaysRegex;\n\n        this._weekdaysStrictRegex = new RegExp(\n            '^(' + longPieces.join('|') + ')',\n            'i'\n        );\n        this._weekdaysShortStrictRegex = new RegExp(\n            '^(' + shortPieces.join('|') + ')',\n            'i'\n        );\n        this._weekdaysMinStrictRegex = new RegExp(\n            '^(' + minPieces.join('|') + ')',\n            'i'\n        );\n    }\n\n    // FORMATTING\n\n    function hFormat() {\n        return this.hours() % 12 || 12;\n    }\n\n    function kFormat() {\n        return this.hours() || 24;\n    }\n\n    addFormatToken('H', ['HH', 2], 0, 'hour');\n    addFormatToken('h', ['hh', 2], 0, hFormat);\n    addFormatToken('k', ['kk', 2], 0, kFormat);\n\n    addFormatToken('hmm', 0, 0, function () {\n        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n    });\n\n    addFormatToken('hmmss', 0, 0, function () {\n        return (\n            '' +\n            hFormat.apply(this) +\n            zeroFill(this.minutes(), 2) +\n            zeroFill(this.seconds(), 2)\n        );\n    });\n\n    addFormatToken('Hmm', 0, 0, function () {\n        return '' + this.hours() + zeroFill(this.minutes(), 2);\n    });\n\n    addFormatToken('Hmmss', 0, 0, function () {\n        return (\n            '' +\n            this.hours() +\n            zeroFill(this.minutes(), 2) +\n            zeroFill(this.seconds(), 2)\n        );\n    });\n\n    function meridiem(token, lowercase) {\n        addFormatToken(token, 0, 0, function () {\n            return this.localeData().meridiem(\n                this.hours(),\n                this.minutes(),\n                lowercase\n            );\n        });\n    }\n\n    meridiem('a', true);\n    meridiem('A', false);\n\n    // ALIASES\n\n    addUnitAlias('hour', 'h');\n\n    // PRIORITY\n    addUnitPriority('hour', 13);\n\n    // PARSING\n\n    function matchMeridiem(isStrict, locale) {\n        return locale._meridiemParse;\n    }\n\n    addRegexToken('a', matchMeridiem);\n    addRegexToken('A', matchMeridiem);\n    addRegexToken('H', match1to2);\n    addRegexToken('h', match1to2);\n    addRegexToken('k', match1to2);\n    addRegexToken('HH', match1to2, match2);\n    addRegexToken('hh', match1to2, match2);\n    addRegexToken('kk', match1to2, match2);\n\n    addRegexToken('hmm', match3to4);\n    addRegexToken('hmmss', match5to6);\n    addRegexToken('Hmm', match3to4);\n    addRegexToken('Hmmss', match5to6);\n\n    addParseToken(['H', 'HH'], HOUR);\n    addParseToken(['k', 'kk'], function (input, array, config) {\n        var kInput = toInt(input);\n        array[HOUR] = kInput === 24 ? 0 : kInput;\n    });\n    addParseToken(['a', 'A'], function (input, array, config) {\n        config._isPm = config._locale.isPM(input);\n        config._meridiem = input;\n    });\n    addParseToken(['h', 'hh'], function (input, array, config) {\n        array[HOUR] = toInt(input);\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('hmm', function (input, array, config) {\n        var pos = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos));\n        array[MINUTE] = toInt(input.substr(pos));\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('hmmss', function (input, array, config) {\n        var pos1 = input.length - 4,\n            pos2 = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos1));\n        array[MINUTE] = toInt(input.substr(pos1, 2));\n        array[SECOND] = toInt(input.substr(pos2));\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('Hmm', function (input, array, config) {\n        var pos = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos));\n        array[MINUTE] = toInt(input.substr(pos));\n    });\n    addParseToken('Hmmss', function (input, array, config) {\n        var pos1 = input.length - 4,\n            pos2 = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos1));\n        array[MINUTE] = toInt(input.substr(pos1, 2));\n        array[SECOND] = toInt(input.substr(pos2));\n    });\n\n    // LOCALES\n\n    function localeIsPM(input) {\n        // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n        // Using charAt should be more compatible.\n        return (input + '').toLowerCase().charAt(0) === 'p';\n    }\n\n    var defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i,\n        // Setting the hour should keep the time, because the user explicitly\n        // specified which hour they want. So trying to maintain the same hour (in\n        // a new timezone) makes sense. Adding/subtracting hours does not follow\n        // this rule.\n        getSetHour = makeGetSet('Hours', true);\n\n    function localeMeridiem(hours, minutes, isLower) {\n        if (hours > 11) {\n            return isLower ? 'pm' : 'PM';\n        } else {\n            return isLower ? 'am' : 'AM';\n        }\n    }\n\n    var baseConfig = {\n        calendar: defaultCalendar,\n        longDateFormat: defaultLongDateFormat,\n        invalidDate: defaultInvalidDate,\n        ordinal: defaultOrdinal,\n        dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n        relativeTime: defaultRelativeTime,\n\n        months: defaultLocaleMonths,\n        monthsShort: defaultLocaleMonthsShort,\n\n        week: defaultLocaleWeek,\n\n        weekdays: defaultLocaleWeekdays,\n        weekdaysMin: defaultLocaleWeekdaysMin,\n        weekdaysShort: defaultLocaleWeekdaysShort,\n\n        meridiemParse: defaultLocaleMeridiemParse,\n    };\n\n    // internal storage for locale config files\n    var locales = {},\n        localeFamilies = {},\n        globalLocale;\n\n    function commonPrefix(arr1, arr2) {\n        var i,\n            minl = Math.min(arr1.length, arr2.length);\n        for (i = 0; i < minl; i += 1) {\n            if (arr1[i] !== arr2[i]) {\n                return i;\n            }\n        }\n        return minl;\n    }\n\n    function normalizeLocale(key) {\n        return key ? key.toLowerCase().replace('_', '-') : key;\n    }\n\n    // pick the locale from the array\n    // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n    // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n    function chooseLocale(names) {\n        var i = 0,\n            j,\n            next,\n            locale,\n            split;\n\n        while (i < names.length) {\n            split = normalizeLocale(names[i]).split('-');\n            j = split.length;\n            next = normalizeLocale(names[i + 1]);\n            next = next ? next.split('-') : null;\n            while (j > 0) {\n                locale = loadLocale(split.slice(0, j).join('-'));\n                if (locale) {\n                    return locale;\n                }\n                if (\n                    next &&\n                    next.length >= j &&\n                    commonPrefix(split, next) >= j - 1\n                ) {\n                    //the next array item is better than a shallower substring of this one\n                    break;\n                }\n                j--;\n            }\n            i++;\n        }\n        return globalLocale;\n    }\n\n    function loadLocale(name) {\n        var oldLocale = null,\n            aliasedRequire;\n        // TODO: Find a better way to register and load all the locales in Node\n        if (\n            locales[name] === undefined &&\n            typeof module !== 'undefined' &&\n            module &&\n            module.exports\n        ) {\n            try {\n                oldLocale = globalLocale._abbr;\n                aliasedRequire = require;\n                aliasedRequire('./locale/' + name);\n                getSetGlobalLocale(oldLocale);\n            } catch (e) {\n                // mark as not found to avoid repeating expensive file require call causing high CPU\n                // when trying to find en-US, en_US, en-us for every format call\n                locales[name] = null; // null means not found\n            }\n        }\n        return locales[name];\n    }\n\n    // This function will load locale and then set the global locale.  If\n    // no arguments are passed in, it will simply return the current global\n    // locale key.\n    function getSetGlobalLocale(key, values) {\n        var data;\n        if (key) {\n            if (isUndefined(values)) {\n                data = getLocale(key);\n            } else {\n                data = defineLocale(key, values);\n            }\n\n            if (data) {\n                // moment.duration._locale = moment._locale = data;\n                globalLocale = data;\n            } else {\n                if (typeof console !== 'undefined' && console.warn) {\n                    //warn user if arguments are passed but the locale could not be set\n                    console.warn(\n                        'Locale ' + key + ' not found. Did you forget to load it?'\n                    );\n                }\n            }\n        }\n\n        return globalLocale._abbr;\n    }\n\n    function defineLocale(name, config) {\n        if (config !== null) {\n            var locale,\n                parentConfig = baseConfig;\n            config.abbr = name;\n            if (locales[name] != null) {\n                deprecateSimple(\n                    'defineLocaleOverride',\n                    'use moment.updateLocale(localeName, config) to change ' +\n                        'an existing locale. moment.defineLocale(localeName, ' +\n                        'config) should only be used for creating a new locale ' +\n                        'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.'\n                );\n                parentConfig = locales[name]._config;\n            } else if (config.parentLocale != null) {\n                if (locales[config.parentLocale] != null) {\n                    parentConfig = locales[config.parentLocale]._config;\n                } else {\n                    locale = loadLocale(config.parentLocale);\n                    if (locale != null) {\n                        parentConfig = locale._config;\n                    } else {\n                        if (!localeFamilies[config.parentLocale]) {\n                            localeFamilies[config.parentLocale] = [];\n                        }\n                        localeFamilies[config.parentLocale].push({\n                            name: name,\n                            config: config,\n                        });\n                        return null;\n                    }\n                }\n            }\n            locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\n            if (localeFamilies[name]) {\n                localeFamilies[name].forEach(function (x) {\n                    defineLocale(x.name, x.config);\n                });\n            }\n\n            // backwards compat for now: also set the locale\n            // make sure we set the locale AFTER all child locales have been\n            // created, so we won't end up with the child locale set.\n            getSetGlobalLocale(name);\n\n            return locales[name];\n        } else {\n            // useful for testing\n            delete locales[name];\n            return null;\n        }\n    }\n\n    function updateLocale(name, config) {\n        if (config != null) {\n            var locale,\n                tmpLocale,\n                parentConfig = baseConfig;\n\n            if (locales[name] != null && locales[name].parentLocale != null) {\n                // Update existing child locale in-place to avoid memory-leaks\n                locales[name].set(mergeConfigs(locales[name]._config, config));\n            } else {\n                // MERGE\n                tmpLocale = loadLocale(name);\n                if (tmpLocale != null) {\n                    parentConfig = tmpLocale._config;\n                }\n                config = mergeConfigs(parentConfig, config);\n                if (tmpLocale == null) {\n                    // updateLocale is called for creating a new locale\n                    // Set abbr so it will have a name (getters return\n                    // undefined otherwise).\n                    config.abbr = name;\n                }\n                locale = new Locale(config);\n                locale.parentLocale = locales[name];\n                locales[name] = locale;\n            }\n\n            // backwards compat for now: also set the locale\n            getSetGlobalLocale(name);\n        } else {\n            // pass null for config to unupdate, useful for tests\n            if (locales[name] != null) {\n                if (locales[name].parentLocale != null) {\n                    locales[name] = locales[name].parentLocale;\n                    if (name === getSetGlobalLocale()) {\n                        getSetGlobalLocale(name);\n                    }\n                } else if (locales[name] != null) {\n                    delete locales[name];\n                }\n            }\n        }\n        return locales[name];\n    }\n\n    // returns locale data\n    function getLocale(key) {\n        var locale;\n\n        if (key && key._locale && key._locale._abbr) {\n            key = key._locale._abbr;\n        }\n\n        if (!key) {\n            return globalLocale;\n        }\n\n        if (!isArray(key)) {\n            //short-circuit everything else\n            locale = loadLocale(key);\n            if (locale) {\n                return locale;\n            }\n            key = [key];\n        }\n\n        return chooseLocale(key);\n    }\n\n    function listLocales() {\n        return keys(locales);\n    }\n\n    function checkOverflow(m) {\n        var overflow,\n            a = m._a;\n\n        if (a && getParsingFlags(m).overflow === -2) {\n            overflow =\n                a[MONTH] < 0 || a[MONTH] > 11\n                    ? MONTH\n                    : a[DATE] < 1 || a[DATE] > daysInMonth(a[YEAR], a[MONTH])\n                    ? DATE\n                    : a[HOUR] < 0 ||\n                      a[HOUR] > 24 ||\n                      (a[HOUR] === 24 &&\n                          (a[MINUTE] !== 0 ||\n                              a[SECOND] !== 0 ||\n                              a[MILLISECOND] !== 0))\n                    ? HOUR\n                    : a[MINUTE] < 0 || a[MINUTE] > 59\n                    ? MINUTE\n                    : a[SECOND] < 0 || a[SECOND] > 59\n                    ? SECOND\n                    : a[MILLISECOND] < 0 || a[MILLISECOND] > 999\n                    ? MILLISECOND\n                    : -1;\n\n            if (\n                getParsingFlags(m)._overflowDayOfYear &&\n                (overflow < YEAR || overflow > DATE)\n            ) {\n                overflow = DATE;\n            }\n            if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n                overflow = WEEK;\n            }\n            if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n                overflow = WEEKDAY;\n            }\n\n            getParsingFlags(m).overflow = overflow;\n        }\n\n        return m;\n    }\n\n    // iso 8601 regex\n    // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n    var extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([+-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/,\n        basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d|))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([+-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/,\n        tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/,\n        isoDates = [\n            ['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/],\n            ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/],\n            ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/],\n            ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false],\n            ['YYYY-DDD', /\\d{4}-\\d{3}/],\n            ['YYYY-MM', /\\d{4}-\\d\\d/, false],\n            ['YYYYYYMMDD', /[+-]\\d{10}/],\n            ['YYYYMMDD', /\\d{8}/],\n            ['GGGG[W]WWE', /\\d{4}W\\d{3}/],\n            ['GGGG[W]WW', /\\d{4}W\\d{2}/, false],\n            ['YYYYDDD', /\\d{7}/],\n            ['YYYYMM', /\\d{6}/, false],\n            ['YYYY', /\\d{4}/, false],\n        ],\n        // iso time formats and regexes\n        isoTimes = [\n            ['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/],\n            ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/],\n            ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/],\n            ['HH:mm', /\\d\\d:\\d\\d/],\n            ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/],\n            ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/],\n            ['HHmmss', /\\d\\d\\d\\d\\d\\d/],\n            ['HHmm', /\\d\\d\\d\\d/],\n            ['HH', /\\d\\d/],\n        ],\n        aspNetJsonRegex = /^\\/?Date\\((-?\\d+)/i,\n        // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\n        rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\\d{4}))$/,\n        obsOffsets = {\n            UT: 0,\n            GMT: 0,\n            EDT: -4 * 60,\n            EST: -5 * 60,\n            CDT: -5 * 60,\n            CST: -6 * 60,\n            MDT: -6 * 60,\n            MST: -7 * 60,\n            PDT: -7 * 60,\n            PST: -8 * 60,\n        };\n\n    // date from iso format\n    function configFromISO(config) {\n        var i,\n            l,\n            string = config._i,\n            match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n            allowTime,\n            dateFormat,\n            timeFormat,\n            tzFormat;\n\n        if (match) {\n            getParsingFlags(config).iso = true;\n\n            for (i = 0, l = isoDates.length; i < l; i++) {\n                if (isoDates[i][1].exec(match[1])) {\n                    dateFormat = isoDates[i][0];\n                    allowTime = isoDates[i][2] !== false;\n                    break;\n                }\n            }\n            if (dateFormat == null) {\n                config._isValid = false;\n                return;\n            }\n            if (match[3]) {\n                for (i = 0, l = isoTimes.length; i < l; i++) {\n                    if (isoTimes[i][1].exec(match[3])) {\n                        // match[2] should be 'T' or space\n                        timeFormat = (match[2] || ' ') + isoTimes[i][0];\n                        break;\n                    }\n                }\n                if (timeFormat == null) {\n                    config._isValid = false;\n                    return;\n                }\n            }\n            if (!allowTime && timeFormat != null) {\n                config._isValid = false;\n                return;\n            }\n            if (match[4]) {\n                if (tzRegex.exec(match[4])) {\n                    tzFormat = 'Z';\n                } else {\n                    config._isValid = false;\n                    return;\n                }\n            }\n            config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n            configFromStringAndFormat(config);\n        } else {\n            config._isValid = false;\n        }\n    }\n\n    function extractFromRFC2822Strings(\n        yearStr,\n        monthStr,\n        dayStr,\n        hourStr,\n        minuteStr,\n        secondStr\n    ) {\n        var result = [\n            untruncateYear(yearStr),\n            defaultLocaleMonthsShort.indexOf(monthStr),\n            parseInt(dayStr, 10),\n            parseInt(hourStr, 10),\n            parseInt(minuteStr, 10),\n        ];\n\n        if (secondStr) {\n            result.push(parseInt(secondStr, 10));\n        }\n\n        return result;\n    }\n\n    function untruncateYear(yearStr) {\n        var year = parseInt(yearStr, 10);\n        if (year <= 49) {\n            return 2000 + year;\n        } else if (year <= 999) {\n            return 1900 + year;\n        }\n        return year;\n    }\n\n    function preprocessRFC2822(s) {\n        // Remove comments and folding whitespace and replace multiple-spaces with a single space\n        return s\n            .replace(/\\([^)]*\\)|[\\n\\t]/g, ' ')\n            .replace(/(\\s\\s+)/g, ' ')\n            .replace(/^\\s\\s*/, '')\n            .replace(/\\s\\s*$/, '');\n    }\n\n    function checkWeekday(weekdayStr, parsedInput, config) {\n        if (weekdayStr) {\n            // TODO: Replace the vanilla JS Date object with an independent day-of-week check.\n            var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),\n                weekdayActual = new Date(\n                    parsedInput[0],\n                    parsedInput[1],\n                    parsedInput[2]\n                ).getDay();\n            if (weekdayProvided !== weekdayActual) {\n                getParsingFlags(config).weekdayMismatch = true;\n                config._isValid = false;\n                return false;\n            }\n        }\n        return true;\n    }\n\n    function calculateOffset(obsOffset, militaryOffset, numOffset) {\n        if (obsOffset) {\n            return obsOffsets[obsOffset];\n        } else if (militaryOffset) {\n            // the only allowed military tz is Z\n            return 0;\n        } else {\n            var hm = parseInt(numOffset, 10),\n                m = hm % 100,\n                h = (hm - m) / 100;\n            return h * 60 + m;\n        }\n    }\n\n    // date and time from ref 2822 format\n    function configFromRFC2822(config) {\n        var match = rfc2822.exec(preprocessRFC2822(config._i)),\n            parsedArray;\n        if (match) {\n            parsedArray = extractFromRFC2822Strings(\n                match[4],\n                match[3],\n                match[2],\n                match[5],\n                match[6],\n                match[7]\n            );\n            if (!checkWeekday(match[1], parsedArray, config)) {\n                return;\n            }\n\n            config._a = parsedArray;\n            config._tzm = calculateOffset(match[8], match[9], match[10]);\n\n            config._d = createUTCDate.apply(null, config._a);\n            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n\n            getParsingFlags(config).rfc2822 = true;\n        } else {\n            config._isValid = false;\n        }\n    }\n\n    // date from 1) ASP.NET, 2) ISO, 3) RFC 2822 formats, or 4) optional fallback if parsing isn't strict\n    function configFromString(config) {\n        var matched = aspNetJsonRegex.exec(config._i);\n        if (matched !== null) {\n            config._d = new Date(+matched[1]);\n            return;\n        }\n\n        configFromISO(config);\n        if (config._isValid === false) {\n            delete config._isValid;\n        } else {\n            return;\n        }\n\n        configFromRFC2822(config);\n        if (config._isValid === false) {\n            delete config._isValid;\n        } else {\n            return;\n        }\n\n        if (config._strict) {\n            config._isValid = false;\n        } else {\n            // Final attempt, use Input Fallback\n            hooks.createFromInputFallback(config);\n        }\n    }\n\n    hooks.createFromInputFallback = deprecate(\n        'value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' +\n            'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' +\n            'discouraged and will be removed in an upcoming major release. Please refer to ' +\n            'http://momentjs.com/guides/#/warnings/js-date/ for more info.',\n        function (config) {\n            config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n        }\n    );\n\n    // Pick the first defined of two or three arguments.\n    function defaults(a, b, c) {\n        if (a != null) {\n            return a;\n        }\n        if (b != null) {\n            return b;\n        }\n        return c;\n    }\n\n    function currentDateArray(config) {\n        // hooks is actually the exported moment object\n        var nowValue = new Date(hooks.now());\n        if (config._useUTC) {\n            return [\n                nowValue.getUTCFullYear(),\n                nowValue.getUTCMonth(),\n                nowValue.getUTCDate(),\n            ];\n        }\n        return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n    }\n\n    // convert an array to a date.\n    // the array should mirror the parameters below\n    // note: all values past the year are optional and will default to the lowest possible value.\n    // [year, month, day , hour, minute, second, millisecond]\n    function configFromArray(config) {\n        var i,\n            date,\n            input = [],\n            currentDate,\n            expectedWeekday,\n            yearToUse;\n\n        if (config._d) {\n            return;\n        }\n\n        currentDate = currentDateArray(config);\n\n        //compute day of the year from weeks and weekdays\n        if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n            dayOfYearFromWeekInfo(config);\n        }\n\n        //if the day of the year is set, figure out what it is\n        if (config._dayOfYear != null) {\n            yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n            if (\n                config._dayOfYear > daysInYear(yearToUse) ||\n                config._dayOfYear === 0\n            ) {\n                getParsingFlags(config)._overflowDayOfYear = true;\n            }\n\n            date = createUTCDate(yearToUse, 0, config._dayOfYear);\n            config._a[MONTH] = date.getUTCMonth();\n            config._a[DATE] = date.getUTCDate();\n        }\n\n        // Default to current date.\n        // * if no year, month, day of month are given, default to today\n        // * if day of month is given, default month and year\n        // * if month is given, default only year\n        // * if year is given, don't default anything\n        for (i = 0; i < 3 && config._a[i] == null; ++i) {\n            config._a[i] = input[i] = currentDate[i];\n        }\n\n        // Zero out whatever was not defaulted, including time\n        for (; i < 7; i++) {\n            config._a[i] = input[i] =\n                config._a[i] == null ? (i === 2 ? 1 : 0) : config._a[i];\n        }\n\n        // Check for 24:00:00.000\n        if (\n            config._a[HOUR] === 24 &&\n            config._a[MINUTE] === 0 &&\n            config._a[SECOND] === 0 &&\n            config._a[MILLISECOND] === 0\n        ) {\n            config._nextDay = true;\n            config._a[HOUR] = 0;\n        }\n\n        config._d = (config._useUTC ? createUTCDate : createDate).apply(\n            null,\n            input\n        );\n        expectedWeekday = config._useUTC\n            ? config._d.getUTCDay()\n            : config._d.getDay();\n\n        // Apply timezone offset from input. The actual utcOffset can be changed\n        // with parseZone.\n        if (config._tzm != null) {\n            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n        }\n\n        if (config._nextDay) {\n            config._a[HOUR] = 24;\n        }\n\n        // check for mismatching day of week\n        if (\n            config._w &&\n            typeof config._w.d !== 'undefined' &&\n            config._w.d !== expectedWeekday\n        ) {\n            getParsingFlags(config).weekdayMismatch = true;\n        }\n    }\n\n    function dayOfYearFromWeekInfo(config) {\n        var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow, curWeek;\n\n        w = config._w;\n        if (w.GG != null || w.W != null || w.E != null) {\n            dow = 1;\n            doy = 4;\n\n            // TODO: We need to take the current isoWeekYear, but that depends on\n            // how we interpret now (local, utc, fixed offset). So create\n            // a now version of current config (take local/utc/offset flags, and\n            // create now).\n            weekYear = defaults(\n                w.GG,\n                config._a[YEAR],\n                weekOfYear(createLocal(), 1, 4).year\n            );\n            week = defaults(w.W, 1);\n            weekday = defaults(w.E, 1);\n            if (weekday < 1 || weekday > 7) {\n                weekdayOverflow = true;\n            }\n        } else {\n            dow = config._locale._week.dow;\n            doy = config._locale._week.doy;\n\n            curWeek = weekOfYear(createLocal(), dow, doy);\n\n            weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);\n\n            // Default to current week.\n            week = defaults(w.w, curWeek.week);\n\n            if (w.d != null) {\n                // weekday -- low day numbers are considered next week\n                weekday = w.d;\n                if (weekday < 0 || weekday > 6) {\n                    weekdayOverflow = true;\n                }\n            } else if (w.e != null) {\n                // local weekday -- counting starts from beginning of week\n                weekday = w.e + dow;\n                if (w.e < 0 || w.e > 6) {\n                    weekdayOverflow = true;\n                }\n            } else {\n                // default to beginning of week\n                weekday = dow;\n            }\n        }\n        if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n            getParsingFlags(config)._overflowWeeks = true;\n        } else if (weekdayOverflow != null) {\n            getParsingFlags(config)._overflowWeekday = true;\n        } else {\n            temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n            config._a[YEAR] = temp.year;\n            config._dayOfYear = temp.dayOfYear;\n        }\n    }\n\n    // constant that refers to the ISO standard\n    hooks.ISO_8601 = function () {};\n\n    // constant that refers to the RFC 2822 form\n    hooks.RFC_2822 = function () {};\n\n    // date from string and format string\n    function configFromStringAndFormat(config) {\n        // TODO: Move this to another part of the creation flow to prevent circular deps\n        if (config._f === hooks.ISO_8601) {\n            configFromISO(config);\n            return;\n        }\n        if (config._f === hooks.RFC_2822) {\n            configFromRFC2822(config);\n            return;\n        }\n        config._a = [];\n        getParsingFlags(config).empty = true;\n\n        // This array is used to make a Date, either with `new Date` or `Date.UTC`\n        var string = '' + config._i,\n            i,\n            parsedInput,\n            tokens,\n            token,\n            skipped,\n            stringLength = string.length,\n            totalParsedInputLength = 0,\n            era;\n\n        tokens =\n            expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\n        for (i = 0; i < tokens.length; i++) {\n            token = tokens[i];\n            parsedInput = (string.match(getParseRegexForToken(token, config)) ||\n                [])[0];\n            if (parsedInput) {\n                skipped = string.substr(0, string.indexOf(parsedInput));\n                if (skipped.length > 0) {\n                    getParsingFlags(config).unusedInput.push(skipped);\n                }\n                string = string.slice(\n                    string.indexOf(parsedInput) + parsedInput.length\n                );\n                totalParsedInputLength += parsedInput.length;\n            }\n            // don't parse if it's not a known token\n            if (formatTokenFunctions[token]) {\n                if (parsedInput) {\n                    getParsingFlags(config).empty = false;\n                } else {\n                    getParsingFlags(config).unusedTokens.push(token);\n                }\n                addTimeToArrayFromToken(token, parsedInput, config);\n            } else if (config._strict && !parsedInput) {\n                getParsingFlags(config).unusedTokens.push(token);\n            }\n        }\n\n        // add remaining unparsed input length to the string\n        getParsingFlags(config).charsLeftOver =\n            stringLength - totalParsedInputLength;\n        if (string.length > 0) {\n            getParsingFlags(config).unusedInput.push(string);\n        }\n\n        // clear _12h flag if hour is <= 12\n        if (\n            config._a[HOUR] <= 12 &&\n            getParsingFlags(config).bigHour === true &&\n            config._a[HOUR] > 0\n        ) {\n            getParsingFlags(config).bigHour = undefined;\n        }\n\n        getParsingFlags(config).parsedDateParts = config._a.slice(0);\n        getParsingFlags(config).meridiem = config._meridiem;\n        // handle meridiem\n        config._a[HOUR] = meridiemFixWrap(\n            config._locale,\n            config._a[HOUR],\n            config._meridiem\n        );\n\n        // handle era\n        era = getParsingFlags(config).era;\n        if (era !== null) {\n            config._a[YEAR] = config._locale.erasConvertYear(era, config._a[YEAR]);\n        }\n\n        configFromArray(config);\n        checkOverflow(config);\n    }\n\n    function meridiemFixWrap(locale, hour, meridiem) {\n        var isPm;\n\n        if (meridiem == null) {\n            // nothing to do\n            return hour;\n        }\n        if (locale.meridiemHour != null) {\n            return locale.meridiemHour(hour, meridiem);\n        } else if (locale.isPM != null) {\n            // Fallback\n            isPm = locale.isPM(meridiem);\n            if (isPm && hour < 12) {\n                hour += 12;\n            }\n            if (!isPm && hour === 12) {\n                hour = 0;\n            }\n            return hour;\n        } else {\n            // this is not supposed to happen\n            return hour;\n        }\n    }\n\n    // date from string and array of format strings\n    function configFromStringAndArray(config) {\n        var tempConfig,\n            bestMoment,\n            scoreToBeat,\n            i,\n            currentScore,\n            validFormatFound,\n            bestFormatIsValid = false;\n\n        if (config._f.length === 0) {\n            getParsingFlags(config).invalidFormat = true;\n            config._d = new Date(NaN);\n            return;\n        }\n\n        for (i = 0; i < config._f.length; i++) {\n            currentScore = 0;\n            validFormatFound = false;\n            tempConfig = copyConfig({}, config);\n            if (config._useUTC != null) {\n                tempConfig._useUTC = config._useUTC;\n            }\n            tempConfig._f = config._f[i];\n            configFromStringAndFormat(tempConfig);\n\n            if (isValid(tempConfig)) {\n                validFormatFound = true;\n            }\n\n            // if there is any input that was not parsed add a penalty for that format\n            currentScore += getParsingFlags(tempConfig).charsLeftOver;\n\n            //or tokens\n            currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n\n            getParsingFlags(tempConfig).score = currentScore;\n\n            if (!bestFormatIsValid) {\n                if (\n                    scoreToBeat == null ||\n                    currentScore < scoreToBeat ||\n                    validFormatFound\n                ) {\n                    scoreToBeat = currentScore;\n                    bestMoment = tempConfig;\n                    if (validFormatFound) {\n                        bestFormatIsValid = true;\n                    }\n                }\n            } else {\n                if (currentScore < scoreToBeat) {\n                    scoreToBeat = currentScore;\n                    bestMoment = tempConfig;\n                }\n            }\n        }\n\n        extend(config, bestMoment || tempConfig);\n    }\n\n    function configFromObject(config) {\n        if (config._d) {\n            return;\n        }\n\n        var i = normalizeObjectUnits(config._i),\n            dayOrDate = i.day === undefined ? i.date : i.day;\n        config._a = map(\n            [i.year, i.month, dayOrDate, i.hour, i.minute, i.second, i.millisecond],\n            function (obj) {\n                return obj && parseInt(obj, 10);\n            }\n        );\n\n        configFromArray(config);\n    }\n\n    function createFromConfig(config) {\n        var res = new Moment(checkOverflow(prepareConfig(config)));\n        if (res._nextDay) {\n            // Adding is smart enough around DST\n            res.add(1, 'd');\n            res._nextDay = undefined;\n        }\n\n        return res;\n    }\n\n    function prepareConfig(config) {\n        var input = config._i,\n            format = config._f;\n\n        config._locale = config._locale || getLocale(config._l);\n\n        if (input === null || (format === undefined && input === '')) {\n            return createInvalid({ nullInput: true });\n        }\n\n        if (typeof input === 'string') {\n            config._i = input = config._locale.preparse(input);\n        }\n\n        if (isMoment(input)) {\n            return new Moment(checkOverflow(input));\n        } else if (isDate(input)) {\n            config._d = input;\n        } else if (isArray(format)) {\n            configFromStringAndArray(config);\n        } else if (format) {\n            configFromStringAndFormat(config);\n        } else {\n            configFromInput(config);\n        }\n\n        if (!isValid(config)) {\n            config._d = null;\n        }\n\n        return config;\n    }\n\n    function configFromInput(config) {\n        var input = config._i;\n        if (isUndefined(input)) {\n            config._d = new Date(hooks.now());\n        } else if (isDate(input)) {\n            config._d = new Date(input.valueOf());\n        } else if (typeof input === 'string') {\n            configFromString(config);\n        } else if (isArray(input)) {\n            config._a = map(input.slice(0), function (obj) {\n                return parseInt(obj, 10);\n            });\n            configFromArray(config);\n        } else if (isObject(input)) {\n            configFromObject(config);\n        } else if (isNumber(input)) {\n            // from milliseconds\n            config._d = new Date(input);\n        } else {\n            hooks.createFromInputFallback(config);\n        }\n    }\n\n    function createLocalOrUTC(input, format, locale, strict, isUTC) {\n        var c = {};\n\n        if (format === true || format === false) {\n            strict = format;\n            format = undefined;\n        }\n\n        if (locale === true || locale === false) {\n            strict = locale;\n            locale = undefined;\n        }\n\n        if (\n            (isObject(input) && isObjectEmpty(input)) ||\n            (isArray(input) && input.length === 0)\n        ) {\n            input = undefined;\n        }\n        // object construction must be done this way.\n        // https://github.com/moment/moment/issues/1423\n        c._isAMomentObject = true;\n        c._useUTC = c._isUTC = isUTC;\n        c._l = locale;\n        c._i = input;\n        c._f = format;\n        c._strict = strict;\n\n        return createFromConfig(c);\n    }\n\n    function createLocal(input, format, locale, strict) {\n        return createLocalOrUTC(input, format, locale, strict, false);\n    }\n\n    var prototypeMin = deprecate(\n            'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',\n            function () {\n                var other = createLocal.apply(null, arguments);\n                if (this.isValid() && other.isValid()) {\n                    return other < this ? this : other;\n                } else {\n                    return createInvalid();\n                }\n            }\n        ),\n        prototypeMax = deprecate(\n            'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',\n            function () {\n                var other = createLocal.apply(null, arguments);\n                if (this.isValid() && other.isValid()) {\n                    return other > this ? this : other;\n                } else {\n                    return createInvalid();\n                }\n            }\n        );\n\n    // Pick a moment m from moments so that m[fn](other) is true for all\n    // other. This relies on the function fn to be transitive.\n    //\n    // moments should either be an array of moment objects or an array, whose\n    // first element is an array of moment objects.\n    function pickBy(fn, moments) {\n        var res, i;\n        if (moments.length === 1 && isArray(moments[0])) {\n            moments = moments[0];\n        }\n        if (!moments.length) {\n            return createLocal();\n        }\n        res = moments[0];\n        for (i = 1; i < moments.length; ++i) {\n            if (!moments[i].isValid() || moments[i][fn](res)) {\n                res = moments[i];\n            }\n        }\n        return res;\n    }\n\n    // TODO: Use [].sort instead?\n    function min() {\n        var args = [].slice.call(arguments, 0);\n\n        return pickBy('isBefore', args);\n    }\n\n    function max() {\n        var args = [].slice.call(arguments, 0);\n\n        return pickBy('isAfter', args);\n    }\n\n    var now = function () {\n        return Date.now ? Date.now() : +new Date();\n    };\n\n    var ordering = [\n        'year',\n        'quarter',\n        'month',\n        'week',\n        'day',\n        'hour',\n        'minute',\n        'second',\n        'millisecond',\n    ];\n\n    function isDurationValid(m) {\n        var key,\n            unitHasDecimal = false,\n            i;\n        for (key in m) {\n            if (\n                hasOwnProp(m, key) &&\n                !(\n                    indexOf.call(ordering, key) !== -1 &&\n                    (m[key] == null || !isNaN(m[key]))\n                )\n            ) {\n                return false;\n            }\n        }\n\n        for (i = 0; i < ordering.length; ++i) {\n            if (m[ordering[i]]) {\n                if (unitHasDecimal) {\n                    return false; // only allow non-integers for smallest unit\n                }\n                if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {\n                    unitHasDecimal = true;\n                }\n            }\n        }\n\n        return true;\n    }\n\n    function isValid$1() {\n        return this._isValid;\n    }\n\n    function createInvalid$1() {\n        return createDuration(NaN);\n    }\n\n    function Duration(duration) {\n        var normalizedInput = normalizeObjectUnits(duration),\n            years = normalizedInput.year || 0,\n            quarters = normalizedInput.quarter || 0,\n            months = normalizedInput.month || 0,\n            weeks = normalizedInput.week || normalizedInput.isoWeek || 0,\n            days = normalizedInput.day || 0,\n            hours = normalizedInput.hour || 0,\n            minutes = normalizedInput.minute || 0,\n            seconds = normalizedInput.second || 0,\n            milliseconds = normalizedInput.millisecond || 0;\n\n        this._isValid = isDurationValid(normalizedInput);\n\n        // representation for dateAddRemove\n        this._milliseconds =\n            +milliseconds +\n            seconds * 1e3 + // 1000\n            minutes * 6e4 + // 1000 * 60\n            hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n        // Because of dateAddRemove treats 24 hours as different from a\n        // day when working around DST, we need to store them separately\n        this._days = +days + weeks * 7;\n        // It is impossible to translate months into days without knowing\n        // which months you are are talking about, so we have to store\n        // it separately.\n        this._months = +months + quarters * 3 + years * 12;\n\n        this._data = {};\n\n        this._locale = getLocale();\n\n        this._bubble();\n    }\n\n    function isDuration(obj) {\n        return obj instanceof Duration;\n    }\n\n    function absRound(number) {\n        if (number < 0) {\n            return Math.round(-1 * number) * -1;\n        } else {\n            return Math.round(number);\n        }\n    }\n\n    // compare two arrays, return the number of differences\n    function compareArrays(array1, array2, dontConvert) {\n        var len = Math.min(array1.length, array2.length),\n            lengthDiff = Math.abs(array1.length - array2.length),\n            diffs = 0,\n            i;\n        for (i = 0; i < len; i++) {\n            if (\n                (dontConvert && array1[i] !== array2[i]) ||\n                (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))\n            ) {\n                diffs++;\n            }\n        }\n        return diffs + lengthDiff;\n    }\n\n    // FORMATTING\n\n    function offset(token, separator) {\n        addFormatToken(token, 0, 0, function () {\n            var offset = this.utcOffset(),\n                sign = '+';\n            if (offset < 0) {\n                offset = -offset;\n                sign = '-';\n            }\n            return (\n                sign +\n                zeroFill(~~(offset / 60), 2) +\n                separator +\n                zeroFill(~~offset % 60, 2)\n            );\n        });\n    }\n\n    offset('Z', ':');\n    offset('ZZ', '');\n\n    // PARSING\n\n    addRegexToken('Z', matchShortOffset);\n    addRegexToken('ZZ', matchShortOffset);\n    addParseToken(['Z', 'ZZ'], function (input, array, config) {\n        config._useUTC = true;\n        config._tzm = offsetFromString(matchShortOffset, input);\n    });\n\n    // HELPERS\n\n    // timezone chunker\n    // '+10:00' > ['10',  '00']\n    // '-1530'  > ['-15', '30']\n    var chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\n    function offsetFromString(matcher, string) {\n        var matches = (string || '').match(matcher),\n            chunk,\n            parts,\n            minutes;\n\n        if (matches === null) {\n            return null;\n        }\n\n        chunk = matches[matches.length - 1] || [];\n        parts = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n        minutes = +(parts[1] * 60) + toInt(parts[2]);\n\n        return minutes === 0 ? 0 : parts[0] === '+' ? minutes : -minutes;\n    }\n\n    // Return a moment from input, that is local/utc/zone equivalent to model.\n    function cloneWithOffset(input, model) {\n        var res, diff;\n        if (model._isUTC) {\n            res = model.clone();\n            diff =\n                (isMoment(input) || isDate(input)\n                    ? input.valueOf()\n                    : createLocal(input).valueOf()) - res.valueOf();\n            // Use low-level api, because this fn is low-level api.\n            res._d.setTime(res._d.valueOf() + diff);\n            hooks.updateOffset(res, false);\n            return res;\n        } else {\n            return createLocal(input).local();\n        }\n    }\n\n    function getDateOffset(m) {\n        // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n        // https://github.com/moment/moment/pull/1871\n        return -Math.round(m._d.getTimezoneOffset());\n    }\n\n    // HOOKS\n\n    // This function will be called whenever a moment is mutated.\n    // It is intended to keep the offset in sync with the timezone.\n    hooks.updateOffset = function () {};\n\n    // MOMENTS\n\n    // keepLocalTime = true means only change the timezone, without\n    // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n    // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n    // +0200, so we adjust the time as needed, to be valid.\n    //\n    // Keeping the time actually adds/subtracts (one hour)\n    // from the actual represented time. That is why we call updateOffset\n    // a second time. In case it wants us to change the offset again\n    // _changeInProgress == true case, then we have to adjust, because\n    // there is no such time in the given timezone.\n    function getSetOffset(input, keepLocalTime, keepMinutes) {\n        var offset = this._offset || 0,\n            localAdjust;\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        if (input != null) {\n            if (typeof input === 'string') {\n                input = offsetFromString(matchShortOffset, input);\n                if (input === null) {\n                    return this;\n                }\n            } else if (Math.abs(input) < 16 && !keepMinutes) {\n                input = input * 60;\n            }\n            if (!this._isUTC && keepLocalTime) {\n                localAdjust = getDateOffset(this);\n            }\n            this._offset = input;\n            this._isUTC = true;\n            if (localAdjust != null) {\n                this.add(localAdjust, 'm');\n            }\n            if (offset !== input) {\n                if (!keepLocalTime || this._changeInProgress) {\n                    addSubtract(\n                        this,\n                        createDuration(input - offset, 'm'),\n                        1,\n                        false\n                    );\n                } else if (!this._changeInProgress) {\n                    this._changeInProgress = true;\n                    hooks.updateOffset(this, true);\n                    this._changeInProgress = null;\n                }\n            }\n            return this;\n        } else {\n            return this._isUTC ? offset : getDateOffset(this);\n        }\n    }\n\n    function getSetZone(input, keepLocalTime) {\n        if (input != null) {\n            if (typeof input !== 'string') {\n                input = -input;\n            }\n\n            this.utcOffset(input, keepLocalTime);\n\n            return this;\n        } else {\n            return -this.utcOffset();\n        }\n    }\n\n    function setOffsetToUTC(keepLocalTime) {\n        return this.utcOffset(0, keepLocalTime);\n    }\n\n    function setOffsetToLocal(keepLocalTime) {\n        if (this._isUTC) {\n            this.utcOffset(0, keepLocalTime);\n            this._isUTC = false;\n\n            if (keepLocalTime) {\n                this.subtract(getDateOffset(this), 'm');\n            }\n        }\n        return this;\n    }\n\n    function setOffsetToParsedOffset() {\n        if (this._tzm != null) {\n            this.utcOffset(this._tzm, false, true);\n        } else if (typeof this._i === 'string') {\n            var tZone = offsetFromString(matchOffset, this._i);\n            if (tZone != null) {\n                this.utcOffset(tZone);\n            } else {\n                this.utcOffset(0, true);\n            }\n        }\n        return this;\n    }\n\n    function hasAlignedHourOffset(input) {\n        if (!this.isValid()) {\n            return false;\n        }\n        input = input ? createLocal(input).utcOffset() : 0;\n\n        return (this.utcOffset() - input) % 60 === 0;\n    }\n\n    function isDaylightSavingTime() {\n        return (\n            this.utcOffset() > this.clone().month(0).utcOffset() ||\n            this.utcOffset() > this.clone().month(5).utcOffset()\n        );\n    }\n\n    function isDaylightSavingTimeShifted() {\n        if (!isUndefined(this._isDSTShifted)) {\n            return this._isDSTShifted;\n        }\n\n        var c = {},\n            other;\n\n        copyConfig(c, this);\n        c = prepareConfig(c);\n\n        if (c._a) {\n            other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n            this._isDSTShifted =\n                this.isValid() && compareArrays(c._a, other.toArray()) > 0;\n        } else {\n            this._isDSTShifted = false;\n        }\n\n        return this._isDSTShifted;\n    }\n\n    function isLocal() {\n        return this.isValid() ? !this._isUTC : false;\n    }\n\n    function isUtcOffset() {\n        return this.isValid() ? this._isUTC : false;\n    }\n\n    function isUtc() {\n        return this.isValid() ? this._isUTC && this._offset === 0 : false;\n    }\n\n    // ASP.NET json date format regex\n    var aspNetRegex = /^(-|\\+)?(?:(\\d*)[. ])?(\\d+):(\\d+)(?::(\\d+)(\\.\\d*)?)?$/,\n        // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n        // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n        // and further modified to allow for strings containing both week and day\n        isoRegex = /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n\n    function createDuration(input, key) {\n        var duration = input,\n            // matching against regexp is expensive, do it on demand\n            match = null,\n            sign,\n            ret,\n            diffRes;\n\n        if (isDuration(input)) {\n            duration = {\n                ms: input._milliseconds,\n                d: input._days,\n                M: input._months,\n            };\n        } else if (isNumber(input) || !isNaN(+input)) {\n            duration = {};\n            if (key) {\n                duration[key] = +input;\n            } else {\n                duration.milliseconds = +input;\n            }\n        } else if ((match = aspNetRegex.exec(input))) {\n            sign = match[1] === '-' ? -1 : 1;\n            duration = {\n                y: 0,\n                d: toInt(match[DATE]) * sign,\n                h: toInt(match[HOUR]) * sign,\n                m: toInt(match[MINUTE]) * sign,\n                s: toInt(match[SECOND]) * sign,\n                ms: toInt(absRound(match[MILLISECOND] * 1000)) * sign, // the millisecond decimal point is included in the match\n            };\n        } else if ((match = isoRegex.exec(input))) {\n            sign = match[1] === '-' ? -1 : 1;\n            duration = {\n                y: parseIso(match[2], sign),\n                M: parseIso(match[3], sign),\n                w: parseIso(match[4], sign),\n                d: parseIso(match[5], sign),\n                h: parseIso(match[6], sign),\n                m: parseIso(match[7], sign),\n                s: parseIso(match[8], sign),\n            };\n        } else if (duration == null) {\n            // checks for null or undefined\n            duration = {};\n        } else if (\n            typeof duration === 'object' &&\n            ('from' in duration || 'to' in duration)\n        ) {\n            diffRes = momentsDifference(\n                createLocal(duration.from),\n                createLocal(duration.to)\n            );\n\n            duration = {};\n            duration.ms = diffRes.milliseconds;\n            duration.M = diffRes.months;\n        }\n\n        ret = new Duration(duration);\n\n        if (isDuration(input) && hasOwnProp(input, '_locale')) {\n            ret._locale = input._locale;\n        }\n\n        if (isDuration(input) && hasOwnProp(input, '_isValid')) {\n            ret._isValid = input._isValid;\n        }\n\n        return ret;\n    }\n\n    createDuration.fn = Duration.prototype;\n    createDuration.invalid = createInvalid$1;\n\n    function parseIso(inp, sign) {\n        // We'd normally use ~~inp for this, but unfortunately it also\n        // converts floats to ints.\n        // inp may be undefined, so careful calling replace on it.\n        var res = inp && parseFloat(inp.replace(',', '.'));\n        // apply sign while we're at it\n        return (isNaN(res) ? 0 : res) * sign;\n    }\n\n    function positiveMomentsDifference(base, other) {\n        var res = {};\n\n        res.months =\n            other.month() - base.month() + (other.year() - base.year()) * 12;\n        if (base.clone().add(res.months, 'M').isAfter(other)) {\n            --res.months;\n        }\n\n        res.milliseconds = +other - +base.clone().add(res.months, 'M');\n\n        return res;\n    }\n\n    function momentsDifference(base, other) {\n        var res;\n        if (!(base.isValid() && other.isValid())) {\n            return { milliseconds: 0, months: 0 };\n        }\n\n        other = cloneWithOffset(other, base);\n        if (base.isBefore(other)) {\n            res = positiveMomentsDifference(base, other);\n        } else {\n            res = positiveMomentsDifference(other, base);\n            res.milliseconds = -res.milliseconds;\n            res.months = -res.months;\n        }\n\n        return res;\n    }\n\n    // TODO: remove 'name' arg after deprecation is removed\n    function createAdder(direction, name) {\n        return function (val, period) {\n            var dur, tmp;\n            //invert the arguments, but complain about it\n            if (period !== null && !isNaN(+period)) {\n                deprecateSimple(\n                    name,\n                    'moment().' +\n                        name +\n                        '(period, number) is deprecated. Please use moment().' +\n                        name +\n                        '(number, period). ' +\n                        'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.'\n                );\n                tmp = val;\n                val = period;\n                period = tmp;\n            }\n\n            dur = createDuration(val, period);\n            addSubtract(this, dur, direction);\n            return this;\n        };\n    }\n\n    function addSubtract(mom, duration, isAdding, updateOffset) {\n        var milliseconds = duration._milliseconds,\n            days = absRound(duration._days),\n            months = absRound(duration._months);\n\n        if (!mom.isValid()) {\n            // No op\n            return;\n        }\n\n        updateOffset = updateOffset == null ? true : updateOffset;\n\n        if (months) {\n            setMonth(mom, get(mom, 'Month') + months * isAdding);\n        }\n        if (days) {\n            set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);\n        }\n        if (milliseconds) {\n            mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\n        }\n        if (updateOffset) {\n            hooks.updateOffset(mom, days || months);\n        }\n    }\n\n    var add = createAdder(1, 'add'),\n        subtract = createAdder(-1, 'subtract');\n\n    function isString(input) {\n        return typeof input === 'string' || input instanceof String;\n    }\n\n    // type MomentInput = Moment | Date | string | number | (number | string)[] | MomentInputObject | void; // null | undefined\n    function isMomentInput(input) {\n        return (\n            isMoment(input) ||\n            isDate(input) ||\n            isString(input) ||\n            isNumber(input) ||\n            isNumberOrStringArray(input) ||\n            isMomentInputObject(input) ||\n            input === null ||\n            input === undefined\n        );\n    }\n\n    function isMomentInputObject(input) {\n        var objectTest = isObject(input) && !isObjectEmpty(input),\n            propertyTest = false,\n            properties = [\n                'years',\n                'year',\n                'y',\n                'months',\n                'month',\n                'M',\n                'days',\n                'day',\n                'd',\n                'dates',\n                'date',\n                'D',\n                'hours',\n                'hour',\n                'h',\n                'minutes',\n                'minute',\n                'm',\n                'seconds',\n                'second',\n                's',\n                'milliseconds',\n                'millisecond',\n                'ms',\n            ],\n            i,\n            property;\n\n        for (i = 0; i < properties.length; i += 1) {\n            property = properties[i];\n            propertyTest = propertyTest || hasOwnProp(input, property);\n        }\n\n        return objectTest && propertyTest;\n    }\n\n    function isNumberOrStringArray(input) {\n        var arrayTest = isArray(input),\n            dataTypeTest = false;\n        if (arrayTest) {\n            dataTypeTest =\n                input.filter(function (item) {\n                    return !isNumber(item) && isString(input);\n                }).length === 0;\n        }\n        return arrayTest && dataTypeTest;\n    }\n\n    function isCalendarSpec(input) {\n        var objectTest = isObject(input) && !isObjectEmpty(input),\n            propertyTest = false,\n            properties = [\n                'sameDay',\n                'nextDay',\n                'lastDay',\n                'nextWeek',\n                'lastWeek',\n                'sameElse',\n            ],\n            i,\n            property;\n\n        for (i = 0; i < properties.length; i += 1) {\n            property = properties[i];\n            propertyTest = propertyTest || hasOwnProp(input, property);\n        }\n\n        return objectTest && propertyTest;\n    }\n\n    function getCalendarFormat(myMoment, now) {\n        var diff = myMoment.diff(now, 'days', true);\n        return diff < -6\n            ? 'sameElse'\n            : diff < -1\n            ? 'lastWeek'\n            : diff < 0\n            ? 'lastDay'\n            : diff < 1\n            ? 'sameDay'\n            : diff < 2\n            ? 'nextDay'\n            : diff < 7\n            ? 'nextWeek'\n            : 'sameElse';\n    }\n\n    function calendar$1(time, formats) {\n        // Support for single parameter, formats only overload to the calendar function\n        if (arguments.length === 1) {\n            if (isMomentInput(arguments[0])) {\n                time = arguments[0];\n                formats = undefined;\n            } else if (isCalendarSpec(arguments[0])) {\n                formats = arguments[0];\n                time = undefined;\n            }\n        }\n        // We want to compare the start of today, vs this.\n        // Getting start-of-today depends on whether we're local/utc/offset or not.\n        var now = time || createLocal(),\n            sod = cloneWithOffset(now, this).startOf('day'),\n            format = hooks.calendarFormat(this, sod) || 'sameElse',\n            output =\n                formats &&\n                (isFunction(formats[format])\n                    ? formats[format].call(this, now)\n                    : formats[format]);\n\n        return this.format(\n            output || this.localeData().calendar(format, this, createLocal(now))\n        );\n    }\n\n    function clone() {\n        return new Moment(this);\n    }\n\n    function isAfter(input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input);\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(units) || 'millisecond';\n        if (units === 'millisecond') {\n            return this.valueOf() > localInput.valueOf();\n        } else {\n            return localInput.valueOf() < this.clone().startOf(units).valueOf();\n        }\n    }\n\n    function isBefore(input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input);\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(units) || 'millisecond';\n        if (units === 'millisecond') {\n            return this.valueOf() < localInput.valueOf();\n        } else {\n            return this.clone().endOf(units).valueOf() < localInput.valueOf();\n        }\n    }\n\n    function isBetween(from, to, units, inclusivity) {\n        var localFrom = isMoment(from) ? from : createLocal(from),\n            localTo = isMoment(to) ? to : createLocal(to);\n        if (!(this.isValid() && localFrom.isValid() && localTo.isValid())) {\n            return false;\n        }\n        inclusivity = inclusivity || '()';\n        return (\n            (inclusivity[0] === '('\n                ? this.isAfter(localFrom, units)\n                : !this.isBefore(localFrom, units)) &&\n            (inclusivity[1] === ')'\n                ? this.isBefore(localTo, units)\n                : !this.isAfter(localTo, units))\n        );\n    }\n\n    function isSame(input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input),\n            inputMs;\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(units) || 'millisecond';\n        if (units === 'millisecond') {\n            return this.valueOf() === localInput.valueOf();\n        } else {\n            inputMs = localInput.valueOf();\n            return (\n                this.clone().startOf(units).valueOf() <= inputMs &&\n                inputMs <= this.clone().endOf(units).valueOf()\n            );\n        }\n    }\n\n    function isSameOrAfter(input, units) {\n        return this.isSame(input, units) || this.isAfter(input, units);\n    }\n\n    function isSameOrBefore(input, units) {\n        return this.isSame(input, units) || this.isBefore(input, units);\n    }\n\n    function diff(input, units, asFloat) {\n        var that, zoneDelta, output;\n\n        if (!this.isValid()) {\n            return NaN;\n        }\n\n        that = cloneWithOffset(input, this);\n\n        if (!that.isValid()) {\n            return NaN;\n        }\n\n        zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n\n        units = normalizeUnits(units);\n\n        switch (units) {\n            case 'year':\n                output = monthDiff(this, that) / 12;\n                break;\n            case 'month':\n                output = monthDiff(this, that);\n                break;\n            case 'quarter':\n                output = monthDiff(this, that) / 3;\n                break;\n            case 'second':\n                output = (this - that) / 1e3;\n                break; // 1000\n            case 'minute':\n                output = (this - that) / 6e4;\n                break; // 1000 * 60\n            case 'hour':\n                output = (this - that) / 36e5;\n                break; // 1000 * 60 * 60\n            case 'day':\n                output = (this - that - zoneDelta) / 864e5;\n                break; // 1000 * 60 * 60 * 24, negate dst\n            case 'week':\n                output = (this - that - zoneDelta) / 6048e5;\n                break; // 1000 * 60 * 60 * 24 * 7, negate dst\n            default:\n                output = this - that;\n        }\n\n        return asFloat ? output : absFloor(output);\n    }\n\n    function monthDiff(a, b) {\n        if (a.date() < b.date()) {\n            // end-of-month calculations work correct when the start month has more\n            // days than the end month.\n            return -monthDiff(b, a);\n        }\n        // difference in months\n        var wholeMonthDiff = (b.year() - a.year()) * 12 + (b.month() - a.month()),\n            // b is in (anchor - 1 month, anchor + 1 month)\n            anchor = a.clone().add(wholeMonthDiff, 'months'),\n            anchor2,\n            adjust;\n\n        if (b - anchor < 0) {\n            anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');\n            // linear across the month\n            adjust = (b - anchor) / (anchor - anchor2);\n        } else {\n            anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');\n            // linear across the month\n            adjust = (b - anchor) / (anchor2 - anchor);\n        }\n\n        //check for negative zero, return zero if negative zero\n        return -(wholeMonthDiff + adjust) || 0;\n    }\n\n    hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\n    hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\n\n    function toString() {\n        return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n    }\n\n    function toISOString(keepOffset) {\n        if (!this.isValid()) {\n            return null;\n        }\n        var utc = keepOffset !== true,\n            m = utc ? this.clone().utc() : this;\n        if (m.year() < 0 || m.year() > 9999) {\n            return formatMoment(\n                m,\n                utc\n                    ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]'\n                    : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ'\n            );\n        }\n        if (isFunction(Date.prototype.toISOString)) {\n            // native implementation is ~50x faster, use it when we can\n            if (utc) {\n                return this.toDate().toISOString();\n            } else {\n                return new Date(this.valueOf() + this.utcOffset() * 60 * 1000)\n                    .toISOString()\n                    .replace('Z', formatMoment(m, 'Z'));\n            }\n        }\n        return formatMoment(\n            m,\n            utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ'\n        );\n    }\n\n    /**\n     * Return a human readable representation of a moment that can\n     * also be evaluated to get a new moment which is the same\n     *\n     * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\n     */\n    function inspect() {\n        if (!this.isValid()) {\n            return 'moment.invalid(/* ' + this._i + ' */)';\n        }\n        var func = 'moment',\n            zone = '',\n            prefix,\n            year,\n            datetime,\n            suffix;\n        if (!this.isLocal()) {\n            func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\n            zone = 'Z';\n        }\n        prefix = '[' + func + '(\"]';\n        year = 0 <= this.year() && this.year() <= 9999 ? 'YYYY' : 'YYYYYY';\n        datetime = '-MM-DD[T]HH:mm:ss.SSS';\n        suffix = zone + '[\")]';\n\n        return this.format(prefix + year + datetime + suffix);\n    }\n\n    function format(inputString) {\n        if (!inputString) {\n            inputString = this.isUtc()\n                ? hooks.defaultFormatUtc\n                : hooks.defaultFormat;\n        }\n        var output = formatMoment(this, inputString);\n        return this.localeData().postformat(output);\n    }\n\n    function from(time, withoutSuffix) {\n        if (\n            this.isValid() &&\n            ((isMoment(time) && time.isValid()) || createLocal(time).isValid())\n        ) {\n            return createDuration({ to: this, from: time })\n                .locale(this.locale())\n                .humanize(!withoutSuffix);\n        } else {\n            return this.localeData().invalidDate();\n        }\n    }\n\n    function fromNow(withoutSuffix) {\n        return this.from(createLocal(), withoutSuffix);\n    }\n\n    function to(time, withoutSuffix) {\n        if (\n            this.isValid() &&\n            ((isMoment(time) && time.isValid()) || createLocal(time).isValid())\n        ) {\n            return createDuration({ from: this, to: time })\n                .locale(this.locale())\n                .humanize(!withoutSuffix);\n        } else {\n            return this.localeData().invalidDate();\n        }\n    }\n\n    function toNow(withoutSuffix) {\n        return this.to(createLocal(), withoutSuffix);\n    }\n\n    // If passed a locale key, it will set the locale for this\n    // instance.  Otherwise, it will return the locale configuration\n    // variables for this instance.\n    function locale(key) {\n        var newLocaleData;\n\n        if (key === undefined) {\n            return this._locale._abbr;\n        } else {\n            newLocaleData = getLocale(key);\n            if (newLocaleData != null) {\n                this._locale = newLocaleData;\n            }\n            return this;\n        }\n    }\n\n    var lang = deprecate(\n        'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',\n        function (key) {\n            if (key === undefined) {\n                return this.localeData();\n            } else {\n                return this.locale(key);\n            }\n        }\n    );\n\n    function localeData() {\n        return this._locale;\n    }\n\n    var MS_PER_SECOND = 1000,\n        MS_PER_MINUTE = 60 * MS_PER_SECOND,\n        MS_PER_HOUR = 60 * MS_PER_MINUTE,\n        MS_PER_400_YEARS = (365 * 400 + 97) * 24 * MS_PER_HOUR;\n\n    // actual modulo - handles negative numbers (for dates before 1970):\n    function mod$1(dividend, divisor) {\n        return ((dividend % divisor) + divisor) % divisor;\n    }\n\n    function localStartOfDate(y, m, d) {\n        // the date constructor remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) {\n            // preserve leap years using a full 400 year cycle, then reset\n            return new Date(y + 400, m, d) - MS_PER_400_YEARS;\n        } else {\n            return new Date(y, m, d).valueOf();\n        }\n    }\n\n    function utcStartOfDate(y, m, d) {\n        // Date.UTC remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) {\n            // preserve leap years using a full 400 year cycle, then reset\n            return Date.UTC(y + 400, m, d) - MS_PER_400_YEARS;\n        } else {\n            return Date.UTC(y, m, d);\n        }\n    }\n\n    function startOf(units) {\n        var time, startOfDate;\n        units = normalizeUnits(units);\n        if (units === undefined || units === 'millisecond' || !this.isValid()) {\n            return this;\n        }\n\n        startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n        switch (units) {\n            case 'year':\n                time = startOfDate(this.year(), 0, 1);\n                break;\n            case 'quarter':\n                time = startOfDate(\n                    this.year(),\n                    this.month() - (this.month() % 3),\n                    1\n                );\n                break;\n            case 'month':\n                time = startOfDate(this.year(), this.month(), 1);\n                break;\n            case 'week':\n                time = startOfDate(\n                    this.year(),\n                    this.month(),\n                    this.date() - this.weekday()\n                );\n                break;\n            case 'isoWeek':\n                time = startOfDate(\n                    this.year(),\n                    this.month(),\n                    this.date() - (this.isoWeekday() - 1)\n                );\n                break;\n            case 'day':\n            case 'date':\n                time = startOfDate(this.year(), this.month(), this.date());\n                break;\n            case 'hour':\n                time = this._d.valueOf();\n                time -= mod$1(\n                    time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE),\n                    MS_PER_HOUR\n                );\n                break;\n            case 'minute':\n                time = this._d.valueOf();\n                time -= mod$1(time, MS_PER_MINUTE);\n                break;\n            case 'second':\n                time = this._d.valueOf();\n                time -= mod$1(time, MS_PER_SECOND);\n                break;\n        }\n\n        this._d.setTime(time);\n        hooks.updateOffset(this, true);\n        return this;\n    }\n\n    function endOf(units) {\n        var time, startOfDate;\n        units = normalizeUnits(units);\n        if (units === undefined || units === 'millisecond' || !this.isValid()) {\n            return this;\n        }\n\n        startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n        switch (units) {\n            case 'year':\n                time = startOfDate(this.year() + 1, 0, 1) - 1;\n                break;\n            case 'quarter':\n                time =\n                    startOfDate(\n                        this.year(),\n                        this.month() - (this.month() % 3) + 3,\n                        1\n                    ) - 1;\n                break;\n            case 'month':\n                time = startOfDate(this.year(), this.month() + 1, 1) - 1;\n                break;\n            case 'week':\n                time =\n                    startOfDate(\n                        this.year(),\n                        this.month(),\n                        this.date() - this.weekday() + 7\n                    ) - 1;\n                break;\n            case 'isoWeek':\n                time =\n                    startOfDate(\n                        this.year(),\n                        this.month(),\n                        this.date() - (this.isoWeekday() - 1) + 7\n                    ) - 1;\n                break;\n            case 'day':\n            case 'date':\n                time = startOfDate(this.year(), this.month(), this.date() + 1) - 1;\n                break;\n            case 'hour':\n                time = this._d.valueOf();\n                time +=\n                    MS_PER_HOUR -\n                    mod$1(\n                        time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE),\n                        MS_PER_HOUR\n                    ) -\n                    1;\n                break;\n            case 'minute':\n                time = this._d.valueOf();\n                time += MS_PER_MINUTE - mod$1(time, MS_PER_MINUTE) - 1;\n                break;\n            case 'second':\n                time = this._d.valueOf();\n                time += MS_PER_SECOND - mod$1(time, MS_PER_SECOND) - 1;\n                break;\n        }\n\n        this._d.setTime(time);\n        hooks.updateOffset(this, true);\n        return this;\n    }\n\n    function valueOf() {\n        return this._d.valueOf() - (this._offset || 0) * 60000;\n    }\n\n    function unix() {\n        return Math.floor(this.valueOf() / 1000);\n    }\n\n    function toDate() {\n        return new Date(this.valueOf());\n    }\n\n    function toArray() {\n        var m = this;\n        return [\n            m.year(),\n            m.month(),\n            m.date(),\n            m.hour(),\n            m.minute(),\n            m.second(),\n            m.millisecond(),\n        ];\n    }\n\n    function toObject() {\n        var m = this;\n        return {\n            years: m.year(),\n            months: m.month(),\n            date: m.date(),\n            hours: m.hours(),\n            minutes: m.minutes(),\n            seconds: m.seconds(),\n            milliseconds: m.milliseconds(),\n        };\n    }\n\n    function toJSON() {\n        // new Date(NaN).toJSON() === null\n        return this.isValid() ? this.toISOString() : null;\n    }\n\n    function isValid$2() {\n        return isValid(this);\n    }\n\n    function parsingFlags() {\n        return extend({}, getParsingFlags(this));\n    }\n\n    function invalidAt() {\n        return getParsingFlags(this).overflow;\n    }\n\n    function creationData() {\n        return {\n            input: this._i,\n            format: this._f,\n            locale: this._locale,\n            isUTC: this._isUTC,\n            strict: this._strict,\n        };\n    }\n\n    addFormatToken('N', 0, 0, 'eraAbbr');\n    addFormatToken('NN', 0, 0, 'eraAbbr');\n    addFormatToken('NNN', 0, 0, 'eraAbbr');\n    addFormatToken('NNNN', 0, 0, 'eraName');\n    addFormatToken('NNNNN', 0, 0, 'eraNarrow');\n\n    addFormatToken('y', ['y', 1], 'yo', 'eraYear');\n    addFormatToken('y', ['yy', 2], 0, 'eraYear');\n    addFormatToken('y', ['yyy', 3], 0, 'eraYear');\n    addFormatToken('y', ['yyyy', 4], 0, 'eraYear');\n\n    addRegexToken('N', matchEraAbbr);\n    addRegexToken('NN', matchEraAbbr);\n    addRegexToken('NNN', matchEraAbbr);\n    addRegexToken('NNNN', matchEraName);\n    addRegexToken('NNNNN', matchEraNarrow);\n\n    addParseToken(['N', 'NN', 'NNN', 'NNNN', 'NNNNN'], function (\n        input,\n        array,\n        config,\n        token\n    ) {\n        var era = config._locale.erasParse(input, token, config._strict);\n        if (era) {\n            getParsingFlags(config).era = era;\n        } else {\n            getParsingFlags(config).invalidEra = input;\n        }\n    });\n\n    addRegexToken('y', matchUnsigned);\n    addRegexToken('yy', matchUnsigned);\n    addRegexToken('yyy', matchUnsigned);\n    addRegexToken('yyyy', matchUnsigned);\n    addRegexToken('yo', matchEraYearOrdinal);\n\n    addParseToken(['y', 'yy', 'yyy', 'yyyy'], YEAR);\n    addParseToken(['yo'], function (input, array, config, token) {\n        var match;\n        if (config._locale._eraYearOrdinalRegex) {\n            match = input.match(config._locale._eraYearOrdinalRegex);\n        }\n\n        if (config._locale.eraYearOrdinalParse) {\n            array[YEAR] = config._locale.eraYearOrdinalParse(input, match);\n        } else {\n            array[YEAR] = parseInt(input, 10);\n        }\n    });\n\n    function localeEras(m, format) {\n        var i,\n            l,\n            date,\n            eras = this._eras || getLocale('en')._eras;\n        for (i = 0, l = eras.length; i < l; ++i) {\n            switch (typeof eras[i].since) {\n                case 'string':\n                    // truncate time\n                    date = hooks(eras[i].since).startOf('day');\n                    eras[i].since = date.valueOf();\n                    break;\n            }\n\n            switch (typeof eras[i].until) {\n                case 'undefined':\n                    eras[i].until = +Infinity;\n                    break;\n                case 'string':\n                    // truncate time\n                    date = hooks(eras[i].until).startOf('day').valueOf();\n                    eras[i].until = date.valueOf();\n                    break;\n            }\n        }\n        return eras;\n    }\n\n    function localeErasParse(eraName, format, strict) {\n        var i,\n            l,\n            eras = this.eras(),\n            name,\n            abbr,\n            narrow;\n        eraName = eraName.toUpperCase();\n\n        for (i = 0, l = eras.length; i < l; ++i) {\n            name = eras[i].name.toUpperCase();\n            abbr = eras[i].abbr.toUpperCase();\n            narrow = eras[i].narrow.toUpperCase();\n\n            if (strict) {\n                switch (format) {\n                    case 'N':\n                    case 'NN':\n                    case 'NNN':\n                        if (abbr === eraName) {\n                            return eras[i];\n                        }\n                        break;\n\n                    case 'NNNN':\n                        if (name === eraName) {\n                            return eras[i];\n                        }\n                        break;\n\n                    case 'NNNNN':\n                        if (narrow === eraName) {\n                            return eras[i];\n                        }\n                        break;\n                }\n            } else if ([name, abbr, narrow].indexOf(eraName) >= 0) {\n                return eras[i];\n            }\n        }\n    }\n\n    function localeErasConvertYear(era, year) {\n        var dir = era.since <= era.until ? +1 : -1;\n        if (year === undefined) {\n            return hooks(era.since).year();\n        } else {\n            return hooks(era.since).year() + (year - era.offset) * dir;\n        }\n    }\n\n    function getEraName() {\n        var i,\n            l,\n            val,\n            eras = this.localeData().eras();\n        for (i = 0, l = eras.length; i < l; ++i) {\n            // truncate time\n            val = this.startOf('day').valueOf();\n\n            if (eras[i].since <= val && val <= eras[i].until) {\n                return eras[i].name;\n            }\n            if (eras[i].until <= val && val <= eras[i].since) {\n                return eras[i].name;\n            }\n        }\n\n        return '';\n    }\n\n    function getEraNarrow() {\n        var i,\n            l,\n            val,\n            eras = this.localeData().eras();\n        for (i = 0, l = eras.length; i < l; ++i) {\n            // truncate time\n            val = this.startOf('day').valueOf();\n\n            if (eras[i].since <= val && val <= eras[i].until) {\n                return eras[i].narrow;\n            }\n            if (eras[i].until <= val && val <= eras[i].since) {\n                return eras[i].narrow;\n            }\n        }\n\n        return '';\n    }\n\n    function getEraAbbr() {\n        var i,\n            l,\n            val,\n            eras = this.localeData().eras();\n        for (i = 0, l = eras.length; i < l; ++i) {\n            // truncate time\n            val = this.startOf('day').valueOf();\n\n            if (eras[i].since <= val && val <= eras[i].until) {\n                return eras[i].abbr;\n            }\n            if (eras[i].until <= val && val <= eras[i].since) {\n                return eras[i].abbr;\n            }\n        }\n\n        return '';\n    }\n\n    function getEraYear() {\n        var i,\n            l,\n            dir,\n            val,\n            eras = this.localeData().eras();\n        for (i = 0, l = eras.length; i < l; ++i) {\n            dir = eras[i].since <= eras[i].until ? +1 : -1;\n\n            // truncate time\n            val = this.startOf('day').valueOf();\n\n            if (\n                (eras[i].since <= val && val <= eras[i].until) ||\n                (eras[i].until <= val && val <= eras[i].since)\n            ) {\n                return (\n                    (this.year() - hooks(eras[i].since).year()) * dir +\n                    eras[i].offset\n                );\n            }\n        }\n\n        return this.year();\n    }\n\n    function erasNameRegex(isStrict) {\n        if (!hasOwnProp(this, '_erasNameRegex')) {\n            computeErasParse.call(this);\n        }\n        return isStrict ? this._erasNameRegex : this._erasRegex;\n    }\n\n    function erasAbbrRegex(isStrict) {\n        if (!hasOwnProp(this, '_erasAbbrRegex')) {\n            computeErasParse.call(this);\n        }\n        return isStrict ? this._erasAbbrRegex : this._erasRegex;\n    }\n\n    function erasNarrowRegex(isStrict) {\n        if (!hasOwnProp(this, '_erasNarrowRegex')) {\n            computeErasParse.call(this);\n        }\n        return isStrict ? this._erasNarrowRegex : this._erasRegex;\n    }\n\n    function matchEraAbbr(isStrict, locale) {\n        return locale.erasAbbrRegex(isStrict);\n    }\n\n    function matchEraName(isStrict, locale) {\n        return locale.erasNameRegex(isStrict);\n    }\n\n    function matchEraNarrow(isStrict, locale) {\n        return locale.erasNarrowRegex(isStrict);\n    }\n\n    function matchEraYearOrdinal(isStrict, locale) {\n        return locale._eraYearOrdinalRegex || matchUnsigned;\n    }\n\n    function computeErasParse() {\n        var abbrPieces = [],\n            namePieces = [],\n            narrowPieces = [],\n            mixedPieces = [],\n            i,\n            l,\n            eras = this.eras();\n\n        for (i = 0, l = eras.length; i < l; ++i) {\n            namePieces.push(regexEscape(eras[i].name));\n            abbrPieces.push(regexEscape(eras[i].abbr));\n            narrowPieces.push(regexEscape(eras[i].narrow));\n\n            mixedPieces.push(regexEscape(eras[i].name));\n            mixedPieces.push(regexEscape(eras[i].abbr));\n            mixedPieces.push(regexEscape(eras[i].narrow));\n        }\n\n        this._erasRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n        this._erasNameRegex = new RegExp('^(' + namePieces.join('|') + ')', 'i');\n        this._erasAbbrRegex = new RegExp('^(' + abbrPieces.join('|') + ')', 'i');\n        this._erasNarrowRegex = new RegExp(\n            '^(' + narrowPieces.join('|') + ')',\n            'i'\n        );\n    }\n\n    // FORMATTING\n\n    addFormatToken(0, ['gg', 2], 0, function () {\n        return this.weekYear() % 100;\n    });\n\n    addFormatToken(0, ['GG', 2], 0, function () {\n        return this.isoWeekYear() % 100;\n    });\n\n    function addWeekYearFormatToken(token, getter) {\n        addFormatToken(0, [token, token.length], 0, getter);\n    }\n\n    addWeekYearFormatToken('gggg', 'weekYear');\n    addWeekYearFormatToken('ggggg', 'weekYear');\n    addWeekYearFormatToken('GGGG', 'isoWeekYear');\n    addWeekYearFormatToken('GGGGG', 'isoWeekYear');\n\n    // ALIASES\n\n    addUnitAlias('weekYear', 'gg');\n    addUnitAlias('isoWeekYear', 'GG');\n\n    // PRIORITY\n\n    addUnitPriority('weekYear', 1);\n    addUnitPriority('isoWeekYear', 1);\n\n    // PARSING\n\n    addRegexToken('G', matchSigned);\n    addRegexToken('g', matchSigned);\n    addRegexToken('GG', match1to2, match2);\n    addRegexToken('gg', match1to2, match2);\n    addRegexToken('GGGG', match1to4, match4);\n    addRegexToken('gggg', match1to4, match4);\n    addRegexToken('GGGGG', match1to6, match6);\n    addRegexToken('ggggg', match1to6, match6);\n\n    addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (\n        input,\n        week,\n        config,\n        token\n    ) {\n        week[token.substr(0, 2)] = toInt(input);\n    });\n\n    addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n        week[token] = hooks.parseTwoDigitYear(input);\n    });\n\n    // MOMENTS\n\n    function getSetWeekYear(input) {\n        return getSetWeekYearHelper.call(\n            this,\n            input,\n            this.week(),\n            this.weekday(),\n            this.localeData()._week.dow,\n            this.localeData()._week.doy\n        );\n    }\n\n    function getSetISOWeekYear(input) {\n        return getSetWeekYearHelper.call(\n            this,\n            input,\n            this.isoWeek(),\n            this.isoWeekday(),\n            1,\n            4\n        );\n    }\n\n    function getISOWeeksInYear() {\n        return weeksInYear(this.year(), 1, 4);\n    }\n\n    function getISOWeeksInISOWeekYear() {\n        return weeksInYear(this.isoWeekYear(), 1, 4);\n    }\n\n    function getWeeksInYear() {\n        var weekInfo = this.localeData()._week;\n        return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n    }\n\n    function getWeeksInWeekYear() {\n        var weekInfo = this.localeData()._week;\n        return weeksInYear(this.weekYear(), weekInfo.dow, weekInfo.doy);\n    }\n\n    function getSetWeekYearHelper(input, week, weekday, dow, doy) {\n        var weeksTarget;\n        if (input == null) {\n            return weekOfYear(this, dow, doy).year;\n        } else {\n            weeksTarget = weeksInYear(input, dow, doy);\n            if (week > weeksTarget) {\n                week = weeksTarget;\n            }\n            return setWeekAll.call(this, input, week, weekday, dow, doy);\n        }\n    }\n\n    function setWeekAll(weekYear, week, weekday, dow, doy) {\n        var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n            date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n\n        this.year(date.getUTCFullYear());\n        this.month(date.getUTCMonth());\n        this.date(date.getUTCDate());\n        return this;\n    }\n\n    // FORMATTING\n\n    addFormatToken('Q', 0, 'Qo', 'quarter');\n\n    // ALIASES\n\n    addUnitAlias('quarter', 'Q');\n\n    // PRIORITY\n\n    addUnitPriority('quarter', 7);\n\n    // PARSING\n\n    addRegexToken('Q', match1);\n    addParseToken('Q', function (input, array) {\n        array[MONTH] = (toInt(input) - 1) * 3;\n    });\n\n    // MOMENTS\n\n    function getSetQuarter(input) {\n        return input == null\n            ? Math.ceil((this.month() + 1) / 3)\n            : this.month((input - 1) * 3 + (this.month() % 3));\n    }\n\n    // FORMATTING\n\n    addFormatToken('D', ['DD', 2], 'Do', 'date');\n\n    // ALIASES\n\n    addUnitAlias('date', 'D');\n\n    // PRIORITY\n    addUnitPriority('date', 9);\n\n    // PARSING\n\n    addRegexToken('D', match1to2);\n    addRegexToken('DD', match1to2, match2);\n    addRegexToken('Do', function (isStrict, locale) {\n        // TODO: Remove \"ordinalParse\" fallback in next major release.\n        return isStrict\n            ? locale._dayOfMonthOrdinalParse || locale._ordinalParse\n            : locale._dayOfMonthOrdinalParseLenient;\n    });\n\n    addParseToken(['D', 'DD'], DATE);\n    addParseToken('Do', function (input, array) {\n        array[DATE] = toInt(input.match(match1to2)[0]);\n    });\n\n    // MOMENTS\n\n    var getSetDayOfMonth = makeGetSet('Date', true);\n\n    // FORMATTING\n\n    addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');\n\n    // ALIASES\n\n    addUnitAlias('dayOfYear', 'DDD');\n\n    // PRIORITY\n    addUnitPriority('dayOfYear', 4);\n\n    // PARSING\n\n    addRegexToken('DDD', match1to3);\n    addRegexToken('DDDD', match3);\n    addParseToken(['DDD', 'DDDD'], function (input, array, config) {\n        config._dayOfYear = toInt(input);\n    });\n\n    // HELPERS\n\n    // MOMENTS\n\n    function getSetDayOfYear(input) {\n        var dayOfYear =\n            Math.round(\n                (this.clone().startOf('day') - this.clone().startOf('year')) / 864e5\n            ) + 1;\n        return input == null ? dayOfYear : this.add(input - dayOfYear, 'd');\n    }\n\n    // FORMATTING\n\n    addFormatToken('m', ['mm', 2], 0, 'minute');\n\n    // ALIASES\n\n    addUnitAlias('minute', 'm');\n\n    // PRIORITY\n\n    addUnitPriority('minute', 14);\n\n    // PARSING\n\n    addRegexToken('m', match1to2);\n    addRegexToken('mm', match1to2, match2);\n    addParseToken(['m', 'mm'], MINUTE);\n\n    // MOMENTS\n\n    var getSetMinute = makeGetSet('Minutes', false);\n\n    // FORMATTING\n\n    addFormatToken('s', ['ss', 2], 0, 'second');\n\n    // ALIASES\n\n    addUnitAlias('second', 's');\n\n    // PRIORITY\n\n    addUnitPriority('second', 15);\n\n    // PARSING\n\n    addRegexToken('s', match1to2);\n    addRegexToken('ss', match1to2, match2);\n    addParseToken(['s', 'ss'], SECOND);\n\n    // MOMENTS\n\n    var getSetSecond = makeGetSet('Seconds', false);\n\n    // FORMATTING\n\n    addFormatToken('S', 0, 0, function () {\n        return ~~(this.millisecond() / 100);\n    });\n\n    addFormatToken(0, ['SS', 2], 0, function () {\n        return ~~(this.millisecond() / 10);\n    });\n\n    addFormatToken(0, ['SSS', 3], 0, 'millisecond');\n    addFormatToken(0, ['SSSS', 4], 0, function () {\n        return this.millisecond() * 10;\n    });\n    addFormatToken(0, ['SSSSS', 5], 0, function () {\n        return this.millisecond() * 100;\n    });\n    addFormatToken(0, ['SSSSSS', 6], 0, function () {\n        return this.millisecond() * 1000;\n    });\n    addFormatToken(0, ['SSSSSSS', 7], 0, function () {\n        return this.millisecond() * 10000;\n    });\n    addFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n        return this.millisecond() * 100000;\n    });\n    addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n        return this.millisecond() * 1000000;\n    });\n\n    // ALIASES\n\n    addUnitAlias('millisecond', 'ms');\n\n    // PRIORITY\n\n    addUnitPriority('millisecond', 16);\n\n    // PARSING\n\n    addRegexToken('S', match1to3, match1);\n    addRegexToken('SS', match1to3, match2);\n    addRegexToken('SSS', match1to3, match3);\n\n    var token, getSetMillisecond;\n    for (token = 'SSSS'; token.length <= 9; token += 'S') {\n        addRegexToken(token, matchUnsigned);\n    }\n\n    function parseMs(input, array) {\n        array[MILLISECOND] = toInt(('0.' + input) * 1000);\n    }\n\n    for (token = 'S'; token.length <= 9; token += 'S') {\n        addParseToken(token, parseMs);\n    }\n\n    getSetMillisecond = makeGetSet('Milliseconds', false);\n\n    // FORMATTING\n\n    addFormatToken('z', 0, 0, 'zoneAbbr');\n    addFormatToken('zz', 0, 0, 'zoneName');\n\n    // MOMENTS\n\n    function getZoneAbbr() {\n        return this._isUTC ? 'UTC' : '';\n    }\n\n    function getZoneName() {\n        return this._isUTC ? 'Coordinated Universal Time' : '';\n    }\n\n    var proto = Moment.prototype;\n\n    proto.add = add;\n    proto.calendar = calendar$1;\n    proto.clone = clone;\n    proto.diff = diff;\n    proto.endOf = endOf;\n    proto.format = format;\n    proto.from = from;\n    proto.fromNow = fromNow;\n    proto.to = to;\n    proto.toNow = toNow;\n    proto.get = stringGet;\n    proto.invalidAt = invalidAt;\n    proto.isAfter = isAfter;\n    proto.isBefore = isBefore;\n    proto.isBetween = isBetween;\n    proto.isSame = isSame;\n    proto.isSameOrAfter = isSameOrAfter;\n    proto.isSameOrBefore = isSameOrBefore;\n    proto.isValid = isValid$2;\n    proto.lang = lang;\n    proto.locale = locale;\n    proto.localeData = localeData;\n    proto.max = prototypeMax;\n    proto.min = prototypeMin;\n    proto.parsingFlags = parsingFlags;\n    proto.set = stringSet;\n    proto.startOf = startOf;\n    proto.subtract = subtract;\n    proto.toArray = toArray;\n    proto.toObject = toObject;\n    proto.toDate = toDate;\n    proto.toISOString = toISOString;\n    proto.inspect = inspect;\n    if (typeof Symbol !== 'undefined' && Symbol.for != null) {\n        proto[Symbol.for('nodejs.util.inspect.custom')] = function () {\n            return 'Moment<' + this.format() + '>';\n        };\n    }\n    proto.toJSON = toJSON;\n    proto.toString = toString;\n    proto.unix = unix;\n    proto.valueOf = valueOf;\n    proto.creationData = creationData;\n    proto.eraName = getEraName;\n    proto.eraNarrow = getEraNarrow;\n    proto.eraAbbr = getEraAbbr;\n    proto.eraYear = getEraYear;\n    proto.year = getSetYear;\n    proto.isLeapYear = getIsLeapYear;\n    proto.weekYear = getSetWeekYear;\n    proto.isoWeekYear = getSetISOWeekYear;\n    proto.quarter = proto.quarters = getSetQuarter;\n    proto.month = getSetMonth;\n    proto.daysInMonth = getDaysInMonth;\n    proto.week = proto.weeks = getSetWeek;\n    proto.isoWeek = proto.isoWeeks = getSetISOWeek;\n    proto.weeksInYear = getWeeksInYear;\n    proto.weeksInWeekYear = getWeeksInWeekYear;\n    proto.isoWeeksInYear = getISOWeeksInYear;\n    proto.isoWeeksInISOWeekYear = getISOWeeksInISOWeekYear;\n    proto.date = getSetDayOfMonth;\n    proto.day = proto.days = getSetDayOfWeek;\n    proto.weekday = getSetLocaleDayOfWeek;\n    proto.isoWeekday = getSetISODayOfWeek;\n    proto.dayOfYear = getSetDayOfYear;\n    proto.hour = proto.hours = getSetHour;\n    proto.minute = proto.minutes = getSetMinute;\n    proto.second = proto.seconds = getSetSecond;\n    proto.millisecond = proto.milliseconds = getSetMillisecond;\n    proto.utcOffset = getSetOffset;\n    proto.utc = setOffsetToUTC;\n    proto.local = setOffsetToLocal;\n    proto.parseZone = setOffsetToParsedOffset;\n    proto.hasAlignedHourOffset = hasAlignedHourOffset;\n    proto.isDST = isDaylightSavingTime;\n    proto.isLocal = isLocal;\n    proto.isUtcOffset = isUtcOffset;\n    proto.isUtc = isUtc;\n    proto.isUTC = isUtc;\n    proto.zoneAbbr = getZoneAbbr;\n    proto.zoneName = getZoneName;\n    proto.dates = deprecate(\n        'dates accessor is deprecated. Use date instead.',\n        getSetDayOfMonth\n    );\n    proto.months = deprecate(\n        'months accessor is deprecated. Use month instead',\n        getSetMonth\n    );\n    proto.years = deprecate(\n        'years accessor is deprecated. Use year instead',\n        getSetYear\n    );\n    proto.zone = deprecate(\n        'moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/',\n        getSetZone\n    );\n    proto.isDSTShifted = deprecate(\n        'isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information',\n        isDaylightSavingTimeShifted\n    );\n\n    function createUnix(input) {\n        return createLocal(input * 1000);\n    }\n\n    function createInZone() {\n        return createLocal.apply(null, arguments).parseZone();\n    }\n\n    function preParsePostFormat(string) {\n        return string;\n    }\n\n    var proto$1 = Locale.prototype;\n\n    proto$1.calendar = calendar;\n    proto$1.longDateFormat = longDateFormat;\n    proto$1.invalidDate = invalidDate;\n    proto$1.ordinal = ordinal;\n    proto$1.preparse = preParsePostFormat;\n    proto$1.postformat = preParsePostFormat;\n    proto$1.relativeTime = relativeTime;\n    proto$1.pastFuture = pastFuture;\n    proto$1.set = set;\n    proto$1.eras = localeEras;\n    proto$1.erasParse = localeErasParse;\n    proto$1.erasConvertYear = localeErasConvertYear;\n    proto$1.erasAbbrRegex = erasAbbrRegex;\n    proto$1.erasNameRegex = erasNameRegex;\n    proto$1.erasNarrowRegex = erasNarrowRegex;\n\n    proto$1.months = localeMonths;\n    proto$1.monthsShort = localeMonthsShort;\n    proto$1.monthsParse = localeMonthsParse;\n    proto$1.monthsRegex = monthsRegex;\n    proto$1.monthsShortRegex = monthsShortRegex;\n    proto$1.week = localeWeek;\n    proto$1.firstDayOfYear = localeFirstDayOfYear;\n    proto$1.firstDayOfWeek = localeFirstDayOfWeek;\n\n    proto$1.weekdays = localeWeekdays;\n    proto$1.weekdaysMin = localeWeekdaysMin;\n    proto$1.weekdaysShort = localeWeekdaysShort;\n    proto$1.weekdaysParse = localeWeekdaysParse;\n\n    proto$1.weekdaysRegex = weekdaysRegex;\n    proto$1.weekdaysShortRegex = weekdaysShortRegex;\n    proto$1.weekdaysMinRegex = weekdaysMinRegex;\n\n    proto$1.isPM = localeIsPM;\n    proto$1.meridiem = localeMeridiem;\n\n    function get$1(format, index, field, setter) {\n        var locale = getLocale(),\n            utc = createUTC().set(setter, index);\n        return locale[field](utc, format);\n    }\n\n    function listMonthsImpl(format, index, field) {\n        if (isNumber(format)) {\n            index = format;\n            format = undefined;\n        }\n\n        format = format || '';\n\n        if (index != null) {\n            return get$1(format, index, field, 'month');\n        }\n\n        var i,\n            out = [];\n        for (i = 0; i < 12; i++) {\n            out[i] = get$1(format, i, field, 'month');\n        }\n        return out;\n    }\n\n    // ()\n    // (5)\n    // (fmt, 5)\n    // (fmt)\n    // (true)\n    // (true, 5)\n    // (true, fmt, 5)\n    // (true, fmt)\n    function listWeekdaysImpl(localeSorted, format, index, field) {\n        if (typeof localeSorted === 'boolean') {\n            if (isNumber(format)) {\n                index = format;\n                format = undefined;\n            }\n\n            format = format || '';\n        } else {\n            format = localeSorted;\n            index = format;\n            localeSorted = false;\n\n            if (isNumber(format)) {\n                index = format;\n                format = undefined;\n            }\n\n            format = format || '';\n        }\n\n        var locale = getLocale(),\n            shift = localeSorted ? locale._week.dow : 0,\n            i,\n            out = [];\n\n        if (index != null) {\n            return get$1(format, (index + shift) % 7, field, 'day');\n        }\n\n        for (i = 0; i < 7; i++) {\n            out[i] = get$1(format, (i + shift) % 7, field, 'day');\n        }\n        return out;\n    }\n\n    function listMonths(format, index) {\n        return listMonthsImpl(format, index, 'months');\n    }\n\n    function listMonthsShort(format, index) {\n        return listMonthsImpl(format, index, 'monthsShort');\n    }\n\n    function listWeekdays(localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\n    }\n\n    function listWeekdaysShort(localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\n    }\n\n    function listWeekdaysMin(localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\n    }\n\n    getSetGlobalLocale('en', {\n        eras: [\n            {\n                since: '0001-01-01',\n                until: +Infinity,\n                offset: 1,\n                name: 'Anno Domini',\n                narrow: 'AD',\n                abbr: 'AD',\n            },\n            {\n                since: '0000-12-31',\n                until: -Infinity,\n                offset: 1,\n                name: 'Before Christ',\n                narrow: 'BC',\n                abbr: 'BC',\n            },\n        ],\n        dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n        ordinal: function (number) {\n            var b = number % 10,\n                output =\n                    toInt((number % 100) / 10) === 1\n                        ? 'th'\n                        : b === 1\n                        ? 'st'\n                        : b === 2\n                        ? 'nd'\n                        : b === 3\n                        ? 'rd'\n                        : 'th';\n            return number + output;\n        },\n    });\n\n    // Side effect imports\n\n    hooks.lang = deprecate(\n        'moment.lang is deprecated. Use moment.locale instead.',\n        getSetGlobalLocale\n    );\n    hooks.langData = deprecate(\n        'moment.langData is deprecated. Use moment.localeData instead.',\n        getLocale\n    );\n\n    var mathAbs = Math.abs;\n\n    function abs() {\n        var data = this._data;\n\n        this._milliseconds = mathAbs(this._milliseconds);\n        this._days = mathAbs(this._days);\n        this._months = mathAbs(this._months);\n\n        data.milliseconds = mathAbs(data.milliseconds);\n        data.seconds = mathAbs(data.seconds);\n        data.minutes = mathAbs(data.minutes);\n        data.hours = mathAbs(data.hours);\n        data.months = mathAbs(data.months);\n        data.years = mathAbs(data.years);\n\n        return this;\n    }\n\n    function addSubtract$1(duration, input, value, direction) {\n        var other = createDuration(input, value);\n\n        duration._milliseconds += direction * other._milliseconds;\n        duration._days += direction * other._days;\n        duration._months += direction * other._months;\n\n        return duration._bubble();\n    }\n\n    // supports only 2.0-style add(1, 's') or add(duration)\n    function add$1(input, value) {\n        return addSubtract$1(this, input, value, 1);\n    }\n\n    // supports only 2.0-style subtract(1, 's') or subtract(duration)\n    function subtract$1(input, value) {\n        return addSubtract$1(this, input, value, -1);\n    }\n\n    function absCeil(number) {\n        if (number < 0) {\n            return Math.floor(number);\n        } else {\n            return Math.ceil(number);\n        }\n    }\n\n    function bubble() {\n        var milliseconds = this._milliseconds,\n            days = this._days,\n            months = this._months,\n            data = this._data,\n            seconds,\n            minutes,\n            hours,\n            years,\n            monthsFromDays;\n\n        // if we have a mix of positive and negative values, bubble down first\n        // check: https://github.com/moment/moment/issues/2166\n        if (\n            !(\n                (milliseconds >= 0 && days >= 0 && months >= 0) ||\n                (milliseconds <= 0 && days <= 0 && months <= 0)\n            )\n        ) {\n            milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n            days = 0;\n            months = 0;\n        }\n\n        // The following code bubbles up values, see the tests for\n        // examples of what that means.\n        data.milliseconds = milliseconds % 1000;\n\n        seconds = absFloor(milliseconds / 1000);\n        data.seconds = seconds % 60;\n\n        minutes = absFloor(seconds / 60);\n        data.minutes = minutes % 60;\n\n        hours = absFloor(minutes / 60);\n        data.hours = hours % 24;\n\n        days += absFloor(hours / 24);\n\n        // convert days to months\n        monthsFromDays = absFloor(daysToMonths(days));\n        months += monthsFromDays;\n        days -= absCeil(monthsToDays(monthsFromDays));\n\n        // 12 months -> 1 year\n        years = absFloor(months / 12);\n        months %= 12;\n\n        data.days = days;\n        data.months = months;\n        data.years = years;\n\n        return this;\n    }\n\n    function daysToMonths(days) {\n        // 400 years have 146097 days (taking into account leap year rules)\n        // 400 years have 12 months === 4800\n        return (days * 4800) / 146097;\n    }\n\n    function monthsToDays(months) {\n        // the reverse of daysToMonths\n        return (months * 146097) / 4800;\n    }\n\n    function as(units) {\n        if (!this.isValid()) {\n            return NaN;\n        }\n        var days,\n            months,\n            milliseconds = this._milliseconds;\n\n        units = normalizeUnits(units);\n\n        if (units === 'month' || units === 'quarter' || units === 'year') {\n            days = this._days + milliseconds / 864e5;\n            months = this._months + daysToMonths(days);\n            switch (units) {\n                case 'month':\n                    return months;\n                case 'quarter':\n                    return months / 3;\n                case 'year':\n                    return months / 12;\n            }\n        } else {\n            // handle milliseconds separately because of floating point math errors (issue #1867)\n            days = this._days + Math.round(monthsToDays(this._months));\n            switch (units) {\n                case 'week':\n                    return days / 7 + milliseconds / 6048e5;\n                case 'day':\n                    return days + milliseconds / 864e5;\n                case 'hour':\n                    return days * 24 + milliseconds / 36e5;\n                case 'minute':\n                    return days * 1440 + milliseconds / 6e4;\n                case 'second':\n                    return days * 86400 + milliseconds / 1000;\n                // Math.floor prevents floating point math errors here\n                case 'millisecond':\n                    return Math.floor(days * 864e5) + milliseconds;\n                default:\n                    throw new Error('Unknown unit ' + units);\n            }\n        }\n    }\n\n    // TODO: Use this.as('ms')?\n    function valueOf$1() {\n        if (!this.isValid()) {\n            return NaN;\n        }\n        return (\n            this._milliseconds +\n            this._days * 864e5 +\n            (this._months % 12) * 2592e6 +\n            toInt(this._months / 12) * 31536e6\n        );\n    }\n\n    function makeAs(alias) {\n        return function () {\n            return this.as(alias);\n        };\n    }\n\n    var asMilliseconds = makeAs('ms'),\n        asSeconds = makeAs('s'),\n        asMinutes = makeAs('m'),\n        asHours = makeAs('h'),\n        asDays = makeAs('d'),\n        asWeeks = makeAs('w'),\n        asMonths = makeAs('M'),\n        asQuarters = makeAs('Q'),\n        asYears = makeAs('y');\n\n    function clone$1() {\n        return createDuration(this);\n    }\n\n    function get$2(units) {\n        units = normalizeUnits(units);\n        return this.isValid() ? this[units + 's']() : NaN;\n    }\n\n    function makeGetter(name) {\n        return function () {\n            return this.isValid() ? this._data[name] : NaN;\n        };\n    }\n\n    var milliseconds = makeGetter('milliseconds'),\n        seconds = makeGetter('seconds'),\n        minutes = makeGetter('minutes'),\n        hours = makeGetter('hours'),\n        days = makeGetter('days'),\n        months = makeGetter('months'),\n        years = makeGetter('years');\n\n    function weeks() {\n        return absFloor(this.days() / 7);\n    }\n\n    var round = Math.round,\n        thresholds = {\n            ss: 44, // a few seconds to seconds\n            s: 45, // seconds to minute\n            m: 45, // minutes to hour\n            h: 22, // hours to day\n            d: 26, // days to month/week\n            w: null, // weeks to month\n            M: 11, // months to year\n        };\n\n    // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n    function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n        return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n    }\n\n    function relativeTime$1(posNegDuration, withoutSuffix, thresholds, locale) {\n        var duration = createDuration(posNegDuration).abs(),\n            seconds = round(duration.as('s')),\n            minutes = round(duration.as('m')),\n            hours = round(duration.as('h')),\n            days = round(duration.as('d')),\n            months = round(duration.as('M')),\n            weeks = round(duration.as('w')),\n            years = round(duration.as('y')),\n            a =\n                (seconds <= thresholds.ss && ['s', seconds]) ||\n                (seconds < thresholds.s && ['ss', seconds]) ||\n                (minutes <= 1 && ['m']) ||\n                (minutes < thresholds.m && ['mm', minutes]) ||\n                (hours <= 1 && ['h']) ||\n                (hours < thresholds.h && ['hh', hours]) ||\n                (days <= 1 && ['d']) ||\n                (days < thresholds.d && ['dd', days]);\n\n        if (thresholds.w != null) {\n            a =\n                a ||\n                (weeks <= 1 && ['w']) ||\n                (weeks < thresholds.w && ['ww', weeks]);\n        }\n        a = a ||\n            (months <= 1 && ['M']) ||\n            (months < thresholds.M && ['MM', months]) ||\n            (years <= 1 && ['y']) || ['yy', years];\n\n        a[2] = withoutSuffix;\n        a[3] = +posNegDuration > 0;\n        a[4] = locale;\n        return substituteTimeAgo.apply(null, a);\n    }\n\n    // This function allows you to set the rounding function for relative time strings\n    function getSetRelativeTimeRounding(roundingFunction) {\n        if (roundingFunction === undefined) {\n            return round;\n        }\n        if (typeof roundingFunction === 'function') {\n            round = roundingFunction;\n            return true;\n        }\n        return false;\n    }\n\n    // This function allows you to set a threshold for relative time strings\n    function getSetRelativeTimeThreshold(threshold, limit) {\n        if (thresholds[threshold] === undefined) {\n            return false;\n        }\n        if (limit === undefined) {\n            return thresholds[threshold];\n        }\n        thresholds[threshold] = limit;\n        if (threshold === 's') {\n            thresholds.ss = limit - 1;\n        }\n        return true;\n    }\n\n    function humanize(argWithSuffix, argThresholds) {\n        if (!this.isValid()) {\n            return this.localeData().invalidDate();\n        }\n\n        var withSuffix = false,\n            th = thresholds,\n            locale,\n            output;\n\n        if (typeof argWithSuffix === 'object') {\n            argThresholds = argWithSuffix;\n            argWithSuffix = false;\n        }\n        if (typeof argWithSuffix === 'boolean') {\n            withSuffix = argWithSuffix;\n        }\n        if (typeof argThresholds === 'object') {\n            th = Object.assign({}, thresholds, argThresholds);\n            if (argThresholds.s != null && argThresholds.ss == null) {\n                th.ss = argThresholds.s - 1;\n            }\n        }\n\n        locale = this.localeData();\n        output = relativeTime$1(this, !withSuffix, th, locale);\n\n        if (withSuffix) {\n            output = locale.pastFuture(+this, output);\n        }\n\n        return locale.postformat(output);\n    }\n\n    var abs$1 = Math.abs;\n\n    function sign(x) {\n        return (x > 0) - (x < 0) || +x;\n    }\n\n    function toISOString$1() {\n        // for ISO strings we do not use the normal bubbling rules:\n        //  * milliseconds bubble up until they become hours\n        //  * days do not bubble at all\n        //  * months bubble up until they become years\n        // This is because there is no context-free conversion between hours and days\n        // (think of clock changes)\n        // and also not between days and months (28-31 days per month)\n        if (!this.isValid()) {\n            return this.localeData().invalidDate();\n        }\n\n        var seconds = abs$1(this._milliseconds) / 1000,\n            days = abs$1(this._days),\n            months = abs$1(this._months),\n            minutes,\n            hours,\n            years,\n            s,\n            total = this.asSeconds(),\n            totalSign,\n            ymSign,\n            daysSign,\n            hmsSign;\n\n        if (!total) {\n            // this is the same as C#'s (Noda) and python (isodate)...\n            // but not other JS (goog.date)\n            return 'P0D';\n        }\n\n        // 3600 seconds -> 60 minutes -> 1 hour\n        minutes = absFloor(seconds / 60);\n        hours = absFloor(minutes / 60);\n        seconds %= 60;\n        minutes %= 60;\n\n        // 12 months -> 1 year\n        years = absFloor(months / 12);\n        months %= 12;\n\n        // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n        s = seconds ? seconds.toFixed(3).replace(/\\.?0+$/, '') : '';\n\n        totalSign = total < 0 ? '-' : '';\n        ymSign = sign(this._months) !== sign(total) ? '-' : '';\n        daysSign = sign(this._days) !== sign(total) ? '-' : '';\n        hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';\n\n        return (\n            totalSign +\n            'P' +\n            (years ? ymSign + years + 'Y' : '') +\n            (months ? ymSign + months + 'M' : '') +\n            (days ? daysSign + days + 'D' : '') +\n            (hours || minutes || seconds ? 'T' : '') +\n            (hours ? hmsSign + hours + 'H' : '') +\n            (minutes ? hmsSign + minutes + 'M' : '') +\n            (seconds ? hmsSign + s + 'S' : '')\n        );\n    }\n\n    var proto$2 = Duration.prototype;\n\n    proto$2.isValid = isValid$1;\n    proto$2.abs = abs;\n    proto$2.add = add$1;\n    proto$2.subtract = subtract$1;\n    proto$2.as = as;\n    proto$2.asMilliseconds = asMilliseconds;\n    proto$2.asSeconds = asSeconds;\n    proto$2.asMinutes = asMinutes;\n    proto$2.asHours = asHours;\n    proto$2.asDays = asDays;\n    proto$2.asWeeks = asWeeks;\n    proto$2.asMonths = asMonths;\n    proto$2.asQuarters = asQuarters;\n    proto$2.asYears = asYears;\n    proto$2.valueOf = valueOf$1;\n    proto$2._bubble = bubble;\n    proto$2.clone = clone$1;\n    proto$2.get = get$2;\n    proto$2.milliseconds = milliseconds;\n    proto$2.seconds = seconds;\n    proto$2.minutes = minutes;\n    proto$2.hours = hours;\n    proto$2.days = days;\n    proto$2.weeks = weeks;\n    proto$2.months = months;\n    proto$2.years = years;\n    proto$2.humanize = humanize;\n    proto$2.toISOString = toISOString$1;\n    proto$2.toString = toISOString$1;\n    proto$2.toJSON = toISOString$1;\n    proto$2.locale = locale;\n    proto$2.localeData = localeData;\n\n    proto$2.toIsoString = deprecate(\n        'toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)',\n        toISOString$1\n    );\n    proto$2.lang = lang;\n\n    // FORMATTING\n\n    addFormatToken('X', 0, 0, 'unix');\n    addFormatToken('x', 0, 0, 'valueOf');\n\n    // PARSING\n\n    addRegexToken('x', matchSigned);\n    addRegexToken('X', matchTimestamp);\n    addParseToken('X', function (input, array, config) {\n        config._d = new Date(parseFloat(input) * 1000);\n    });\n    addParseToken('x', function (input, array, config) {\n        config._d = new Date(toInt(input));\n    });\n\n    //! moment.js\n\n    hooks.version = '2.27.0';\n\n    setHookCallback(createLocal);\n\n    hooks.fn = proto;\n    hooks.min = min;\n    hooks.max = max;\n    hooks.now = now;\n    hooks.utc = createUTC;\n    hooks.unix = createUnix;\n    hooks.months = listMonths;\n    hooks.isDate = isDate;\n    hooks.locale = getSetGlobalLocale;\n    hooks.invalid = createInvalid;\n    hooks.duration = createDuration;\n    hooks.isMoment = isMoment;\n    hooks.weekdays = listWeekdays;\n    hooks.parseZone = createInZone;\n    hooks.localeData = getLocale;\n    hooks.isDuration = isDuration;\n    hooks.monthsShort = listMonthsShort;\n    hooks.weekdaysMin = listWeekdaysMin;\n    hooks.defineLocale = defineLocale;\n    hooks.updateLocale = updateLocale;\n    hooks.locales = listLocales;\n    hooks.weekdaysShort = listWeekdaysShort;\n    hooks.normalizeUnits = normalizeUnits;\n    hooks.relativeTimeRounding = getSetRelativeTimeRounding;\n    hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;\n    hooks.calendarFormat = getCalendarFormat;\n    hooks.prototype = proto;\n\n    // currently HTML5 input type only supports 24-hour formats\n    hooks.HTML5_FMT = {\n        DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm', // <input type=\"datetime-local\" />\n        DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss', // <input type=\"datetime-local\" step=\"1\" />\n        DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS', // <input type=\"datetime-local\" step=\"0.001\" />\n        DATE: 'YYYY-MM-DD', // <input type=\"date\" />\n        TIME: 'HH:mm', // <input type=\"time\" />\n        TIME_SECONDS: 'HH:mm:ss', // <input type=\"time\" step=\"1\" />\n        TIME_MS: 'HH:mm:ss.SSS', // <input type=\"time\" step=\"0.001\" />\n        WEEK: 'GGGG-[W]WW', // <input type=\"week\" />\n        MONTH: 'YYYY-MM', // <input type=\"month\" />\n    };\n\n    return hooks;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/moment.js\n// module id = 5\n// module chunks = 1"],"sourceRoot":""}